/*
 * Samsung Exynos SoC series Pablo driver
 *
 * Copyright (c) 2019 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <dt-bindings/camera/exynos_is_dt.h>
#include <dt-bindings/interrupt-controller/exynos9630.h>
#include <dt-bindings/clock/exynos9630.h>

#include "camera/module_imx582.dtsi"
#include "camera/module_imx616.dtsi"

/* REAR CAMERA */
&is_sensor_imx582 {
	pinctrl-names = "pin0", "pin1", "pin2", "release";
	pinctrl-0 = <&sensor_mclk1_out>;
	pinctrl-1 = <&sensor_mclk1_fn>;
	pinctrl-2 = <>;
	pinctrl-3 = <>;

	position = <0>; /* Rear:0. Front:1 */
	id = <0>; /* is_sensor id */
	mclk_ch = <1>;

	status = "okay";

	af {
		product_name = <24>; /* ACTUATOR_NAME_DW9808 */
	};

	power_seq {
		use = <1>;
		gpio_mclk = <&gpg0 4 0x1>;

		scenario_normal_on {
			sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
			gpio_scenario = <GPIO_SCENARIO_ON>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 500>; gpio = <&gpm13 0 0x1>; };
			20 { pname = "CAM_VLDO5"; pin = <PIN_REGULATOR 1 0>; }; /* IMX582_AVDD1 2.9V */
			30 { pname = "CAM_VLDO2"; pin = <PIN_REGULATOR 1 0>; }; /* IMX582_AVDD2 1.8V */ /* FIXME */
			40 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 1 0>; }; /* IMX582_IOVDD 1.8V */
			50 { pname = "CAM_VLDO2"; pin = <PIN_REGULATOR 1 0>; }; /* IMX582_DVDD 1.1V */
			60 { pname = "CAM_VLDO7"; pin = <PIN_REGULATOR 1 500>; }; /* RCAM_AF_VDD 2.8V */
			70 { pname = "on_i2c"; pin = <PIN_I2C 1 10>; };
			80 { pname = "pin"; pin = <PIN_FUNCTION 1 1000>; share; };
			90 { pname = "MCLK"; pin = <PIN_MCLK 1 1500>; };
			100 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 0>; gpio = <&gpm13 0 0x1>; };
			110 { pname = "delay"; pin = <PIN_NONE 0 10000>; };
		};

		scenario_normal_off {
			sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
			gpio_scenario = <GPIO_SCENARIO_OFF>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "delay"; pin = <PIN_NONE 0 5000>; };
			20 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpm13 0 0x1>; };
			30 { pname = "MCLK"; pin = <PIN_MCLK 0 0>; };
			40 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; share; };
			50 { pname = "pin"; pin = <PIN_FUNCTION 2 1000>; };
			60 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
			70 { pname = "CAM_VLDO7"; pin = <PIN_REGULATOR 0 500>; }; /* RCAM_AF_VDD 2.8V */
			80 { pname = "CAM_VLDO5"; pin = <PIN_REGULATOR 0 0>; }; /* IMX582_AVDD1 2.9V */
			90 { pname = "CAM_VLDO2"; pin = <PIN_REGULATOR 0 0>; }; /* IMX582_AVDD2 1.8V */
			100 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 0 0>; }; /* IMX582_IOVDD 1.8V */
			110 { pname = "CAM_VLDO2"; pin = <PIN_REGULATOR 0 0>; }; /* IMX582_DVDD 1.1V */
		};

		scenario_read_rom_on {
			sensor_scenario = <SENSOR_SCENARIO_READ_ROM>;
			gpio_scenario = <GPIO_SCENARIO_ON>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "CAM_VLDO7"; pin = <PIN_REGULATOR 1 0>; }; /* RCAM_AF_VDD 2.8V */
			20 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 1 0>; }; /* IMX582_IOVDD 1.8V */
			30 { pname = "delay"; pin = <PIN_NONE 0 3000>; };
		};

		scenario_read_rom_off {
			sensor_scenario = <SENSOR_SCENARIO_READ_ROM>;
			gpio_scenario = <GPIO_SCENARIO_OFF>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "CAM_VLDO7"; pin = <PIN_REGULATOR 0 0>; }; /* RCAM_AF_VDD 2.8V */
			20 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 0 0>; }; /* IMX582_IOVDD 1.8V */
		};

		scenario_vision_on {
			sensor_scenario = <SENSOR_SCENARIO_VISION>;
			gpio_scenario = <GPIO_SCENARIO_ON>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 500>; gpio = <&gpm13 0 0x1>; };
			20 { pname = "CAM_VLDO5"; pin = <PIN_REGULATOR 1 0>; }; /* IMX582_AVDD1 2.9V */
			30 { pname = "CAM_VLDO2"; pin = <PIN_REGULATOR 1 0>; }; /* IMX582_AVDD2 1.8V */
			40 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 1 0>; }; /* IMX582_IOVDD 1.8V */
			50 { pname = "CAM_VLDO2"; pin = <PIN_REGULATOR 1 0>; }; /* IMX582_DVDD 1.1V */
			60 { pname = "CAM_VLDO7"; pin = <PIN_REGULATOR 1 500>; }; /* RCAM_AF_VDD 2.8V */
			70 { pname = "on_i2c"; pin = <PIN_I2C 1 10>; };
			80 { pname = "pin"; pin = <PIN_FUNCTION 1 1000>; share; };
			90 { pname = "MCLK"; pin = <PIN_MCLK 1 1500>; };
			100 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 0>; gpio = <&gpm13 0 0x1>; };
			110 { pname = "delay"; pin = <PIN_NONE 0 10000>; };
		};

		scenario_vision_off {
			sensor_scenario = <SENSOR_SCENARIO_VISION>;
			gpio_scenario = <GPIO_SCENARIO_OFF>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "delay"; pin = <PIN_NONE 0 5000>; };
			20 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpm13 0 0x1>; };
			30 { pname = "MCLK"; pin = <PIN_MCLK 0 0>; };
			40 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; share; };
			50 { pname = "pin"; pin = <PIN_FUNCTION 2 1000>; };
			60 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
			70 { pname = "CAM_VLDO7"; pin = <PIN_REGULATOR 0 500>; }; /* RCAM_AF_VDD 2.8V */
			80 { pname = "CAM_VLDO5"; pin = <PIN_REGULATOR 0 0>; }; /* IMX582_AVDD1 2.9V */
			90 { pname = "CAM_VLDO2"; pin = <PIN_REGULATOR 0 0>; }; /* IMX582_AVDD2 1.8V */
			100 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 0 0>; }; /* IMX582_IOVDD 1.8V */
			110 { pname = "CAM_VLDO2"; pin = <PIN_REGULATOR 0 0>; }; /* IMX582_DVDD 1.1V */
		};
	};
};

/* FRONT CAMERA */
&is_sensor_imx616 {
	pinctrl-names = "pin0", "pin1", "pin2", "release";
	pinctrl-0 = <>;
	pinctrl-1 = <&sensor_mclk0_out>;
	pinctrl-2 = <&sensor_mclk0_fn>;
	pinctrl-3 = <>;

	position = <1>; /* Rear:0, Front:1, Rear_sub(Rear2):2, Rear_UW(Rear3): 4 */
	id = <1>; /* is_sensor id */
	mclk_ch = <0>;

	status = "okay";

	power_seq {
		use = <1>;
		gpio_mclk = <&gpg0 3 0x1>;

		scenario_normal_on {
			sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
			gpio_scenario = <GPIO_SCENARIO_ON>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 500>; gpio = <&gpm12 0 0x1>; };
			20 { pname = "CAM_VLDO6"; pin = <PIN_REGULATOR 1 0>; }; /* IMX616_AVDD 2.8V */
			30 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 1 0>; }; /* IMX616_IOVDD 1.8V */
			40 { pname = "CAM_VLDO1"; pin = <PIN_REGULATOR 1 500>; }; /* IMX616_DVDD 1.05V */
			50 { pname = "on_i2c"; pin = <PIN_I2C 1 10>; };
			60 { pname = "pin"; pin = <PIN_FUNCTION 2 1000>; };
			70 { pname = "MCLK"; pin = <PIN_MCLK 1 1500>; };
			80 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 0>; gpio = <&gpm12 0 0x1>; };
			90 { pname = "delay"; pin = <PIN_NONE 0 15000>; };
		};

		scenario_normal_off {
			sensor_scenario = <SENSOR_SCENARIO_NORMAL>;
			gpio_scenario = <GPIO_SCENARIO_OFF>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "delay"; pin = <PIN_NONE 0 5000>; };
			20 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpm12 0 0x1>; };
			30 { pname = "MCLK"; pin = <PIN_MCLK 0 0>; };
			40 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
			50 { pname = "pin"; pin = <PIN_FUNCTION 1 500>; };
			60 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
			70 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
			80 { pname = "CAM_VLDO6"; pin = <PIN_REGULATOR 0 0>; }; /* IMX616_AVDD 2.8V */
			90 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 0 0>; }; /* IMX616_IOVDD 1.8V */
			100 { pname = "CAM_VLDO1"; pin = <PIN_REGULATOR 0 0>; }; /* IMX616_DVDD 1.05V */
		};

		scenario_read_rom_on {
			sensor_scenario = <SENSOR_SCENARIO_READ_ROM>;
			gpio_scenario = <GPIO_SCENARIO_ON>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 1 0>; }; /* IMX616_IOVDD 1.8V */
			20 { pname = "SENSOR_SET_DELAY"; pin = <PIN_NONE 0 3000>; };
		};

		scenario_read_rom_off {
			sensor_scenario = <SENSOR_SCENARIO_READ_ROM>;
			gpio_scenario = <GPIO_SCENARIO_OFF>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 0 0>; }; /* IMX616_IOVDD 1.8V */
		};

		scenario_vision_on {
			sensor_scenario = <SENSOR_SCENARIO_VISION>;
			gpio_scenario = <GPIO_SCENARIO_ON>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 500>; gpio = <&gpm12 0 0x1>; };
			20 { pname = "CAM_VLDO6"; pin = <PIN_REGULATOR 1 0>; }; /* IMX616_AVDD 2.8V */
			30 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 1 0>; }; /* IMX616_IOVDD 1.8V */
			40 { pname = "CAM_VLDO2"; pin = <PIN_REGULATOR 1 500>; }; /* IMX616_DVDD 1.05V */
			50 { pname = "on_i2c"; pin = <PIN_I2C 1 10>; };
			60 { pname = "pin"; pin = <PIN_FUNCTION 2 1000>; };
			70 { pname = "MCLK"; pin = <PIN_MCLK 1 1500>; };
			80 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 0>; gpio = <&gpm12 0 0x1>; };
			90 { pname = "delay"; pin = <PIN_NONE 0 15000>; };
		};

		scenario_vision_off {
			sensor_scenario = <SENSOR_SCENARIO_VISION>;
			gpio_scenario = <GPIO_SCENARIO_OFF>;

			/* A start node number should be over the 10 for reserved number 0~9. */
			/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
			10 { pname = "delay"; pin = <PIN_NONE 0 5000>; };
			20 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpm12 0 0x1>; };
			30 { pname = "MCLK"; pin = <PIN_MCLK 0 0>; };
			40 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
			50 { pname = "pin"; pin = <PIN_FUNCTION 1 500>; };
			60 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
			70 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
			80 { pname = "CAM_VLDO6"; pin = <PIN_REGULATOR 0 0>; }; /* IMX616_AVDD 2.8V */
			90 { pname = "CAM_VLDO3"; pin = <PIN_REGULATOR 0 0>; }; /* IMX616_IOVDD 1.8V */
			100 { pname = "CAM_VLDO2"; pin = <PIN_REGULATOR 0 0>; }; /* IMX616_DVDD 1.05V */
		};
	};
};

/***** reference symbol node *****/

&exynos_is {
	vender {
		rear_sensor_id = <120>; /* IMX582 */
		front_sensor_id = <121>; /* IMX616 */
	};

	lic_offsets {
		/* 3AA = <setA lic offset0, setA lic offset1, set A trigger context */
		/*		setB lic offset0, setB lic offset1, set B trigger context> */
		/* 4672: 4640x4352 */
		/* 5824: 5804x4352 */
		3AA = <6848 13696 1 6848 13696 2>;
	};

	is_dvfs {
		#define DVFS_INT_CAM_L0 533000
		#define DVFS_INT_CAM_L1 532000
		#define DVFS_INT_CAM_L2 444000
		#define DVFS_INT_CAM_L3 400000
		#define DVFS_INT_CAM_L4 333000
		#define DVFS_INT_CAM_L5 222000
		#define DVFS_INT_CAM_L6 167000
		#define DVFS_INT_CAM_L7 107000

		#define DVFS_TNR_L0 533000
		#define DVFS_TNR_L1 444000
		#define DVFS_TNR_L2 400000
		#define DVFS_TNR_L3 333000
		#define DVFS_TNR_L4 222000
		#define DVFS_TNR_L5 167000
		#define DVFS_TNR_L6 107000

		#define DVFS_INT_L0 666000
		#define DVFS_INT_L1 533000
		#define DVFS_INT_L2 400000
		#define DVFS_INT_L3 266000
		#define DVFS_INT_L4 200000
		#define DVFS_INT_L5 133000

		#define DVFS_CAM_L0 533000
		#define DVFS_CAM_L1 444000
		#define DVFS_CAM_L2 400000
		#define DVFS_CAM_L3 333000
		#define DVFS_CAM_L4 267000
		#define DVFS_CAM_L5 222000
		#define DVFS_CAM_L6 100000

		#define DVFS_MIF_L0 2093000
		#define DVFS_MIF_L1 1794000
		#define DVFS_MIF_L2 1539000
		#define DVFS_MIF_L3 1352000
		#define DVFS_MIF_L4 1014000
		#define DVFS_MIF_L5 845000
		#define DVFS_MIF_L6 676000
		#define DVFS_MIF_L7 546000
		#define DVFS_MIF_L8 421000

		table0 {
			desc = "dvfs table v0.0 for 12M/8M/5M";

			default_int_cam = <DVFS_INT_CAM_L2>;
			default_tnr = <DVFS_TNR_L1>;
			default_cam = <DVFS_CAM_L0>;
			default_mif = <DVFS_MIF_L2>;
			default_int = <DVFS_INT_L4>;
			default_hpg = <0>;

			front2_preview_int_cam = <DVFS_INT_CAM_L2>;
			front2_preview_tnr = <DVFS_TNR_L1>;
			front2_preview_cam = <DVFS_CAM_L0>;
			front2_preview_mif = <DVFS_MIF_L2>;
			front2_preview_int = <DVFS_INT_L4>;
			front2_preview_hpg = <0>;

			front2_capture_int_cam = <DVFS_INT_CAM_L2>;
			front2_capture_tnr = <DVFS_TNR_L1>;
			front2_capture_cam = <DVFS_CAM_L0>;
			front2_capture_mif = <DVFS_MIF_L2>;
			front2_capture_int = <DVFS_INT_L4>;
			front2_capture_hpg = <0>;

			front2_video_int_cam = <DVFS_INT_CAM_L2>;
			front2_video_tnr = <DVFS_TNR_L1>;
			front2_video_cam = <DVFS_CAM_L0>;
			front2_video_mif = <DVFS_MIF_L2>;
			front2_video_int = <DVFS_INT_L4>;
			front2_video_hpg = <0>;

			front2_video_capture_int_cam = <DVFS_INT_CAM_L2>;
			front2_video_capture_tnr = <DVFS_TNR_L1>;
			front2_video_capture_cam = <DVFS_CAM_L0>;
			front2_video_capture_mif = <DVFS_MIF_L2>;
			front2_video_capture_int = <DVFS_INT_L4>;
			front2_video_capture_hpg = <0>;

			front_preview_int_cam = <DVFS_INT_CAM_L5>;
			front_preview_tnr = <DVFS_TNR_L4>;
			front_preview_cam = <DVFS_CAM_L4>;
			front_preview_mif = <DVFS_MIF_L4>;
			front_preview_int = <DVFS_INT_L4>;
			front_preview_hpg = <0>;

			front_preview_full_int_cam = <DVFS_INT_CAM_L5>;
			front_preview_full_tnr = <DVFS_TNR_L4>;
			front_preview_full_cam = <DVFS_CAM_L4>;
			front_preview_full_mif = <DVFS_MIF_L4>;
			front_preview_full_int = <DVFS_INT_L4>;
			front_preview_full_hpg = <0>;

			front_capture_int_cam = <DVFS_INT_CAM_L2>;
			front_capture_tnr = <DVFS_TNR_L1>;
			front_capture_cam = <DVFS_CAM_L4>;
			front_capture_mif = <DVFS_MIF_L1>;
			front_capture_int = <DVFS_INT_L4>;
			front_capture_hpg = <0>;

			front_video_int_cam = <DVFS_INT_CAM_L5>;
			front_video_tnr = <DVFS_TNR_L4>;
			front_video_cam = <DVFS_CAM_L4>;
			front_video_mif = <DVFS_MIF_L4>;
			front_video_int = <DVFS_INT_L4>;
			front_video_hpg = <0>;

			front_video_whd_int_cam = <DVFS_INT_CAM_L5>;
			front_video_whd_tnr = <DVFS_TNR_L4>;
			front_video_whd_cam = <DVFS_CAM_L4>;
			front_video_whd_mif = <DVFS_MIF_L4>;
			front_video_whd_int = <DVFS_INT_L4>;
			front_video_whd_hpg = <0>;

			front_video_uhd_int_cam = <DVFS_INT_CAM_L5>;
			front_video_uhd_tnr = <DVFS_TNR_L4>;
			front_video_uhd_cam = <DVFS_CAM_L4>;
			front_video_uhd_mif = <DVFS_MIF_L4>;
			front_video_uhd_int = <DVFS_INT_L4>;
			front_video_uhd_hpg = <0>;

			front_video_capture_int_cam = <DVFS_INT_CAM_L2>;
			front_video_capture_tnr = <DVFS_TNR_L1>;
			front_video_capture_cam = <DVFS_CAM_L4>;
			front_video_capture_mif = <DVFS_MIF_L1>;
			front_video_capture_int = <DVFS_INT_L4>;
			front_video_capture_hpg = <0>;

			front_video_whd_capture_int_cam = <DVFS_INT_CAM_L2>;
			front_video_whd_capture_tnr = <DVFS_TNR_L1>;
			front_video_whd_capture_cam = <DVFS_CAM_L4>;
			front_video_whd_capture_mif = <DVFS_MIF_L1>;
			front_video_whd_capture_int = <DVFS_INT_L4>;
			front_video_whd_capture_hpg = <0>;

			front_video_uhd_capture_int_cam = <DVFS_INT_CAM_L2>;
			front_video_uhd_capture_tnr = <DVFS_TNR_L1>;
			front_video_uhd_capture_cam = <DVFS_CAM_L4>;
			front_video_uhd_capture_mif = <DVFS_MIF_L1>;
			front_video_uhd_capture_int = <DVFS_INT_L4>;
			front_video_uhd_capture_hpg = <0>;

			front_dual_sync_preview_int_cam = <DVFS_INT_CAM_L2>;
			front_dual_sync_preview_tnr = <DVFS_TNR_L1>;
			front_dual_sync_preview_cam = <DVFS_CAM_L0>;
			front_dual_sync_preview_mif = <DVFS_MIF_L2>;
			front_dual_sync_preview_int = <DVFS_INT_L4>;
			front_dual_sync_preview_hpg = <0>;

			front_dual_sync_capture_int_cam = <DVFS_INT_CAM_L2>;
			front_dual_sync_capture_tnr = <DVFS_TNR_L1>;
			front_dual_sync_capture_cam = <DVFS_CAM_L0>;
			front_dual_sync_capture_mif = <DVFS_MIF_L2>;
			front_dual_sync_capture_int = <DVFS_INT_L4>;
			front_dual_sync_capture_hpg = <0>;

			front_dual_sync_video_fhd_int_cam = <DVFS_INT_CAM_L2>;
			front_dual_sync_video_fhd_tnr = <DVFS_TNR_L1>;
			front_dual_sync_video_fhd_cam = <DVFS_CAM_L0>;
			front_dual_sync_video_fhd_mif = <DVFS_MIF_L2>;
			front_dual_sync_video_fhd_int = <DVFS_INT_L4>;
			front_dual_sync_video_fhd_hpg = <0>;

			front_dual_sync_video_fhd_capture_int_cam = <DVFS_INT_CAM_L2>;
			front_dual_sync_video_fhd_capture_tnr = <DVFS_TNR_L1>;
			front_dual_sync_video_fhd_capture_cam = <DVFS_CAM_L0>;
			front_dual_sync_video_fhd_capture_mif = <DVFS_MIF_L2>;
			front_dual_sync_video_fhd_capture_int = <DVFS_INT_L4>;
			front_dual_sync_video_fhd_capture_hpg = <0>;

			front_vt1_int_cam = <DVFS_INT_CAM_L2>;
			front_vt1_tnr = <DVFS_TNR_L1>;
			front_vt1_cam = <DVFS_CAM_L0>;
			front_vt1_mif = <DVFS_MIF_L2>;
			front_vt1_int = <DVFS_INT_L4>;
			front_vt1_hpg = <0>;

			front_vt2_int_cam = <DVFS_INT_CAM_L2>;
			front_vt2_tnr = <DVFS_TNR_L1>;
			front_vt2_cam = <DVFS_CAM_L0>;
			front_vt2_mif = <DVFS_MIF_L2>;
			front_vt2_int = <DVFS_INT_L4>;
			front_vt2_hpg = <0>;

			front_vt4_int_cam = <DVFS_INT_CAM_L2>;
			front_vt4_tnr = <DVFS_TNR_L1>;
			front_vt4_cam = <DVFS_CAM_L0>;
			front_vt4_mif = <DVFS_MIF_L2>;
			front_vt4_int = <DVFS_INT_L4>;
			front_vt4_hpg = <0>;

			front_preview_high_speed_fps_int_cam = <DVFS_INT_CAM_L2>;
			front_preview_high_speed_fps_tnr = <DVFS_TNR_L1>;
			front_preview_high_speed_fps_cam = <DVFS_CAM_L0>;
			front_preview_high_speed_fps_mif = <DVFS_MIF_L2>;
			front_preview_high_speed_fps_int = <DVFS_INT_L4>;
			front_preview_high_speed_fps_hpg = <0>;

			front_video_high_speed_120fps_int_cam = <DVFS_INT_CAM_L2>;
			front_video_high_speed_120fps_tnr = <DVFS_TNR_L1>;
			front_video_high_speed_120fps_cam = <DVFS_CAM_L0>;
			front_video_high_speed_120fps_mif = <DVFS_MIF_L2>;
			front_video_high_speed_120fps_int = <DVFS_INT_L4>;
			front_video_high_speed_120fps_hpg = <0>;

			rear3_preview_fhd_int_cam = <DVFS_INT_CAM_L2>;
			rear3_preview_fhd_tnr = <DVFS_TNR_L1>;
			rear3_preview_fhd_cam = <DVFS_CAM_L0>;
			rear3_preview_fhd_mif = <DVFS_MIF_L2>;
			rear3_preview_fhd_int = <DVFS_INT_L4>;
			rear3_preview_fhd_hpg = <0>;

			rear3_capture_int_cam = <DVFS_INT_CAM_L2>;
			rear3_capture_tnr = <DVFS_TNR_L1>;
			rear3_capture_cam = <DVFS_CAM_L0>;
			rear3_capture_mif = <DVFS_MIF_L2>;
			rear3_capture_int = <DVFS_INT_L4>;
			rear3_capture_hpg = <0>;

			rear3_video_fhd_int_cam = <DVFS_INT_CAM_L2>;
			rear3_video_fhd_tnr = <DVFS_TNR_L1>;
			rear3_video_fhd_cam = <DVFS_CAM_L0>;
			rear3_video_fhd_mif = <DVFS_MIF_L2>;
			rear3_video_fhd_int = <DVFS_INT_L4>;
			rear3_video_fhd_hpg = <0>;

			rear3_video_fhd_capture_int_cam = <DVFS_INT_CAM_L2>;
			rear3_video_fhd_capture_tnr = <DVFS_TNR_L1>;
			rear3_video_fhd_capture_cam = <DVFS_CAM_L0>;
			rear3_video_fhd_capture_mif = <DVFS_MIF_L2>;
			rear3_video_fhd_capture_int = <DVFS_INT_L4>;
			rear3_video_fhd_capture_hpg = <0>;

			rear2_preview_fhd_int_cam = <DVFS_INT_CAM_L2>;
			rear2_preview_fhd_tnr = <DVFS_TNR_L1>;
			rear2_preview_fhd_cam = <DVFS_CAM_L0>;
			rear2_preview_fhd_mif = <DVFS_MIF_L2>;
			rear2_preview_fhd_int = <DVFS_INT_L4>;
			rear2_preview_fhd_hpg = <0>;

			rear2_capture_int_cam = <DVFS_INT_CAM_L2>;
			rear2_capture_tnr = <DVFS_TNR_L1>;
			rear2_capture_cam = <DVFS_CAM_L0>;
			rear2_capture_mif = <DVFS_MIF_L2>;
			rear2_capture_int = <DVFS_INT_L4>;
			rear2_capture_hpg = <0>;

			rear2_video_fhd_int_cam = <DVFS_INT_CAM_L2>;
			rear2_video_fhd_tnr = <DVFS_TNR_L1>;
			rear2_video_fhd_cam = <DVFS_CAM_L0>;
			rear2_video_fhd_mif = <DVFS_MIF_L2>;
			rear2_video_fhd_int = <DVFS_INT_L4>;
			rear2_video_fhd_hpg = <0>;

			rear2_video_fhd_capture_int_cam = <DVFS_INT_CAM_L2>;
			rear2_video_fhd_capture_tnr = <DVFS_TNR_L1>;
			rear2_video_fhd_capture_cam = <DVFS_CAM_L0>;
			rear2_video_fhd_capture_mif = <DVFS_MIF_L2>;
			rear2_video_fhd_capture_int = <DVFS_INT_L4>;
			rear2_video_fhd_capture_hpg = <0>;

			rear_preview_fhd_int_cam = <DVFS_INT_CAM_L5>;
			rear_preview_fhd_tnr = <DVFS_TNR_L4>;
			rear_preview_fhd_cam = <DVFS_CAM_L4>;
			rear_preview_fhd_mif = <DVFS_MIF_L4>;
			rear_preview_fhd_int = <DVFS_INT_L4>;
			rear_preview_fhd_hpg = <0>;

			rear_preview_whd_int_cam = <DVFS_INT_CAM_L5>;
			rear_preview_whd_tnr = <DVFS_TNR_L4>;
			rear_preview_whd_cam = <DVFS_CAM_L4>;
			rear_preview_whd_mif = <DVFS_MIF_L4>;
			rear_preview_whd_int = <DVFS_INT_L4>;
			rear_preview_whd_hpg = <0>;

			rear_preview_uhd_int_cam = <DVFS_INT_CAM_L5>;
			rear_preview_uhd_tnr = <DVFS_TNR_L4>;
			rear_preview_uhd_cam = <DVFS_CAM_L4>;
			rear_preview_uhd_mif = <DVFS_MIF_L4>;
			rear_preview_uhd_int = <DVFS_INT_L4>;
			rear_preview_uhd_hpg = <0>;

			rear_preview_uhd_60fps_int_cam = <DVFS_INT_CAM_L5>;
			rear_preview_uhd_60fps_tnr = <DVFS_TNR_L4>;
			rear_preview_uhd_60fps_cam = <DVFS_CAM_L4>;
			rear_preview_uhd_60fps_mif = <DVFS_MIF_L2>;
			rear_preview_uhd_60fps_int = <DVFS_INT_L4>;
			rear_preview_uhd_60fps_hpg = <0>;

			rear_preview_full_int_cam = <DVFS_INT_CAM_L5>;
			rear_preview_full_tnr = <DVFS_TNR_L4>;
			rear_preview_full_cam = <DVFS_CAM_L4>;
			rear_preview_full_mif = <DVFS_MIF_L4>;
			rear_preview_full_int = <DVFS_INT_L4>;
			rear_preview_full_hpg = <0>;

			rear_capture_int_cam = <DVFS_INT_CAM_L3>;
			rear_capture_tnr = <DVFS_TNR_L2>;
			rear_capture_cam = <DVFS_CAM_L4>;
			rear_capture_mif = <DVFS_MIF_L1>;
			rear_capture_int = <DVFS_INT_L4>;
			rear_capture_hpg = <0>;

			rear_video_fhd_int_cam = <DVFS_INT_CAM_L5>;
			rear_video_fhd_tnr = <DVFS_TNR_L4>;
			rear_video_fhd_cam = <DVFS_CAM_L4>;
			rear_video_fhd_mif = <DVFS_MIF_L4>;
			rear_video_fhd_int = <DVFS_INT_L4>;
			rear_video_fhd_hpg = <0>;

			rear_video_whd_int_cam = <DVFS_INT_CAM_L5>;
			rear_video_whd_tnr = <DVFS_TNR_L4>;
			rear_video_whd_cam = <DVFS_CAM_L4>;
			rear_video_whd_mif = <DVFS_MIF_L4>;
			rear_video_whd_int = <DVFS_INT_L4>;
			rear_video_whd_hpg = <0>;

			rear_video_uhd_int_cam = <DVFS_INT_CAM_L5>;
			rear_video_uhd_tnr = <DVFS_TNR_L4>;
			rear_video_uhd_cam = <DVFS_CAM_L4>;
			rear_video_uhd_mif = <DVFS_MIF_L4>;
			rear_video_uhd_int = <DVFS_INT_L4>;
			rear_video_uhd_hpg = <0>;

			rear_video_uhd_60fps_int_cam = <DVFS_INT_CAM_L5>;
			rear_video_uhd_60fps_tnr = <DVFS_TNR_L4>;
			rear_video_uhd_60fps_cam = <DVFS_CAM_L4>;
			rear_video_uhd_60fps_mif = <DVFS_MIF_L2>;
			rear_video_uhd_60fps_int = <DVFS_INT_L4>;
			rear_video_uhd_60fps_hpg = <0>;

			rear_video_fhd_capture_int_cam = <DVFS_INT_CAM_L2>;
			rear_video_fhd_capture_tnr = <DVFS_TNR_L1>;
			rear_video_fhd_capture_cam = <DVFS_CAM_L4>;
			rear_video_fhd_capture_mif = <DVFS_MIF_L2>;
			rear_video_fhd_capture_int = <DVFS_INT_L4>;
			rear_video_fhd_capture_hpg = <0>;

			rear_video_whd_capture_int_cam = <DVFS_INT_CAM_L2>;
			rear_video_whd_capture_tnr = <DVFS_TNR_L1>;
			rear_video_whd_capture_cam = <DVFS_CAM_L4>;
			rear_video_whd_capture_mif = <DVFS_MIF_L2>;
			rear_video_whd_capture_int = <DVFS_INT_L4>;
			rear_video_whd_capture_hpg = <0>;

			rear_video_uhd_capture_int_cam = <DVFS_INT_CAM_L2>;
			rear_video_uhd_capture_tnr = <DVFS_TNR_L1>;
			rear_video_uhd_capture_cam = <DVFS_CAM_L4>;
			rear_video_uhd_capture_mif = <DVFS_MIF_L2>;
			rear_video_uhd_capture_int = <DVFS_INT_L4>;
			rear_video_uhd_capture_hpg = <0>;

			dual_preview_int_cam = <DVFS_INT_CAM_L2>;
			dual_preview_tnr = <DVFS_TNR_L1>;
			dual_preview_cam = <DVFS_CAM_L0>;
			dual_preview_mif = <DVFS_MIF_L2>;
			dual_preview_int = <DVFS_INT_L4>;
			dual_preview_hpg = <0>;

			dual_capture_int_cam = <DVFS_INT_CAM_L2>;
			dual_capture_tnr = <DVFS_TNR_L1>;
			dual_capture_cam = <DVFS_CAM_L0>;
			dual_capture_mif = <DVFS_MIF_L2>;
			dual_capture_int = <DVFS_INT_L4>;
			dual_capture_hpg = <0>;

			dual_video_fhd_int_cam = <DVFS_INT_CAM_L2>;
			dual_video_fhd_tnr = <DVFS_TNR_L1>;
			dual_video_fhd_cam = <DVFS_CAM_L0>;
			dual_video_fhd_mif = <DVFS_MIF_L2>;
			dual_video_fhd_int = <DVFS_INT_L4>;
			dual_video_fhd_hpg = <0>;

			dual_video_fhd_capture_int_cam = <DVFS_INT_CAM_L2>;
			dual_video_fhd_capture_tnr = <DVFS_TNR_L1>;
			dual_video_fhd_capture_cam = <DVFS_CAM_L0>;
			dual_video_fhd_capture_mif = <DVFS_MIF_L2>;
			dual_video_fhd_capture_int = <DVFS_INT_L4>;
			dual_video_fhd_capture_hpg = <0>;

			dual_video_uhd_int_cam = <DVFS_INT_CAM_L2>;
			dual_video_uhd_tnr = <DVFS_TNR_L1>;
			dual_video_uhd_cam = <DVFS_CAM_L0>;
			dual_video_uhd_mif = <DVFS_MIF_L2>;
			dual_video_uhd_int = <DVFS_INT_L4>;
			dual_video_uhd_hpg = <0>;

			dual_video_uhd_capture_int_cam = <DVFS_INT_CAM_L2>;
			dual_video_uhd_capture_tnr = <DVFS_TNR_L1>;
			dual_video_uhd_capture_cam = <DVFS_CAM_L0>;
			dual_video_uhd_capture_mif = <DVFS_MIF_L2>;
			dual_video_uhd_capture_int = <DVFS_INT_L4>;
			dual_video_uhd_capture_hpg = <0>;

			dual_sync_preview_int_cam = <DVFS_INT_CAM_L2>;
			dual_sync_preview_tnr = <DVFS_TNR_L1>;
			dual_sync_preview_cam = <DVFS_CAM_L0>;
			dual_sync_preview_mif = <DVFS_MIF_L2>;
			dual_sync_preview_int = <DVFS_INT_L4>;
			dual_sync_preview_hpg = <0>;

			dual_sync_capture_int_cam = <DVFS_INT_CAM_L2>;
			dual_sync_capture_tnr = <DVFS_TNR_L1>;
			dual_sync_capture_cam = <DVFS_CAM_L0>;
			dual_sync_capture_mif = <DVFS_MIF_L2>;
			dual_sync_capture_int = <DVFS_INT_L4>;
			dual_sync_capture_hpg = <0>;

			dual_sync_preview_whd_int_cam = <DVFS_INT_CAM_L2>;
			dual_sync_preview_whd_tnr = <DVFS_TNR_L1>;
			dual_sync_preview_whd_cam = <DVFS_CAM_L0>;
			dual_sync_preview_whd_mif = <DVFS_MIF_L2>;
			dual_sync_preview_whd_int = <DVFS_INT_L4>;
			dual_sync_preview_whd_hpg = <0>;

			dual_sync_whd_capture_int_cam = <DVFS_INT_CAM_L2>;
			dual_sync_whd_capture_tnr = <DVFS_TNR_L1>;
			dual_sync_whd_capture_cam = <DVFS_CAM_L0>;
			dual_sync_whd_capture_mif = <DVFS_MIF_L2>;
			dual_sync_whd_capture_int = <DVFS_INT_L4>;
			dual_sync_whd_capture_hpg = <0>;

			dual_sync_video_fhd_int_cam = <DVFS_INT_CAM_L2>;
			dual_sync_video_fhd_tnr = <DVFS_TNR_L1>;
			dual_sync_video_fhd_cam = <DVFS_CAM_L0>;
			dual_sync_video_fhd_mif = <DVFS_MIF_L2>;
			dual_sync_video_fhd_int = <DVFS_INT_L4>;
			dual_sync_video_fhd_hpg = <0>;

			dual_sync_video_fhd_capture_int_cam = <DVFS_INT_CAM_L2>;
			dual_sync_video_fhd_capture_tnr = <DVFS_TNR_L1>;
			dual_sync_video_fhd_capture_cam = <DVFS_CAM_L0>;
			dual_sync_video_fhd_capture_mif = <DVFS_MIF_L2>;
			dual_sync_video_fhd_capture_int = <DVFS_INT_L4>;
			dual_sync_video_fhd_capture_hpg = <0>;

			dual_sync_video_uhd_int_cam = <DVFS_INT_CAM_L2>;
			dual_sync_video_uhd_tnr = <DVFS_TNR_L1>;
			dual_sync_video_uhd_cam = <DVFS_CAM_L0>;
			dual_sync_video_uhd_mif = <DVFS_MIF_L2>;
			dual_sync_video_uhd_int = <DVFS_INT_L4>;
			dual_sync_video_uhd_hpg = <0>;

			dual_sync_video_uhd_capture_int_cam = <DVFS_INT_CAM_L2>;
			dual_sync_video_uhd_capture_tnr = <DVFS_TNR_L1>;
			dual_sync_video_uhd_capture_cam = <DVFS_CAM_L0>;
			dual_sync_video_uhd_capture_mif = <DVFS_MIF_L2>;
			dual_sync_video_uhd_capture_int = <DVFS_INT_L4>;
			dual_sync_video_uhd_capture_hpg = <0>;

			secure_front_int_cam = <DVFS_INT_CAM_L2>;
			secure_front_tnr = <DVFS_TNR_L1>;
			secure_front_cam = <DVFS_CAM_L0>;
			secure_front_mif = <DVFS_MIF_L2>;
			secure_front_int = <DVFS_INT_L4>;
			secure_front_hpg = <0>;

			pip_preview_int_cam = <DVFS_INT_CAM_L2>;
			pip_preview_tnr = <DVFS_TNR_L1>;
			pip_preview_cam = <DVFS_CAM_L0>;
			pip_preview_mif = <DVFS_MIF_L2>;
			pip_preview_int = <DVFS_INT_L4>;
			pip_preview_hpg = <0>;

			pip_capture_int_cam = <DVFS_INT_CAM_L2>;
			pip_capture_tnr = <DVFS_TNR_L1>;
			pip_capture_cam = <DVFS_CAM_L0>;
			pip_capture_mif = <DVFS_MIF_L2>;
			pip_capture_int = <DVFS_INT_L4>;
			pip_capture_hpg = <0>;

			pip_video_int_cam = <DVFS_INT_CAM_L2>;
			pip_video_tnr = <DVFS_TNR_L1>;
			pip_video_cam = <DVFS_CAM_L0>;
			pip_video_mif = <DVFS_MIF_L2>;
			pip_video_int = <DVFS_INT_L4>;
			pip_video_hpg = <0>;

			pip_video_capture_int_cam = <DVFS_INT_CAM_L2>;
			pip_video_capture_tnr = <DVFS_TNR_L1>;
			pip_video_capture_cam = <DVFS_CAM_L0>;
			pip_video_capture_mif = <DVFS_MIF_L2>;
			pip_video_capture_int = <DVFS_INT_L4>;
			pip_video_capture_hpg = <0>;

			preview_high_speed_fps_int_cam = <DVFS_INT_CAM_L2>;
			preview_high_speed_fps_tnr = <DVFS_TNR_L1>;
			preview_high_speed_fps_cam = <DVFS_CAM_L0>;
			preview_high_speed_fps_mif = <DVFS_MIF_L2>;
			preview_high_speed_fps_int = <DVFS_INT_L4>;
			preview_high_speed_fps_hpg = <0>;

			video_high_speed_60fps_int_cam = <DVFS_INT_CAM_L2>;
			video_high_speed_60fps_tnr = <DVFS_TNR_L1>;
			video_high_speed_60fps_cam = <DVFS_CAM_L0>;
			video_high_speed_60fps_mif = <DVFS_MIF_L2>;
			video_high_speed_60fps_int = <DVFS_INT_L4>;
			video_high_speed_60fps_hpg = <0>;

			video_high_speed_120fps_int_cam = <DVFS_INT_CAM_L2>;
			video_high_speed_120fps_tnr = <DVFS_TNR_L1>;
			video_high_speed_120fps_cam = <DVFS_CAM_L0>;
			video_high_speed_120fps_mif = <DVFS_MIF_L2>;
			video_high_speed_120fps_int = <DVFS_INT_L4>;
			video_high_speed_120fps_hpg = <0>;

			video_high_speed_240fps_int_cam = <DVFS_INT_CAM_L2>;
			video_high_speed_240fps_tnr = <DVFS_TNR_L1>;
			video_high_speed_240fps_cam = <DVFS_CAM_L0>;
			video_high_speed_240fps_mif = <DVFS_MIF_L2>;
			video_high_speed_240fps_int = <DVFS_INT_L4>;
			video_high_speed_240fps_hpg = <0>;

			video_high_speed_dualfps_int_cam = <DVFS_INT_CAM_L2>;
			video_high_speed_dualfps_tnr = <DVFS_TNR_L1>;
			video_high_speed_dualfps_cam = <DVFS_CAM_L0>;
			video_high_speed_dualfps_mif = <DVFS_MIF_L2>;
			video_high_speed_dualfps_int = <DVFS_INT_L4>;
			video_high_speed_dualfps_hpg = <0>;

			video_high_speed_60fps_capture_int_cam = <DVFS_INT_CAM_L2>;
			video_high_speed_60fps_capture_tnr = <DVFS_TNR_L1>;
			video_high_speed_60fps_capture_cam = <DVFS_CAM_L0>;
			video_high_speed_60fps_capture_mif = <DVFS_MIF_L2>;
			video_high_speed_60fps_capture_int = <DVFS_INT_L4>;
			video_high_speed_60fps_capture_hpg = <0>;

			ext_front_int_cam = <DVFS_INT_CAM_L2>;
			ext_front_tnr = <DVFS_TNR_L1>;
			ext_front_cam = <DVFS_CAM_L0>;
			ext_front_mif = <DVFS_MIF_L2>;
			ext_front_int = <DVFS_INT_L4>;
			ext_front_hpg = <0>;

			ext_secure_int_cam = <DVFS_INT_CAM_L2>;
			ext_secure_tnr = <DVFS_TNR_L1>;
			ext_secure_cam = <DVFS_CAM_L0>;
			ext_secure_mif = <DVFS_MIF_L2>;
			ext_secure_int = <DVFS_INT_L4>;
			ext_secure_hpg = <0>;

			max_int_cam = <DVFS_INT_CAM_L2>;
			max_tnr = <DVFS_TNR_L1>;
			max_cam = <DVFS_CAM_L0>;
			max_mif = <DVFS_MIF_L2>;
			max_int = <DVFS_INT_L0>;
			max_hpg = <0>;
		};
	};
};

&pinctrl_1 {
	/* N/A */
	hsi2c_14_bus: hsi2c_14-bus {
		samsung,pins = "gpm4-0", "gpm5-0";
		samsung,pin-function = <2>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	hsi2c_14_bus_in: hsi2c_14-bus-in {
		samsung,pins = "gpm4-0", "gpm5-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	/* REAR CAM1 */
	hsi2c_12_bus: hsi2c_12-bus {
		samsung,pins = "gpm0-0", "gpm1-0";
		samsung,pin-function = <2>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	hsi2c_12_bus_in: hsi2c_12-bus-in {
		samsung,pins = "gpm0-0", "gpm1-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	/* FRONT EEP, REAR CAM1 EEP, REAR CAM1 ACTUATOR */
	hsi2c_13_bus: hsi2c_13-bus {
		samsung,pins = "gpm2-0", "gpm3-0";
		samsung,pin-function = <3>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	hsi2c_13_bus_in: hsi2c_13-bus-in {
		samsung,pins = "gpm2-0", "gpm3-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	/* FRONT, REAR CAM2, REAR CAM3 */
	hsi2c_15_bus: hsi2c_15-bus {
		samsung,pins = "gpm6-0", "gpm7-0";
		samsung,pin-function = <3>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	hsi2c_15_bus_in: hsi2c_15-bus-in {
		samsung,pins = "gpm6-0", "gpm7-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};
};

/* I2C_CAM0 */ /* SENSOR_CONTROL_I2C0 */
&hsi2c_15 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpm6 0 0 &gpm7 0 0>;	/* SDA- SCL */
	status = "okay";
	clock-frequency = <1000000>;
	samsung,reset-before-trans;
	samsung,fast-plus-mode;		/* 1Mhz */

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c_15_bus_in>;
	pinctrl-1 = <&hsi2c_15_bus>;
	pinctrl-2 = <&hsi2c_15_bus_in>;

	is-imx616@1A {
		compatible = "samsung,exynos-is-cis-imx616";
		reg = <0x1A>;			/* 1 bit right shift */
		id = <1>;			/* matching is_sensor id */
		sensor_f_number = <200>;	/* f number 2.0 */
		setfile = "setB";		/* setA: non-3dhdr, setB: 3dhdr */
		use_initial_ae;			/* for initial AE of face unlock */
		/* use_3dhdr; */		/* enable 3dhdr with using setB */
	};
};

/* I2C_CAM1 */ /* SENSOR_CONTROL_I2C1 */
&hsi2c_12 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpm0 0 0 &gpm1 0 0>;	/* SDA- SCL */
	status = "okay";
	clock-frequency = <1000000>;
	samsung,reset-before-trans;
	samsung,fast-plus-mode;		/* 1Mhz */

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c_12_bus_in>;
	pinctrl-1 = <&hsi2c_12_bus>;
	pinctrl-2 = <&hsi2c_12_bus_in>;

	is-imx582@1A {
		compatible = "samsung,exynos-is-cis-imx582";
		reg = <0x1A>;			/* 1 bit right shift */
		id = <0>;			/* matching is_sensor id */
		sensor_f_number = <200>;	/* f number 2.0 */
		setfile = "setB";		/* first Setfile of MCD is 'setB' */
	};
};

/* USI_PERI_USI_0_I2C */
&hsi2c_13 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpm2 0 0 &gpm3 0 0>;	/* SDA - SCL */
	status = "okay";
	clock-frequency = <400000>;
	samsung,reset-before-trans;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c_13_bus_in>;
	pinctrl-1 = <&hsi2c_13_bus>;
	pinctrl-2 = <&hsi2c_13_bus_in>;

	is-actuator@18 {
		compatible = "samsung,exynos-is-actuator-dw9808";
		reg = <0x0C>;
		id = <0>;			/* matching sensor id */
		place = <0>;
	};

	rear_eeprom@B0 {
		compatible = "samsung,rear-eeprom-i2c";
		reg = <0x58>;			/* 7bit-addr */

		use_common_rom_position = <2>;
	};

	front_eeprom@A2 {
		compatible = "samsung,front-eeprom-i2c";
		reg = <0x51>;
	};
};

&is_sensor0 {
	#address-cells = <1>;
	#size-cells = <1>;
	scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
	id = <0>;
	csi_ch = <1>;
	dma_ch = <1 1 1 1 1 1 1 1>;
	vc_ch = <0 1 2 3 0 1 2 3>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	status = "okay";
	reg = <0x0 0x15040000 0x1000>, /* MIPI-CSI1 */
		<0x0 0x150D0000 0x10000>; /* PHY: M0S4S4S4S4S2 */
	interrupts = <0 INTREQ__CSIS1 IRQ_TYPE_LEVEL_HIGH>, /*MIPI-CSI1 */
		<0 INTREQ__CSIS_DMA1 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA1 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA1 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA1 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA1 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA1 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA1 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA1 IRQ_TYPE_LEVEL_HIGH>;
	interrupt-names = "csi",
		"mode0_VC0", "mode0_VC1","mode0_VC2","mode0_VC3",
		"mode1_VC0", "mode1_VC1","mode1_VC2","mode1_VC3";
	phys = <&mipi_phy_csis1_m0s4s4s4s4s2 0>;
	/* without PAF HW */
	sensor0_ch_mode0: sensor0-ch-mode0 {
		reg = <0x150C2000 0x100>, /* DMA1 VC0 */
			<0x150C2400 0x100>, /* DMA1 Common */
			<0x150C2100 0x100>, /* DMA1 VC1 */
			<0x150C2400 0x100>, /* DMA1 Common */
			<0x150C2200 0x100>, /* DMA1 VC2 */
			<0x150C2400 0x100>, /* DMA1 Common */
			<0x150C2300 0x100>, /* DMA1 VC3 */
			<0x150C2400 0x100>; /* DMA1 Common */
		mux_reg = <0x15020418 0x4>; /* DMA1 input mux */
	};

	/* with PAF HW */
	sensor0_ch_mode1: sensor0-ch-mode1 {
		reg = <0x150C2000 0x100>, /* DMA1 VC0 */
			<0x150C2400 0x100>, /* DMA1 Common */
			<0x150C2100 0x100>, /* DMA1 VC1 */
			<0x150C2400 0x100>, /* DMA1 Common */
			<0x150C2200 0x100>, /* DMA1 VC2 */
			<0x150C2400 0x100>, /* DMA1 Common */
			<0x150C2300 0x100>, /* DMA1 VC3 */
			<0x150C2400 0x100>; /* DMA1 Common */
		mux_reg = <0x15020418 0x4>; /* DMA1 input mux */
	};
};

&is_sensor1 {
	#address-cells = <1>;
	#size-cells = <1>;
	scenario = <SENSOR_SCENARIO_NORMAL>;    /* Normal, Vision, OIS etc */
	id = <1>;
	csi_ch = <0>;
	dma_ch = <0 0 0 0>;
	vc_ch = <0 1 2 3>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	status = "okay";
	reg = <0x0 0x15030000 0x1000>, /* MIPI-CSI0 */
		<0x0 0x150D0000 0x10000>; /* PHY: M0S4S4S4S4S2 */
	interrupts = <0 INTREQ__CSIS0 IRQ_TYPE_LEVEL_HIGH>, /* MIPI-CSI0 */
		<0 INTREQ__CSIS_DMA0 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA0 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA0 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA0 IRQ_TYPE_LEVEL_HIGH>;
	interrupt-names = "csi",
		"mode0_VC0", "mode0_VC1","mode0_VC2","mode0_VC3";
	phys = <&mipi_phy_csis0_m0s4s4s4s4s2 0>;
	/* without PAF HW */
	sensor1_ch_mode0: sensor1-ch-mode0 {
		reg = <0x150C1000 0x100>, /* DMA0 VC0 */
			<0x150C1400 0x100>, /* DMA0 Common */
			<0x150C1100 0x100>, /* DMA0 VC1 */
			<0x150C1400 0x100>, /* DMA0 Common */
			<0x150C1200 0x100>, /* DMA0 VC2 */
			<0x150C1400 0x100>, /* DMA0 Common */
			<0x150C1300 0x100>, /* DMA0 VC3 */
			<0x150C1400 0x100>; /* DMA0 Common */
		mux_reg = <0x15020414 0x4>; /* DMA0 input mux */
	};
};

&is_sensor2 {
	#address-cells = <1>;
	#size-cells = <1>;
	scenario = <SENSOR_SCENARIO_NORMAL>;    /* Normal, Vision, OIS etc */
	id = <2>;
	csi_ch = <2>;
	dma_ch = <2 2 2 2>;
	vc_ch = <0 1 2 3>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	status = "disabled";
};

&is_sensor3 {
	#address-cells = <1>;
	#size-cells = <1>;
	scenario = <SENSOR_SCENARIO_NORMAL>;    /* Normal, Vision, OIS etc */
	id = <2>;
	csi_ch = <3>;
	dma_ch = <3 3 3 3>;
	vc_ch = <0 1 2 3>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	status = "okay";

	interrupts = <0 INTREQ__CSIS3 IRQ_TYPE_LEVEL_HIGH>, /* MIPI-CSI2 */
			<0 INTREQ__CSIS_DMA3 IRQ_TYPE_LEVEL_HIGH>,
			<0 INTREQ__CSIS_DMA3 IRQ_TYPE_LEVEL_HIGH>,
			<0 INTREQ__CSIS_DMA3 IRQ_TYPE_LEVEL_HIGH>,
			<0 INTREQ__CSIS_DMA3 IRQ_TYPE_LEVEL_HIGH>;
	interrupt-names = "csi",
		"mode0_VC0", "mode0_VC1","mode0_VC2","mode0_VC3";
	/* without PAF HW */
	sensor3_ch_mode0: sensor3-ch-mode0 {
		reg = <0x150C4000 0x100>, /* DMA3 VC0 */
			<0x150C4400 0x100>, /* DMA3 Common */
			<0x150C4100 0x100>, /* DMA3 VC1 */
			<0x150C4400 0x100>, /* DMA3 Common */
			<0x150C4200 0x100>, /* DMA3 VC2 */
			<0x150C4400 0x100>, /* DMA3 Common */
			<0x150C4300 0x100>, /* DMA3 VC3 */
			<0x150C4400 0x100>; /* DMA3 Common */
		mux_reg = <0x15020420 0x4>; /* DMA3 input mux */
	};
};

&is_sensor4 {
	#address-cells = <1>;
	#size-cells = <1>;
	scenario = <SENSOR_SCENARIO_NORMAL>;    /* Normal, Vision, OIS etc */
	id = <4>;
	csi_ch = <2>;
	dma_ch = <2 2 2 2>;
	vc_ch = <0 1 2 3>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	status = "disabled";
};
