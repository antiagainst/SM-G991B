/*
 * Samsung Exynos SoC series Pablo driver
 *
 * Copyright (c) 2019 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <dt-bindings/camera/exynos_is_dt.h>
#include <dt-bindings/interrupt-controller/exynos3830.h>
#include <dt-bindings/clock/exynos3830.h>

#include "camera/module_gm2.dtsi"
#include "camera/module_hi1336b.dtsi"

/ {
	fragment@camera {
		target-path = "/";
		__overlay__ {
			/* REAR CAMERA */
			is_sensor_gm2: is_sensor_gm2@3D {
				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&sensor_mclk0_out>;
				pinctrl-2 = <&sensor_mclk0_fn>;
				pinctrl-3 = <>;

				position = <0>; /* Rear:0. Front:1 */
				id = <0>; /* sensor node id */
				mclk_ch = <0>;
				sensor_i2c_ch = <0>; /* I2C 0 */

				status = "okay";

				af {
					product_name = <24>; /* ACTUATOR_NAME_DW9808 */
					i2c_ch = <0>; /* SENSOR_CONTROL_I2C0 */
				};

				flash {
					product_name = <14>; /* FLASH_S2MU106 */
				};

				power_seq {
					gpio_mclk = <&gpc0 0 0x1>;

					scenario_normal_on {
						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "MCLK"; pin = <PIN_MCLK 1 1000>; };
						20 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpa2 3 0x1>; };
						30 { pname = "S2MPB03_VLDO6"; pin = <PIN_REGULATOR 1 0>; };
						40 { pname = "S2MPB03_VLDO3"; pin = <PIN_REGULATOR 1 0>; };
						50 { pname = "S2MPB03_VLDO1"; pin = <PIN_REGULATOR 1 0>; };
						60 { pname = "vdd_ldo32"; pin = <PIN_REGULATOR 1 1000>; };
						65 { pname = "cam_mipi_sel"; pin = <PIN_OUTPUT 1 2000>; gpio = <&gpg2 7 0x0>; };
						70 { pname = "mipi_sel"; pin = <PIN_OUTPUT 0 1000>; gpio = <&gpg2 5 0x0>; };
						80 { pname = "cam_mipi_sel"; pin = <PIN_OUTPUT 0 1000>; gpio = <&gpg2 7 0x0>; };
						90 { pname = "none"; pin = <PIN_NONE 0 0>; };
						100 { pname = "on_i2c"; pin = <PIN_I2C 1 0>; };
						110 { pname = "pin"; pin = <PIN_FUNCTION 2 1000>; };
						120 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 5000>; gpio = <&gpa2 3 0x1>; };
					};

					scenario_normal_off {
						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst"; pin = <PIN_RESET 0 10>; gpio = <&gpa2 3 0x1>; };
						20 { pname = "sen_rst input"; pin = <PIN_INPUT 0 0>; gpio = <&gpa2 3 0x1>; };
						30 { pname = "vdd_ldo32"; pin = <PIN_REGULATOR 0 0>; };
						40 { pname = "S2MPB03_VLDO1"; pin = <PIN_REGULATOR 0 0>; };
						50 { pname = "S2MPB03_VLDO6"; pin = <PIN_REGULATOR 0 0>; };
						60 { pname = "S2MPB03_VLDO3"; pin = <PIN_REGULATOR 0 0>; };
						70 { pname = "none"; pin = <PIN_NONE 0 0>; };
						80 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
						90 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						100 { pname = "pin"; pin = <PIN_FUNCTION 1 0>; };
						110 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						120 { pname = "MCLK"; pin = <PIN_MCLK 0 5000>; };
					};
				};
			};

			/* FRONT CAMERA */
			is_sensor_hi1336: is_sensor_hi1336@D3 {
				pinctrl-names = "pin0", "pin1", "pin2", "release";
				pinctrl-0 = <>;
				pinctrl-1 = <&sensor_mclk1_out>;
				pinctrl-2 = <&sensor_mclk1_fn>;
				pinctrl-3 = <>;

				position = <1>; /* Rear:0. Front:1 */
				id = <1>; /* sensor node id */
				mclk_ch = <1>;
				sensor_i2c_ch = <1>;

				status = "okay";

				power_seq {
					gpio_mclk = <&gpc0 1 0x1>;

					scenario_normal_on {
						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst low"; pin = <PIN_OUTPUT 0 0>; gpio = <&gpa2 4 0x1>; };
						20 { pname = "S2MPB03_VLDO7"; pin = <PIN_REGULATOR 1 0>; };
						30 { pname = "S2MPB03_VLDO3"; pin = <PIN_REGULATOR 1 0>; };
						40 { pname = "S2MPB03_VLDO2"; pin = <PIN_REGULATOR 1 0>; };
						50 { pname = "none"; pin = <PIN_NONE 0 1000>; };
						60 { pname = "on_i2c"; pin = <PIN_I2C 1 0>; };
						70 { pname = "pin"; pin = <PIN_FUNCTION 2 0>; };
						80 { pname = "MCLK"; pin = <PIN_MCLK 1 0>; };
						90 { pname = "sen_rst high"; pin = <PIN_OUTPUT 1 0>; gpio = <&gpa2 4 0x1>; };
						/* need eeprom pin control */
					};

					scenario_normal_off {
						/* A start node number should be over the 10 for reserved number 0~9. */
						/* pname = "name"; pin = <act value dealy voltage>; gpio = <gpx# # 0x1>; */
						10 { pname = "sen_rst"; pin = <PIN_RESET 0 10>; gpio = <&gpa2 4 0x1>; };
						20 { pname = "sen_rst input"; pin = <PIN_INPUT 0 0>; gpio = <&gpa2 4 0x1>; };
						30 { pname = "S2MPB03_VLDO2"; pin = <PIN_REGULATOR 0 0>; };
						40 { pname = "S2MPB03_VLDO3"; pin = <PIN_REGULATOR 0 0>; };
						50 { pname = "S2MPB03_VLDO7"; pin = <PIN_REGULATOR 0 0>; };
						60 { pname = "off_i2c"; pin = <PIN_I2C 0 0>; };
						70 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						80 { pname = "pin"; pin = <PIN_FUNCTION 1 0>; };
						90 { pname = "pin"; pin = <PIN_FUNCTION 0 0>; };
						100 { pname = "MCLK"; pin = <PIN_MCLK 0 0>; };
						/* need eeprom pin control */
					};
				};
			};

			fimc_is_flash_gpio: fimc-is-flash-gpio@0 {
				compatible = "samsung,sensor-flash-s2mu106";
				id = <0>;
				led_ch = <1 2>; /* CH1 ~ CH4, CH0 not exist */
				status = "okay";
			};
		}; /* end of __overlay__ */
	}; /* end of fragment */
}; /* end of root */

/***** reference symbol node *****/

&exynos_is {
	vender {
		rear_sensor_id = <61>; /* GM2 */
		front_sensor_id = <211>; /* HI1336 */
		rear2_sensor_id = <39>; /* 4HA */
	};

	lic_offsets {
		/* 3AA = <setA lic offset0, setA lic offset1, set A trigger context */
		/*		setB lic offset0, setB lic offset1, set B trigger context> */
		/* 4672: 4640x4352 */
		/* 5824: 5804x4352 */
		3AA = <3776 7552 1 3776 7552 2>;
	};

	is_dvfs {
		#define DVFS_INT_L0 667000
		#define DVFS_INT_L1 534000
		#define DVFS_INT_L2 334000
		#define DVFS_INT_L3 200000
		#define DVFS_INT_L4 100000

		#define DVFS_CAM_L0 690000
		#define DVFS_CAM_L1 680000
		#define DVFS_CAM_L2 670000
		#define DVFS_CAM_L3 660000
		#define DVFS_CAM_L4 650000

		#define DVFS_MIF_L0 1794000
		#define DVFS_MIF_L1 1539000
		#define DVFS_MIF_L2 1352000
		#define DVFS_MIF_L3 1014000
		#define DVFS_MIF_L4 845000
		#define DVFS_MIF_L5 676000
		#define DVFS_MIF_L6 546000
		#define DVFS_MIF_L7 421000

		table0 {
			desc = "dvfs table v0.0 for 12M/8M/5M";

			default_cam = <DVFS_CAM_L0>;
			default_mif = <DVFS_MIF_L0>;
			default_int = <DVFS_INT_L0>;
			default_hpg = <0>;

			front_preview_cam = <DVFS_CAM_L0>;
			front_preview_mif = <DVFS_MIF_L0>;
			front_preview_int = <DVFS_INT_L0>;
			front_preview_hpg = <0>;

			front_preview_full_cam = <DVFS_CAM_L0>;
			front_preview_full_mif = <DVFS_MIF_L0>;
			front_preview_full_int = <DVFS_INT_L0>;
			front_preview_full_hpg = <0>;

			front_capture_cam = <DVFS_CAM_L0>;
			front_capture_mif = <DVFS_MIF_L0>;
			front_capture_int = <DVFS_INT_L0>;
			front_capture_hpg = <0>;

			front_video_cam = <DVFS_CAM_L0>;
			front_video_mif = <DVFS_MIF_L0>;
			front_video_int = <DVFS_INT_L0>;
			front_video_hpg = <0>;

			front_video_whd_cam = <DVFS_CAM_L0>;
			front_video_whd_mif = <DVFS_MIF_L0>;
			front_video_whd_int = <DVFS_INT_L0>;
			front_video_whd_hpg = <0>;

			front_video_uhd_cam = <DVFS_CAM_L0>;
			front_video_uhd_mif = <DVFS_MIF_L0>;
			front_video_uhd_int = <DVFS_INT_L0>;
			front_video_uhd_hpg = <0>;

			front_video_capture_cam = <DVFS_CAM_L0>;
			front_video_capture_mif = <DVFS_MIF_L0>;
			front_video_capture_int = <DVFS_INT_L0>;
			front_video_capture_hpg = <0>;

			front_video_whd_capture_cam = <DVFS_CAM_L0>;
			front_video_whd_capture_mif = <DVFS_MIF_L0>;
			front_video_whd_capture_int = <DVFS_INT_L0>;
			front_video_whd_capture_hpg = <0>;

			front_video_uhd_capture_cam = <DVFS_CAM_L0>;
			front_video_uhd_capture_mif = <DVFS_MIF_L0>;
			front_video_uhd_capture_int = <DVFS_INT_L0>;
			front_video_uhd_capture_hpg = <0>;

			front_vt1_cam = <DVFS_CAM_L0>;
			front_vt1_mif = <DVFS_MIF_L0>;
			front_vt1_int = <DVFS_INT_L0>;
			front_vt1_hpg = <0>;

			front_vt2_cam = <DVFS_CAM_L0>;
			front_vt2_mif = <DVFS_MIF_L0>;
			front_vt2_int = <DVFS_INT_L0>;
			front_vt2_hpg = <0>;

			front_vt4_cam = <DVFS_CAM_L0>;
			front_vt4_mif = <DVFS_MIF_L0>;
			front_vt4_int = <DVFS_INT_L0>;
			front_vt4_hpg = <0>;

			front_preview_high_speed_fps_cam = <DVFS_CAM_L0>;
			front_preview_high_speed_fps_mif = <DVFS_MIF_L0>;
			front_preview_high_speed_fps_int = <DVFS_INT_L0>;
			front_preview_high_speed_fps_hpg = <0>;

			rear2_preview_fhd_cam = <DVFS_CAM_L0>;
			rear2_preview_fhd_mif = <DVFS_MIF_L0>;
			rear2_preview_fhd_int = <DVFS_INT_L0>;
			rear2_preview_fhd_hpg = <0>;

			rear2_capture_cam = <DVFS_CAM_L0>;
			rear2_capture_mif = <DVFS_MIF_L0>;
			rear2_capture_int = <DVFS_INT_L0>;
			rear2_capture_hpg = <0>;

			rear2_video_fhd_cam = <DVFS_CAM_L0>;
			rear2_video_fhd_mif = <DVFS_MIF_L0>;
			rear2_video_fhd_int = <DVFS_INT_L0>;
			rear2_video_fhd_hpg = <0>;

			rear2_video_fhd_capture_cam = <DVFS_CAM_L0>;
			rear2_video_fhd_capture_mif = <DVFS_MIF_L0>;
			rear2_video_fhd_capture_int = <DVFS_INT_L0>;
			rear2_video_fhd_capture_hpg = <0>;

			rear_preview_fhd_cam = <DVFS_CAM_L0>;
			rear_preview_fhd_mif = <DVFS_MIF_L0>;
			rear_preview_fhd_int = <DVFS_INT_L0>;
			rear_preview_fhd_hpg = <0>;

			rear_preview_whd_cam = <DVFS_CAM_L0>;
			rear_preview_whd_mif = <DVFS_MIF_L0>;
			rear_preview_whd_int = <DVFS_INT_L0>;
			rear_preview_whd_hpg = <0>;

			rear_preview_uhd_cam = <DVFS_CAM_L0>;
			rear_preview_uhd_mif = <DVFS_MIF_L0>;
			rear_preview_uhd_int = <DVFS_INT_L0>;
			rear_preview_uhd_hpg = <0>;

			rear_preview_uhd_60fps_cam = <DVFS_CAM_L0>;
			rear_preview_uhd_60fps_mif = <DVFS_MIF_L0>;
			rear_preview_uhd_60fps_int = <DVFS_INT_L0>;
			rear_preview_uhd_60fps_hpg = <0>;

			rear_preview_full_cam = <DVFS_CAM_L0>;
			rear_preview_full_mif = <DVFS_MIF_L0>;
			rear_preview_full_int = <DVFS_INT_L0>;
			rear_preview_full_hpg = <0>;

			rear_capture_cam = <DVFS_CAM_L0>;
			rear_capture_mif = <DVFS_MIF_L0>;
			rear_capture_int = <DVFS_INT_L0>;
			rear_capture_hpg = <0>;

			rear_video_fhd_cam = <DVFS_CAM_L0>;
			rear_video_fhd_mif = <DVFS_MIF_L0>;
			rear_video_fhd_int = <DVFS_INT_L0>;
			rear_video_fhd_hpg = <0>;

			rear_video_whd_cam = <DVFS_CAM_L0>;
			rear_video_whd_mif = <DVFS_MIF_L0>;
			rear_video_whd_int = <DVFS_INT_L0>;
			rear_video_whd_hpg = <0>;

			rear_video_uhd_cam = <DVFS_CAM_L0>;
			rear_video_uhd_mif = <DVFS_MIF_L0>;
			rear_video_uhd_int = <DVFS_INT_L0>;
			rear_video_uhd_hpg = <0>;

			rear_video_uhd_60fps_cam = <DVFS_CAM_L0>;
			rear_video_uhd_60fps_mif = <DVFS_MIF_L0>;
			rear_video_uhd_60fps_int = <DVFS_INT_L0>;
			rear_video_uhd_60fps_hpg = <0>;

			rear_video_fhd_capture_cam = <DVFS_CAM_L0>;
			rear_video_fhd_capture_mif = <DVFS_MIF_L0>;
			rear_video_fhd_capture_int = <DVFS_INT_L0>;
			rear_video_fhd_capture_hpg = <0>;

			rear_video_whd_capture_cam = <DVFS_CAM_L0>;
			rear_video_whd_capture_mif = <DVFS_MIF_L0>;
			rear_video_whd_capture_int = <DVFS_INT_L0>;
			rear_video_whd_capture_hpg = <0>;

			rear_video_uhd_capture_cam = <DVFS_CAM_L0>;
			rear_video_uhd_capture_mif = <DVFS_MIF_L0>;
			rear_video_uhd_capture_int = <DVFS_INT_L0>;
			rear_video_uhd_capture_hpg = <0>;

			dual_preview_cam = <DVFS_CAM_L0>;
			dual_preview_mif = <DVFS_MIF_L0>;
			dual_preview_int = <DVFS_INT_L0>;
			dual_preview_hpg = <0>;

			dual_capture_cam = <DVFS_CAM_L0>;
			dual_capture_mif = <DVFS_MIF_L0>;
			dual_capture_int = <DVFS_INT_L0>;
			dual_capture_hpg = <0>;

			dual_video_fhd_cam = <DVFS_CAM_L0>;
			dual_video_fhd_mif = <DVFS_MIF_L0>;
			dual_video_fhd_int = <DVFS_INT_L0>;
			dual_video_fhd_hpg = <0>;

			dual_video_fhd_capture_cam = <DVFS_CAM_L0>;
			dual_video_fhd_capture_mif = <DVFS_MIF_L0>;
			dual_video_fhd_capture_int = <DVFS_INT_L0>;
			dual_video_fhd_capture_hpg = <0>;

			dual_video_uhd_cam = <DVFS_CAM_L0>;
			dual_video_uhd_mif = <DVFS_MIF_L0>;
			dual_video_uhd_int = <DVFS_INT_L0>;
			dual_video_uhd_hpg = <0>;

			dual_video_uhd_capture_cam = <DVFS_CAM_L0>;
			dual_video_uhd_capture_mif = <DVFS_MIF_L0>;
			dual_video_uhd_capture_int = <DVFS_INT_L0>;
			dual_video_uhd_capture_hpg = <0>;

			dual_sync_preview_cam = <DVFS_CAM_L0>;
			dual_sync_preview_mif = <DVFS_MIF_L0>;
			dual_sync_preview_int = <DVFS_INT_L0>;
			dual_sync_preview_hpg = <0>;

			dual_sync_capture_cam = <DVFS_CAM_L0>;
			dual_sync_capture_mif = <DVFS_MIF_L0>;
			dual_sync_capture_int = <DVFS_INT_L0>;
			dual_sync_capture_hpg = <0>;

			dual_sync_preview_whd_cam = <DVFS_CAM_L0>;
			dual_sync_preview_whd_mif = <DVFS_MIF_L0>;
			dual_sync_preview_whd_int = <DVFS_INT_L0>;
			dual_sync_preview_whd_hpg = <0>;

			dual_sync_whd_capture_cam = <DVFS_CAM_L0>;
			dual_sync_whd_capture_mif = <DVFS_MIF_L0>;
			dual_sync_whd_capture_int = <DVFS_INT_L0>;
			dual_sync_whd_capture_hpg = <0>;

			dual_sync_video_fhd_cam = <DVFS_CAM_L0>;
			dual_sync_video_fhd_mif = <DVFS_MIF_L0>;
			dual_sync_video_fhd_int = <DVFS_INT_L0>;
			dual_sync_video_fhd_hpg = <0>;

			dual_sync_video_fhd_capture_cam = <DVFS_CAM_L0>;
			dual_sync_video_fhd_capture_mif = <DVFS_MIF_L0>;
			dual_sync_video_fhd_capture_int = <DVFS_INT_L0>;
			dual_sync_video_fhd_capture_hpg = <0>;

			dual_sync_video_uhd_cam = <DVFS_CAM_L0>;
			dual_sync_video_uhd_mif = <DVFS_MIF_L0>;
			dual_sync_video_uhd_int = <DVFS_INT_L0>;
			dual_sync_video_uhd_hpg = <0>;

			dual_sync_video_uhd_capture_cam = <DVFS_CAM_L0>;
			dual_sync_video_uhd_capture_mif = <DVFS_MIF_L0>;
			dual_sync_video_uhd_capture_int = <DVFS_INT_L0>;
			dual_sync_video_uhd_capture_hpg = <0>;

			secure_front_cam = <DVFS_CAM_L0>;
			secure_front_mif = <DVFS_MIF_L0>;
			secure_front_int = <DVFS_INT_L0>;
			secure_front_hpg = <0>;

			pip_preview_cam = <DVFS_CAM_L0>;
			pip_preview_mif = <DVFS_MIF_L0>;
			pip_preview_int = <DVFS_INT_L0>;
			pip_preview_hpg = <0>;

			pip_capture_cam = <DVFS_CAM_L0>;
			pip_capture_mif = <DVFS_MIF_L0>;
			pip_capture_int = <DVFS_INT_L0>;
			pip_capture_hpg = <0>;

			pip_video_cam = <DVFS_CAM_L0>;
			pip_video_mif = <DVFS_MIF_L0>;
			pip_video_int = <DVFS_INT_L0>;
			pip_video_hpg = <0>;

			pip_video_capture_cam = <DVFS_CAM_L0>;
			pip_video_capture_mif = <DVFS_MIF_L0>;
			pip_video_capture_int = <DVFS_INT_L0>;
			pip_video_capture_hpg = <0>;

			preview_high_speed_fps_cam = <DVFS_CAM_L0>;
			preview_high_speed_fps_mif = <DVFS_MIF_L0>;
			preview_high_speed_fps_int = <DVFS_INT_L0>;
			preview_high_speed_fps_hpg = <0>;

			video_high_speed_60fps_cam = <DVFS_CAM_L0>;
			video_high_speed_60fps_mif = <DVFS_MIF_L0>;
			video_high_speed_60fps_int = <DVFS_INT_L0>;
			video_high_speed_60fps_hpg = <0>;

			video_high_speed_120fps_cam = <DVFS_CAM_L0>;
			video_high_speed_120fps_mif = <DVFS_MIF_L0>;
			video_high_speed_120fps_int = <DVFS_INT_L0>;
			video_high_speed_120fps_hpg = <0>;

			video_high_speed_240fps_cam = <DVFS_CAM_L0>;
			video_high_speed_240fps_mif = <DVFS_MIF_L0>;
			video_high_speed_240fps_int = <DVFS_INT_L0>;
			video_high_speed_240fps_hpg = <0>;

			video_high_speed_dualfps_cam = <DVFS_CAM_L0>;
			video_high_speed_dualfps_mif = <DVFS_MIF_L0>;
			video_high_speed_dualfps_int = <DVFS_INT_L0>;
			video_high_speed_dualfps_hpg = <0>;

			video_high_speed_60fps_capture_cam = <DVFS_CAM_L0>;
			video_high_speed_60fps_capture_mif = <DVFS_MIF_L0>;
			video_high_speed_60fps_capture_int = <DVFS_INT_L0>;
			video_high_speed_60fps_capture_hpg = <0>;

			ext_front_cam = <DVFS_CAM_L0>;
			ext_front_mif = <DVFS_MIF_L0>;
			ext_front_int = <DVFS_INT_L0>;
			ext_front_hpg = <0>;

			ext_secure_cam = <DVFS_CAM_L0>;
			ext_secure_mif = <DVFS_MIF_L0>;
			ext_secure_int = <DVFS_INT_L0>;
			ext_secure_hpg = <0>;

			max_cam = <DVFS_CAM_L0>;
			max_mif = <DVFS_MIF_L0>;
			max_int = <DVFS_INT_L0>;
			max_hpg = <0>;
		};
	};
};

&pinctrl_5 {
	/* FRONT */
	/* No pull-up resistor, use internal one */
	hsi2c_0_bus: hsi2c_0-bus {
		samsung,pins = "gpc1-0", "gpc1-1";
		samsung,pin-function = <2>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	hsi2c_0_bus_in: hsi2c_0-bus-in {
		samsung,pins = "gpc1-0", "gpc1-1";
		samsung,pin-function = <3>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	/* REAR */
	/* No pull-up resistor, use internal one */
	hsi2c_1_bus: hsi2c_1-bus {
		samsung,pins = "gpc1-2", "gpc1-3";
		samsung,pin-function = <2>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	hsi2c_1_bus_in: hsi2c_1-bus-in {
		samsung,pins = "gpc1-2", "gpc1-3";
		samsung,pin-function = <3>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	/* REAR2 */
	/* No pull-up resistor, use internal one */
	hsi2c_2_bus: hsi2c_2-bus {
		samsung,pins = "gpc1-4", "gpc1-5";
		samsung,pin-function = <2>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	hsi2c_2_bus_in: hsi2c_2-bus-in {
		samsung,pins = "gpc1-4", "gpc1-5";
		samsung,pin-function = <3>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	/* rear EEPROM, Actuator */
	i2c_4_bus: i2c_4-bus {
		samsung,pins = "gpp1-2", "gpp1-3";
		samsung,pin-function = <2>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};

	i2c_4_bus_in: i2c_4-bus-in {
		samsung,pins = "gpp1-2", "gpp1-3";
		samsung,pin-function = <3>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <0>;
	};
};

&hsi2c_0 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpc1 0 0 &gpc1 1 0>;
	status = "okay";
	clock-frequency = <400000>;
	samsung,reset-before-trans;
	samsung,fast-plus-mode;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c_0_bus_in>;
	pinctrl-1 = <&hsi2c_0_bus>;
	pinctrl-2 = <&hsi2c_0_bus_in>;

	is-hi1336@D3 {
		compatible = "samsung,exynos-is-cis-hi1336";
		reg = <0x20>;
		id = <1>; /* matching sensor id */
		setfile = "setB";
		use_initial_ae;
	};
};

&hsi2c_1 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpc1 2 0 &gpc1 3 0>;
	status = "okay";
	clock-frequency = <400000>;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c_1_bus_in>;
	pinctrl-1 = <&hsi2c_1_bus>;
	pinctrl-2 = <&hsi2c_1_bus_in>;

	is-gm2@3D {
		compatible = "samsung,exynos-is-cis-gm2";
		reg = <0x2D>;
		id = <0>; /* matching sensor id */
		setfile = "setB";
		use_initial_ae;
	};
};

&hsi2c_2 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpc1 4 0 &gpc1 5 0>;
	status = "okay";
	clock-frequency = <400000>;
	samsung,reset-before-trans;
	samsung,fast-plus-mode;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&hsi2c_2_bus_in>;
	pinctrl-1 = <&hsi2c_2_bus>;
	pinctrl-2 = <&hsi2c_2_bus_in>;

	is-4ha@36 {
		compatible = "samsung,exynos-is-cis-4ha";
		reg = <0x2D>;
		id = <2>; /* matching sensor id */
		setfile = "setB";
		use_initial_ae;
	};
};

&i2c_4 {
	#address-cells = <1>;
	#size-cells = <0>;
	gpios = <&gpp1 2 0 &gpp1 3 0>;
	status = "okay";
	clock-frequency = <400000>;

	pinctrl-names = "default","on_i2c","off_i2c";
	pinctrl-0 = <&i2c_4_bus_in>;
	pinctrl-1 = <&i2c_4_bus>;
	pinctrl-2 = <&i2c_4_bus_in>;

	is-actuator@18 {
		compatible = "samsung,exynos-is-actuator-dw9808";
		reg = <0x0C>;
		id = <0>; /* matching is_sensor id */
		place = <0>;
	};
};

&is_sensor0 {
	#address-cells = <1>;
	#size-cells = <1>;
	scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
	id = <0>;
	csi_ch = <1>;
	dma_ch = <0 0 0 0>;
	vc_ch = <0 1 2 3>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	csi_mux = <0x1>;	/* IPP_INPUT = (ipp1_in << 4 | ipp0_in) */
	status = "okay";
	reg = <0x0 0x14410000 0x1000>, /* MIPI-CSI1 */
	    <0x0 0x144A0000 0x10000>; /* PHY: m0s4s4s2 */
	reg-names = "csi", "phy";
	interrupts = <0 INTREQ__CSIS1 IRQ_TYPE_LEVEL_HIGH>, /* MIPI-CSI1 */
			<0 INTREQ__CSIS_DMA_0 IRQ_TYPE_LEVEL_HIGH>,
			<0 INTREQ__CSIS_DMA_0 IRQ_TYPE_LEVEL_HIGH>,
			<0 INTREQ__CSIS_DMA_0 IRQ_TYPE_LEVEL_HIGH>,
			<0 INTREQ__CSIS_DMA_0 IRQ_TYPE_LEVEL_HIGH>;
	interrupt-names = "csi",
			"mode0_VC0", "mode0_VC1", "mode0_VC2", "mode0_VC3";
	phys = <&mipi_phy_csis1_m0s4s4s2 0>;
	phy-names = "csis_dphy";

	/* without PAF HW */
	sensor0_ch_mode0: sensor0-ch-mode0 {
		reg = <0x14431000 0x100>, /* DMA0 VC0 */
			<0x14431400 0x100>, /* DMA0 Common */
			<0x14431100 0x100>, /* DMA0 VC1 */
			<0x14431400 0x100>, /* DMA0 Common */
			<0x14431200 0x100>, /* DMA0 VC2 */
			<0x14431400 0x100>, /* DMA0 Common */
			<0x14431300 0x100>, /* DMA0 VC3 */
			<0x14431400 0x100>; /* DMA0 Common */
	};
};

&is_sensor1 {
	#address-cells = <1>;
	#size-cells = <1>;
	scenario = <SENSOR_SCENARIO_NORMAL>;    /* Normal, Vision, OIS etc */
	id = <1>;
	csi_ch = <0>;
	dma_ch = <1 1 1 1>;
	vc_ch = <0 1 2 3>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	csi_mux = <0x1>;	/* IPP_INPUT = (ipp1_in << 4 | ipp0_in) = (CSI_ID_A << 4 | CSI_ID_B) */
	status = "okay";

	reg = <0x0 0x14400000 0x1000>, /* MIPI-CSI0 */
		<0x0 0x14490000 0x10000>; /* PHY: m0s4s4s2 */
	reg-names = "csi", "phy";
	interrupts = <0 INTREQ__CSIS0 IRQ_TYPE_LEVEL_HIGH>, /*MIPI-CSI0 */
		<0 INTREQ__CSIS_DMA_0 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA_0 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA_0 IRQ_TYPE_LEVEL_HIGH>,
		<0 INTREQ__CSIS_DMA_0 IRQ_TYPE_LEVEL_HIGH>;
	interrupt-names = "csi",
		"mode0_VC0", "mode0_VC1", "mode0_VC2", "mode0_VC3";
	phys = <&mipi_phy_csis0_m0s4s4s2 0>;
	phy-names = "csis_dphy";

	/* without PAF HW */
	sensor1_ch_mode0: sensor1-ch-mode0 {
		reg = <0x14432000 0x100>, /* DMA1 VC0 */
			<0x14432400 0x100>, /* DMA1 Common */
			<0x14432100 0x100>, /* DMA1 VC1 */
			<0x14432400 0x100>, /* DMA1 Common */
			<0x14432200 0x100>, /* DMA1 VC2 */
			<0x14432400 0x100>, /* DMA1 Common */
			<0x14432300 0x100>, /* DMA1 VC3 */
			<0x14432400 0x100>; /* DMA1 Common */
	};
};

&is_sensor2 {
	#address-cells = <1>;
	#size-cells = <1>;
	scenario = <SENSOR_SCENARIO_NORMAL>;    /* Normal, Vision, OIS etc */
	id = <2>;
	csi_ch = <2>;
	dma_ch = <1 1 1 1>;
	vc_ch = <0 1 2 3>;
	flite_ch = <FLITE_ID_NOTHING>;
	is_bns = <0>;
	csi_mux = <0x21>;	/* IPP_INPUT = (ipp1_in << 4 | ipp0_in) = (CSI_ID_C << 4 | CSI_ID_B) */
	status = "okay";
};
