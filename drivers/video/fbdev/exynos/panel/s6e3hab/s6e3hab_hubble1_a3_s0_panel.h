/*
 * linux/drivers/video/fbdev/exynos/panel/s6e3hab/s6e3hab_hubble1_a3_s0_panel.h
 *
 * Header file for S6E3HAB Dimming Driver
 *
 * Copyright (c) 2016 Samsung Electronics
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __S6E3HAB_HUBBLE1_A3_S0_PANEL_H__
#define __S6E3HAB_HUBBLE1_A3_S0_PANEL_H__
#include "../panel.h"
#include "../panel_drv.h"
#include "s6e3hab.h"
#include "s6e3hab_dimming.h"
#ifdef CONFIG_SUPPORT_POC_SPI
#include "../panel_spi.h"
#endif
#ifdef CONFIG_EXYNOS_DECON_MDNIE_LITE
#include "s6e3hab_hubble1_a3_s0_panel_mdnie.h"
#endif
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
#include "s6e3hab_hubble1_a3_s0_panel_copr.h"
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
#include "s6e3hab_hubble_panel_poc.h"
#endif
#include "s6e3hab_hubble1_a3_s0_panel_dimming.h"
#ifdef CONFIG_SUPPORT_HMD
#include "s6e3hab_hubble1_a3_s0_panel_hmd_dimming.h"
#endif
#ifdef CONFIG_SUPPORT_AOD_BL
#include "s6e3hab_hubble1_a3_s0_panel_aod_dimming.h"
#endif
#ifdef CONFIG_EXTEND_LIVE_CLOCK
#include "s6e3hab_hubble1_aod_panel.h"
#include "../aod/aod_drv.h"
#endif

#ifdef CONFIG_SUPPORT_DISPLAY_PROFILER
#include "s6e3hab_profiler_panel.h"
#include "../display_profiler/display_profiler.h"
#endif

#include "s6e3hab_hubble1_a3_s0_panel_irc.h"
#include "s6e3hab_hubble_resol.h"
#ifdef CONFIG_SUPPORT_POC_SPI
#include "../spi/w25q80_panel_spi.h"
#include "../spi/mx25r4035_panel_spi.h"
#endif

#ifdef CONFIG_DYNAMIC_FREQ
#include "x1_df_tbl.h"
#endif

#ifdef CONFIG_SUPPORT_MAFPC
#include "s6e3hab_hubble_mafpc_panel.h"
#endif
#undef __pn_name__
#define __pn_name__	hubble1_a3_s0

#undef __PN_NAME__
#define __PN_NAME__	HUBBLE1_A3_S0

static struct seqinfo hubble1_a3_s0_preliminary_osc_96_5m_seqtbl[MAX_PANEL_SEQ];
static struct seqinfo hubble1_a3_s0_preliminary_seqtbl[MAX_PANEL_SEQ];
static struct seqinfo hubble1_a3_s0_osc_96_5m_seqtbl[MAX_PANEL_SEQ];
static struct seqinfo hubble1_a3_s0_seqtbl[MAX_PANEL_SEQ];

/* ===================================================================================== */
/* ============================= [S6E3HAB READ INFO TABLE] ============================= */
/* ===================================================================================== */
/* <READINFO TABLE> IS DEPENDENT ON LDI. IF YOU NEED, DEFINE PANEL's RESOURCE TABLE */


/* ===================================================================================== */
/* ============================= [S6E3HAB RESOURCE TABLE] ============================== */
/* ===================================================================================== */
/* <RESOURCE TABLE> IS DEPENDENT ON LDI. IF YOU NEED, DEFINE PANEL's RESOURCE TABLE */


/* ===================================================================================== */
/* ============================== [S6E3HAB MAPPING TABLE] ============================== */
/* ===================================================================================== */
#ifdef CONFIG_SUPPORT_HMD
static u8 hubble1_a3_s0_hmd_gamma_table[MAX_S6E3HAB_VRR_DIM][S6E3HAB_HMD_NR_LUMINANCE][S6E3HAB_GAMMA_CMD_CNT - 1];
static u8 hubble1_a3_s0_hmd_aor_table[MAX_S6E3HAB_VRR_DIM][S6E3HAB_HMD_NR_LUMINANCE][2] = {
	[S6E3HAB_VRR_DIM_60NS] = {
		{ 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 },
		{ 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 },
		{ 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 },
		{ 0x09, 0x93 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 },
	},
	[S6E3HAB_VRR_DIM_60HS] = {
		{ 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 },
		{ 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 },
		{ 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 },
		{ 0x09, 0x93 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 },
	},
	[S6E3HAB_VRR_DIM_120HS] = {
		{ 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 },
		{ 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 },
		{ 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 }, { 0x09, 0x93 },
		{ 0x09, 0x93 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 }, { 0x08, 0x61 },
	},
};
static u8 hubble1_a3_s0_hmd_elvss_table[MAX_S6E3HAB_VRR_DIM][S6E3HAB_HMD_NR_LUMINANCE][1] = {
	[S6E3HAB_VRR_DIM_60NS] = {
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
	},
	[S6E3HAB_VRR_DIM_60HS] = {
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
	},
	[S6E3HAB_VRR_DIM_120HS] = {
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
		{ 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 }, { 0x16 },
	},
};
#endif /* CONFIG_SUPPORT_HMD */

static u8 hubble1_a3_s0_gamma_table[MAX_S6E3HAB_VRR_DIM][S6E3HAB_HUBBLE_TOTAL_NR_LUMINANCE][S6E3HAB_GAMMA_CMD_CNT - 1];

static u8 hubble1_a3_s0_poc_comp_table[MAX_S6E3HAB_VRR_DIM][S6E3HAB_HUBBLE_TOTAL_NR_LUMINANCE][2] = {
	[S6E3HAB_VRR_DIM_60NS] = {
		{ 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A },
		{ 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1B }, { 0x53, 0x1B }, { 0x53, 0x1C }, { 0x53, 0x1D }, { 0x53, 0x1D }, { 0x53, 0x1E },
		{ 0x53, 0x1F }, { 0x53, 0x1F }, { 0x53, 0x20 }, { 0x53, 0x21 }, { 0x53, 0x22 }, { 0x53, 0x23 }, { 0x53, 0x24 }, { 0x53, 0x25 }, { 0x53, 0x26 }, { 0x53, 0x27 },
		{ 0x53, 0x29 }, { 0x53, 0x2A }, { 0x53, 0x2C }, { 0x53, 0x2D }, { 0x53, 0x2F }, { 0x53, 0x31 }, { 0x53, 0x33 }, { 0x53, 0x37 }, { 0x53, 0x3C }, { 0x53, 0x42 },
		{ 0x53, 0x48 }, { 0x53, 0x4F }, { 0x53, 0x56 }, { 0x53, 0x5C }, { 0x53, 0x61 }, { 0x53, 0x64 }, { 0x53, 0x69 }, { 0x53, 0x6D }, { 0x53, 0x71 }, { 0x53, 0x76 },
		{ 0x53, 0x7B }, { 0x53, 0x80 }, { 0x53, 0x85 }, { 0x53, 0x8B }, { 0x53, 0x91 }, { 0x53, 0x97 }, { 0x53, 0x9D }, { 0x53, 0xA3 }, { 0x53, 0xAA }, { 0x53, 0xB2 },
		{ 0x53, 0xBB }, { 0x53, 0xC6 }, { 0x53, 0xCF }, { 0x53, 0xD9 }, { 0x53, 0xE1 }, { 0x53, 0xE4 }, { 0x53, 0xE7 }, { 0x53, 0xEB }, { 0x53, 0xEE }, { 0x53, 0xF1 },
		{ 0x53, 0xF5 }, { 0x53, 0xF8 }, { 0x53, 0xFC }, { 0x53, 0xFF },
		/* HBM */
		{ 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF },
		{ 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF },
	},
	[S6E3HAB_VRR_DIM_60HS] = {
		{ 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A },
		{ 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1B }, { 0x53, 0x1B }, { 0x53, 0x1C }, { 0x53, 0x1D }, { 0x53, 0x1D }, { 0x53, 0x1E },
		{ 0x53, 0x1F }, { 0x53, 0x1F }, { 0x53, 0x20 }, { 0x53, 0x21 }, { 0x53, 0x22 }, { 0x53, 0x23 }, { 0x53, 0x24 }, { 0x53, 0x25 }, { 0x53, 0x26 }, { 0x53, 0x27 },
		{ 0x53, 0x29 }, { 0x53, 0x2A }, { 0x53, 0x2C }, { 0x53, 0x2D }, { 0x53, 0x2F }, { 0x53, 0x31 }, { 0x53, 0x33 }, { 0x53, 0x37 }, { 0x53, 0x3C }, { 0x53, 0x42 },
		{ 0x53, 0x48 }, { 0x53, 0x4F }, { 0x53, 0x56 }, { 0x53, 0x5C }, { 0x53, 0x61 }, { 0x53, 0x64 }, { 0x53, 0x69 }, { 0x53, 0x6D }, { 0x53, 0x71 }, { 0x53, 0x76 },
		{ 0x53, 0x7B }, { 0x53, 0x80 }, { 0x53, 0x85 }, { 0x53, 0x8B }, { 0x53, 0x91 }, { 0x53, 0x97 }, { 0x53, 0x9D }, { 0x53, 0xA3 }, { 0x53, 0xAA }, { 0x53, 0xB2 },
		{ 0x53, 0xBB }, { 0x53, 0xC6 }, { 0x53, 0xCF }, { 0x53, 0xD9 }, { 0x53, 0xE1 }, { 0x53, 0xE4 }, { 0x53, 0xE7 }, { 0x53, 0xEB }, { 0x53, 0xEE }, { 0x53, 0xF1 },
		{ 0x53, 0xF5 }, { 0x53, 0xF8 }, { 0x53, 0xFC }, { 0x53, 0xFF },
		/* HBM */
		{ 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF },
		{ 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF },
	},
	[S6E3HAB_VRR_DIM_120HS] = {
		{ 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A },
		{ 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1A }, { 0x53, 0x1B }, { 0x53, 0x1B }, { 0x53, 0x1C }, { 0x53, 0x1D }, { 0x53, 0x1D }, { 0x53, 0x1E },
		{ 0x53, 0x1F }, { 0x53, 0x1F }, { 0x53, 0x20 }, { 0x53, 0x21 }, { 0x53, 0x22 }, { 0x53, 0x23 }, { 0x53, 0x24 }, { 0x53, 0x25 }, { 0x53, 0x26 }, { 0x53, 0x27 },
		{ 0x53, 0x29 }, { 0x53, 0x2A }, { 0x53, 0x2C }, { 0x53, 0x2D }, { 0x53, 0x2F }, { 0x53, 0x31 }, { 0x53, 0x33 }, { 0x53, 0x37 }, { 0x53, 0x3C }, { 0x53, 0x42 },
		{ 0x53, 0x48 }, { 0x53, 0x4F }, { 0x53, 0x56 }, { 0x53, 0x5C }, { 0x53, 0x61 }, { 0x53, 0x64 }, { 0x53, 0x69 }, { 0x53, 0x6D }, { 0x53, 0x71 }, { 0x53, 0x76 },
		{ 0x53, 0x7B }, { 0x53, 0x80 }, { 0x53, 0x85 }, { 0x53, 0x8B }, { 0x53, 0x91 }, { 0x53, 0x97 }, { 0x53, 0x9D }, { 0x53, 0xA3 }, { 0x53, 0xAA }, { 0x53, 0xB2 },
		{ 0x53, 0xBB }, { 0x53, 0xC6 }, { 0x53, 0xCF }, { 0x53, 0xD9 }, { 0x53, 0xE1 }, { 0x53, 0xE4 }, { 0x53, 0xE7 }, { 0x53, 0xEB }, { 0x53, 0xEE }, { 0x53, 0xF1 },
		{ 0x53, 0xF5 }, { 0x53, 0xF8 }, { 0x53, 0xFC }, { 0x53, 0xFF },
		/* HBM */
		{ 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF },
		{ 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF }, { 0x53, 0xFF },
	},
};

static u8 hubble1_a3_s0_dbv_table[S6E3HAB_HUBBLE_TOTAL_NR_LUMINANCE][2] = {
	{ 0x00, 0x0A }, { 0x00, 0x0F }, { 0x00, 0x14 }, { 0x00, 0x18 }, { 0x00, 0x1D }, { 0x00, 0x22 }, { 0x00, 0x27 }, { 0x00, 0x2B }, { 0x00, 0x30 }, { 0x00, 0x35 },
	{ 0x00, 0x3A }, { 0x00, 0x3E }, { 0x00, 0x43 }, { 0x00, 0x48 }, { 0x00, 0x4D }, { 0x00, 0x52 }, { 0x00, 0x5B }, { 0x00, 0x60 }, { 0x00, 0x65 }, { 0x00, 0x6A },
	{ 0x00, 0x73 }, { 0x00, 0x78 }, { 0x00, 0x82 }, { 0x00, 0x8C }, { 0x00, 0x90 }, { 0x00, 0x9A }, { 0x00, 0xA4 }, { 0x00, 0xB2 }, { 0x00, 0xBC }, { 0x00, 0xC6 },
	{ 0x00, 0xD4 }, { 0x00, 0xE3 }, { 0x00, 0xF1 }, { 0x01, 0x00 }, { 0x01, 0x0E }, { 0x01, 0x21 }, { 0x01, 0x35 }, { 0x01, 0x48 }, { 0x01, 0x5C }, { 0x01, 0x76 },
	{ 0x01, 0x8F }, { 0x01, 0xA8 }, { 0x01, 0xC7 }, { 0x01, 0xE0 }, { 0x02, 0x02 }, { 0x02, 0x1E }, { 0x02, 0x45 }, { 0x02, 0x66 }, { 0x02, 0x8D }, { 0x02, 0xB8 },
	{ 0x02, 0xE3 }, { 0x03, 0x13 }, { 0x03, 0x43 }, { 0x03, 0x78 }, { 0x03, 0xB3 }, { 0x03, 0xED }, { 0x04, 0x2C }, { 0x04, 0x71 }, { 0x04, 0xBA }, { 0x05, 0x08 },
	{ 0x05, 0x5A }, { 0x05, 0xB1 }, { 0x05, 0xFE }, { 0x06, 0x50 }, { 0x06, 0xA4 }, { 0x06, 0xC7 }, { 0x06, 0xEF }, { 0x07, 0x11 }, { 0x07, 0x39 }, { 0x07, 0x5C },
	{ 0x07, 0x83 }, { 0x07, 0xAB }, { 0x07, 0xD7 }, { 0x07, 0xFF },
	/* HBM */
	{ 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF },
	{ 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF }, { 0x07, 0xFF },
};

static u8 hubble1_a3_s0_aor_table[MAX_S6E3HAB_VRR_DIM][S6E3HAB_HUBBLE_TOTAL_NR_LUMINANCE][2] = {
	[S6E3HAB_VRR_DIM_60NS] = {
		{ 0x0C, 0x65 },	{ 0x0C, 0x45 },	{ 0x0C, 0x27 },	{ 0x0C, 0x11 },	{ 0x0B, 0xF1 },	{ 0x0B, 0xD3 },	{ 0x0B, 0xB5 },	{ 0x0B, 0x99 },	{ 0x0B, 0x75 },	{ 0x0B, 0x57 },
		{ 0x0B, 0x39 },	{ 0x0B, 0x1F },	{ 0x0B, 0x01 },	{ 0x0A, 0xE1 },	{ 0x0A, 0xC2 },	{ 0x0A, 0xA4 },	{ 0x0A, 0x65 },	{ 0x0A, 0x44 },	{ 0x0A, 0x21 },	{ 0x0A, 0x06 },
		{ 0x09, 0xC3 },	{ 0x09, 0xA5 },	{ 0x09, 0x64 },	{ 0x09, 0x20 },	{ 0x09, 0x02 },	{ 0x08, 0xB7 },	{ 0x08, 0x68 },	{ 0x07, 0xF5 },	{ 0x07, 0xAF },	{ 0x07, 0x5C },
		{ 0x06, 0xE4 },	{ 0x06, 0x74 },	{ 0x06, 0x09 },	{ 0x05, 0xA5 },	{ 0x05, 0x3B },	{ 0x04, 0xAF },	{ 0x04, 0x19 },	{ 0x03, 0x83 },	{ 0x03, 0x01 },	{ 0x02, 0x25 },
		{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },
		{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },
		{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },
		{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },
		/* HBM */
		{ 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 },
		{ 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 },
	},
	[S6E3HAB_VRR_DIM_60HS] = {
		{ 0x0C, 0x59 }, { 0x0C, 0x3A }, { 0x0C, 0x1C }, { 0x0B, 0xFE }, { 0x0B, 0xDF }, { 0x0B, 0xC1 }, { 0x0B, 0xA3 }, { 0x0B, 0x85 }, { 0x0B, 0x63 }, { 0x0B, 0x47 },
		{ 0x0B, 0x29 }, { 0x0B, 0x09 }, { 0x0A, 0xEB }, { 0x0A, 0xC9 }, { 0x0A, 0xAB }, { 0x0A, 0x8C }, { 0x0A, 0x50 }, { 0x0A, 0x2D }, { 0x0A, 0x0B }, { 0x09, 0xEB },
		{ 0x09, 0xB0 }, { 0x09, 0x91 }, { 0x09, 0x4E }, { 0x09, 0x17 }, { 0x08, 0xEF }, { 0x08, 0xA1 }, { 0x08, 0x59 }, { 0x07, 0xE9 },	{ 0x07, 0x99 },	{ 0x07, 0x49 },
		{ 0x06, 0xD0 }, { 0x06, 0x68 }, { 0x05, 0xFA }, { 0x05, 0x94 }, { 0x05, 0x30 }, { 0x04, 0x98 }, { 0x04, 0x0C }, { 0x03, 0x76 }, { 0x02, 0xE0 }, { 0x02, 0x2C },
		{ 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 },
		{ 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 },
		{ 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 },
		{ 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 },
		/* HBM */
		{ 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 },
		{ 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 },
	},
	[S6E3HAB_VRR_DIM_120HS] = {
		{ 0x0C, 0x59 },	{ 0x0C, 0x3A }, { 0x0C, 0x1C }, { 0x0B, 0xFE },	{ 0x0B, 0xDF },	{ 0x0B, 0xC1 },	{ 0x0B, 0xA3 }, { 0x0B, 0x85 },	{ 0x0B, 0x63 },	{ 0x0B, 0x47 },
		{ 0x0B, 0x29 },	{ 0x0B, 0x09 },	{ 0x0A, 0xEB },	{ 0x0A, 0xC9 },	{ 0x0A, 0xAB }, { 0x0A, 0x8C },	{ 0x0A, 0x50 },	{ 0x0A, 0x2D },	{ 0x0A, 0x0B },	{ 0x09, 0xEB },
		{ 0x09, 0xB0 }, { 0x09, 0x91 },	{ 0x09, 0x4E },	{ 0x09, 0x17 },	{ 0x08, 0xEF },	{ 0x08, 0xA1 },	{ 0x08, 0x59 },	{ 0x07, 0xE9 },	{ 0x07, 0x99 },	{ 0x07, 0x49 },
		{ 0x06, 0xD0 },	{ 0x06, 0x68 },	{ 0x05, 0xFA },	{ 0x05, 0x94 },	{ 0x05, 0x30 },	{ 0x04, 0x98 },	{ 0x04, 0x0C },	{ 0x03, 0x76 },	{ 0x02, 0xE0 },	{ 0x02, 0x2C },
		{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },
		{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },
		{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },
		{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },	{ 0x01, 0xE4 },
		/* HBM */
		{ 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 },
		{ 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 }, { 0x01, 0xE4 },
	},
};

static u8 hubble1_a3_s0_mps_table[][1] = { { 0xCC }, { 0xDC } };
static u8 hubble1_a3_s0_elvss_table[MAX_S6E3HAB_VRR_DIM][3][S6E3HAB_HUBBLE_TOTAL_NR_LUMINANCE][1] = {
	[S6E3HAB_VRR_DIM_60NS] = {
		{
			/* OVER_ZERO */
			{ 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x18 }, { 0x18 },
			{ 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x19 }, { 0x19 },
			{ 0x19 }, { 0x19 }, { 0x19 }, { 0x19 }, { 0x19 }, { 0x1A }, { 0x1B }, { 0x1C }, { 0x1D }, { 0x1E },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },	{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1E }, { 0x1E }, { 0x1D }, { 0x1D }, { 0x1C },
			{ 0x1B }, { 0x1B }, { 0x1A }, { 0x19 }, { 0x19 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x17 },
			{ 0x17 }, { 0x17 }, { 0x16 }, { 0x16 },
			/* HBM */
			{ 0x26 }, { 0x25 }, { 0x24 }, { 0x23 }, { 0x22 }, { 0x21 }, { 0x20 }, { 0x1F }, { 0x1E }, { 0x1D },
			{ 0x1C }, { 0x1A }, { 0x19 }, { 0x18 }, { 0x17 }, { 0x16 },
		},
		{
			/* UNDER_ZERO */
			{ 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D },	{ 0x1D }, { 0x1D },
			{ 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D },
			{ 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1E },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1E }, { 0x1E }, { 0x1D }, { 0x1D }, { 0x1C },
			{ 0x1B }, { 0x1B }, { 0x1A }, { 0x19 }, { 0x19 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x17 },
			{ 0x17 }, { 0x17 }, { 0x16 }, { 0x16 },
			/* HBM */
			{ 0x26 }, { 0x25 }, { 0x24 }, { 0x23 }, { 0x22 }, { 0x21 }, { 0x20 }, { 0x1F }, { 0x1E }, { 0x1D },
			{ 0x1C }, { 0x1A }, { 0x19 }, { 0x18 }, { 0x17 }, { 0x16 },
		},
		{
			/* UNDER_MINUS_FIFTEEN */
			{ 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E },
			{ 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E },
			{ 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },	{ 0x1F }, { 0x1E },	{ 0x1E }, { 0x1D },	{ 0x1D }, { 0x1C },
			{ 0x1B }, { 0x1B }, { 0x1A }, { 0x19 }, { 0x19 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x17 },
			{ 0x17 }, { 0x17 },	{ 0x16 }, { 0x16 },
			/* HBM */
			{ 0x26 }, { 0x25 }, { 0x24 }, { 0x23 }, { 0x22 }, { 0x21 }, { 0x20 }, { 0x1F }, { 0x1E }, { 0x1D },
			{ 0x1C }, { 0x1A }, { 0x19 }, { 0x18 }, { 0x17 }, { 0x16 },
		},
	},
	[S6E3HAB_VRR_DIM_60HS] = {
		{
			/* OVER_ZERO */
			{ 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x18 }, { 0x18 },
			{ 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x19 }, { 0x19 },
			{ 0x19 }, { 0x19 }, { 0x19 }, { 0x19 }, { 0x19 }, { 0x1A }, { 0x1B }, { 0x1C }, { 0x1D }, { 0x1E },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1E }, { 0x1E }, { 0x1D }, { 0x1D }, { 0x1C },
			{ 0x1B }, { 0x1B }, { 0x1A }, { 0x19 }, { 0x19 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x17 },
			{ 0x17 }, { 0x17 }, { 0x16 }, { 0x16 },
			/* HBM */
			{ 0x26 }, { 0x25 }, { 0x24 }, { 0x23 }, { 0x22 }, { 0x21 }, { 0x20 }, { 0x1F }, { 0x1E }, { 0x1D },
			{ 0x1C }, { 0x1A }, { 0x19 }, { 0x18 }, { 0x17 }, { 0x16 },
		},
		{
			/* UNDER_ZERO */
			{ 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D },
			{ 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D },
			{ 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1E },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1E }, { 0x1E }, { 0x1D }, { 0x1D }, { 0x1C },
			{ 0x1B }, { 0x1B }, { 0x1A }, { 0x19 }, { 0x19 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x17 },
			{ 0x17 }, { 0x17 }, { 0x16 }, { 0x16 },
			/* HBM */
			{ 0x26 }, { 0x25 }, { 0x24 }, { 0x23 }, { 0x22 }, { 0x21 }, { 0x20 }, { 0x1F }, { 0x1E }, { 0x1D },
			{ 0x1C }, { 0x1A }, { 0x19 }, { 0x18 }, { 0x17 }, { 0x16 },
		},
		{
			/* UNDER_MINUS_FIFTEEN */
			{ 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E },
			{ 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E },
			{ 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1E }, { 0x1E }, { 0x1D }, { 0x1D }, { 0x1C },
			{ 0x1B }, { 0x1B }, { 0x1A }, { 0x19 }, { 0x19 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x17 },
			{ 0x17 }, { 0x17 }, { 0x16 }, { 0x16 },
			/* HBM */
			{ 0x26 }, { 0x25 }, { 0x24 }, { 0x23 }, { 0x22 }, { 0x21 }, { 0x20 }, { 0x1F }, { 0x1E }, { 0x1D },
			{ 0x1C }, { 0x1A }, { 0x19 }, { 0x18 }, { 0x17 }, { 0x16 },
		},
	},
	[S6E3HAB_VRR_DIM_120HS] = {
		{
			/* OVER_ZERO */
			{ 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x17 }, { 0x18 }, { 0x18 },
			{ 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x19 }, { 0x19 },
			{ 0x19 }, { 0x19 }, { 0x19 }, { 0x19 }, { 0x19 }, { 0x1A }, { 0x1B }, { 0x1C }, { 0x1D }, { 0x1E },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1E }, { 0x1E }, { 0x1D }, { 0x1D }, { 0x1C },
			{ 0x1B }, { 0x1B }, { 0x1A }, { 0x19 }, { 0x19 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x17 },
			{ 0x17 }, { 0x17 }, { 0x16 }, { 0x16 },
			/* HBM */
			{ 0x26 }, { 0x25 }, { 0x24 }, { 0x23 }, { 0x22 }, { 0x21 }, { 0x20 }, { 0x1F }, { 0x1E }, { 0x1D },
			{ 0x1C }, { 0x1A }, { 0x19 }, { 0x18 }, { 0x17 }, { 0x16 },
		},
		{
			/* UNDER_ZERO */
			{ 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D },
			{ 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D },
			{ 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1D }, { 0x1E },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1E }, { 0x1E }, { 0x1D }, { 0x1D }, { 0x1C },
			{ 0x1B }, { 0x1B }, { 0x1A }, { 0x19 }, { 0x19 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x17 },
			{ 0x17 }, { 0x17 }, { 0x16 }, { 0x16 },
			/* HBM */
			{ 0x26 }, { 0x25 }, { 0x24 }, { 0x23 }, { 0x22 }, { 0x21 }, { 0x20 }, { 0x1F }, { 0x1E }, { 0x1D },
			{ 0x1C }, { 0x1A }, { 0x19 }, { 0x18 }, { 0x17 }, { 0x16 },
		},
		{
			/* UNDER_MINUS_FIFTEEN */
			{ 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E },
			{ 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E },
			{ 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E }, { 0x1E },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F },
			{ 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1F }, { 0x1E }, { 0x1E }, { 0x1D }, { 0x1D }, { 0x1C },
			{ 0x1B }, { 0x1B }, { 0x1A }, { 0x19 }, { 0x19 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x18 }, { 0x17 },
			{ 0x17 }, { 0x17 }, { 0x16 }, { 0x16 },
			/* HBM */
			{ 0x26 }, { 0x25 }, { 0x24 }, { 0x23 }, { 0x22 }, { 0x21 }, { 0x20 }, { 0x1F }, { 0x1E }, { 0x1D },
			{ 0x1C }, { 0x1A }, { 0x19 }, { 0x18 }, { 0x17 }, { 0x16 },
		},

	},

};

static u8 hubble1_a3_s0_elvss_temp_table[MAX_S6E3HAB_VRR_DIM][3][S6E3HAB_HUBBLE_TOTAL_NR_LUMINANCE][1] = {
	[S6E3HAB_VRR_DIM_60NS] = {
		{
			/* OVER_ZERO */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			/* HBM */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 },
		},
		{
			/* UNDER_ZERO */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			/* HBM */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 },
		},
		{
			/* UNDER_MINUS_FIFTEEN */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			/* HBM */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 },
		},
	},
	[S6E3HAB_VRR_DIM_60HS] = {
		{
			/* OVER_ZERO */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			/* HBM */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 },
		},
		{
			/* UNDER_ZERO */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			/* HBM */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 },
		},
		{
			/* UNDER_MINUS_FIFTEEN */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			/* HBM */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 },
		},
	},
	[S6E3HAB_VRR_DIM_120HS] = {
		{
			/* OVER_ZERO */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			/* HBM */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 },
		},
		{
			/* UNDER_ZERO */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			/* HBM */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 },
		},
		{
			/* UNDER_MINUS_FIFTEEN */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			/* HBM */
			{ 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 }, { 0x0 },
			{ 0x0 }, { 0x0 },
		},
	}
};

static u8 hubble1_a3_s0_vint_table[MAX_S6E3HAB_VRR_DIM][S6E3HAB_HUBBLE_TOTAL_NR_LUMINANCE][1] = {
	[S6E3HAB_VRR_DIM_60NS] = {
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		/* HBM */
		{ 0x23 }, { 0x24 }, { 0x25 }, { 0x26 }, { 0x27 }, { 0x28 }, { 0x29 }, { 0x2A }, { 0x2B }, { 0x2C },
		{ 0x2D }, { 0x2E }, { 0x2F }, { 0x30 }, { 0x31 }, { 0x32 },
	},
	[S6E3HAB_VRR_DIM_60HS] = {
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		/* HBM */
		{ 0x23 }, { 0x24 }, { 0x25 }, { 0x26 }, { 0x27 }, { 0x28 }, { 0x29 }, { 0x2A }, { 0x2B }, { 0x2C },
		{ 0x2D }, { 0x2E }, { 0x2F }, { 0x30 }, { 0x31 }, { 0x32 },
	},
	[S6E3HAB_VRR_DIM_120HS] = {
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		{ 0x23 }, { 0x23 }, { 0x23 }, { 0x23 },
		/* HBM */
		{ 0x23 }, { 0x24 }, { 0x25 }, { 0x26 }, { 0x27 }, { 0x28 }, { 0x29 }, { 0x2A }, { 0x2B }, { 0x2C },
		{ 0x2D }, { 0x2E }, { 0x2F }, { 0x30 }, { 0x31 }, { 0x32 },
	},
};

#ifdef CONFIG_SUPPORT_XTALK_MODE
static u8 hubble1_a3_s0_vgh_table[][1] = {
	{ 0x30 }, /* VGH 7.0V */
	{ 0x28 }, /* VGH 6.2V */
};
#endif

static u8 hubble1_a3_s0_acl_onoff_table[][1] = {
	{ 0x00 }, /* acl off */
	{ 0x02 }, /* acl on */
};

static u8 hubble1_a3_s0_acl_frame_avg_table[][1] = {
	{ 0x44 }, /* 16 Frame Avg */
	{ 0x55 }, /* 32 Frame Avg */
};

static u8 hubble1_a3_s0_acl_start_point_table[][2] = {
	{ 0x40, 0xFF }, /* 50 Percent */
	{ 0x80, 0x65 }, /* 60 Percent */
};

static u8 hubble1_a3_s0_acl_opr_table[][1] = {
	{ 0x00 }, /* ACL OFF OPR */
	{ 0x0F }, /* ACL ON OPR_3 */
	{ 0x1E }, /* ACL ON OPR_6 */
	{ 0x26 }, /* ACL ON OPR_8 */
	{ 0x3D }, /* ACL ON OPR_12 */
	{ 0x55 }, /* ACL ON OPR_15 */
};

static u8 hubble1_a3_s0_irc_mode_table[][4] = {
	{ 0x65, 0xFF, 0x01, 0x00 },	/* moderato */
	{ 0x25, 0xD1, 0x02, 0x2D },	/* flat gamma */
};

static u8 hubble1_a3_s0_irc_table[MAX_S6E3HAB_VRR_DIM][S6E3HAB_HUBBLE_TOTAL_NR_LUMINANCE][S6E3HAB_IRC_VALUE_LEN] = {
	[S6E3HAB_VRR_DIM_60NS] = {
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x08, 0x08, 0x08, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x05, 0x05, 0x05, 0x07, 0x07, 0x07, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x05, 0x05, 0x05, 0x07, 0x07, 0x07, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x06, 0x06, 0x06, 0x08, 0x08, 0x08, 0x09, 0x09, 0x09, 0x0A, 0x0A, 0x0A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x06, 0x06, 0x06, 0x08, 0x08, 0x08, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x06, 0x06, 0x06, 0x09, 0x09, 0x09, 0x0A, 0x0A, 0x0A, 0x0B, 0x0B, 0x0B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x07, 0x07, 0x07, 0x09, 0x09, 0x09, 0x0B, 0x0B, 0x0B, 0x0B, 0x0B, 0x0B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x07, 0x07, 0x07, 0x0A, 0x0A, 0x0A, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x08, 0x08, 0x08, 0x0A, 0x0A, 0x0A, 0x0C, 0x0C, 0x0C, 0x0D, 0x0D, 0x0D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x08, 0x08, 0x08, 0x0B, 0x0B, 0x0B, 0x0D, 0x0D, 0x0D, 0x0E, 0x0E, 0x0E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x09, 0x09, 0x09, 0x0C, 0x0C, 0x0C, 0x0E, 0x0E, 0x0E, 0x0F, 0x0F, 0x0F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x09, 0x09, 0x09, 0x0C, 0x0C, 0x0C, 0x0F, 0x0F, 0x0F, 0x10, 0x10, 0x10, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x0A, 0x0A, 0x0A, 0x0D, 0x0D, 0x0D, 0x10, 0x10, 0x10, 0x11, 0x11, 0x11, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0B, 0x0B, 0x0B, 0x0E, 0x0E, 0x0E, 0x11, 0x11, 0x11, 0x12, 0x12, 0x12, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0B, 0x0B, 0x0B, 0x0F, 0x0F, 0x0F, 0x12, 0x12, 0x12, 0x13, 0x13, 0x13, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0C, 0x0C, 0x0C, 0x10, 0x10, 0x10, 0x13, 0x13, 0x13, 0x14, 0x14, 0x14, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0D, 0x0D, 0x0D, 0x11, 0x11, 0x11, 0x14, 0x14, 0x14, 0x15, 0x15, 0x15, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0E, 0x0E, 0x0E, 0x12, 0x12, 0x12, 0x16, 0x16, 0x16, 0x17, 0x17, 0x17, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x0E, 0x0E, 0x0E, 0x13, 0x13, 0x13, 0x17, 0x17, 0x17, 0x18, 0x18, 0x18, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x0F, 0x0F, 0x0F, 0x14, 0x14, 0x14, 0x18, 0x18, 0x18, 0x1A, 0x1A, 0x1A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x10, 0x10, 0x10, 0x16, 0x16, 0x16, 0x1A, 0x1A, 0x1A, 0x1B, 0x1B, 0x1B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x11, 0x11, 0x11, 0x17, 0x17, 0x17, 0x1C, 0x1C, 0x1C, 0x1D, 0x1D, 0x1D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x05, 0x05, 0x05, 0x13, 0x13, 0x13, 0x19, 0x19, 0x19, 0x1D, 0x1D, 0x1D, 0x1F, 0x1F, 0x1F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x05, 0x05, 0x05, 0x14, 0x14, 0x14, 0x1A, 0x1A, 0x1A, 0x1F, 0x1F, 0x1F, 0x21, 0x21, 0x21, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x05, 0x05, 0x05, 0x15, 0x15, 0x15, 0x1C, 0x1C, 0x1C, 0x21, 0x21, 0x21, 0x23, 0x23, 0x23, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x06, 0x06, 0x06, 0x16, 0x16, 0x16, 0x1E, 0x1E, 0x1E, 0x23, 0x23, 0x23, 0x25, 0x25, 0x25, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x06, 0x06, 0x06, 0x18, 0x18, 0x18, 0x20, 0x20, 0x20, 0x25, 0x25, 0x25, 0x27, 0x27, 0x27, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x06, 0x06, 0x06, 0x19, 0x19, 0x19, 0x22, 0x22, 0x22, 0x28, 0x28, 0x28, 0x2A, 0x2A, 0x2A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x07, 0x07, 0x07, 0x1B, 0x1B, 0x1B, 0x24, 0x24, 0x24, 0x2A, 0x2A, 0x2A, 0x2D, 0x2D, 0x2D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x07, 0x07, 0x07, 0x1C, 0x1C, 0x1C, 0x26, 0x26, 0x26, 0x2D, 0x2D, 0x2D, 0x2F, 0x2F, 0x2F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x08, 0x08, 0x08, 0x1E, 0x1E, 0x1E, 0x28, 0x28, 0x28, 0x30, 0x30, 0x30, 0x32, 0x32, 0x32, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x08, 0x08, 0x08, 0x20, 0x20, 0x20, 0x2B, 0x2B, 0x2B, 0x33, 0x33, 0x33, 0x36, 0x36, 0x36, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x09, 0x09, 0x09, 0x22, 0x22, 0x22, 0x2E, 0x2E, 0x2E, 0x36, 0x36, 0x36, 0x39, 0x39, 0x39, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x09, 0x09, 0x09, 0x24, 0x24, 0x24, 0x30, 0x30, 0x30, 0x39, 0x39, 0x39, 0x3C, 0x3C, 0x3C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x26, 0x26, 0x26, 0x33, 0x33, 0x33, 0x3C, 0x3C, 0x3C, 0x3F, 0x3F, 0x3F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x28, 0x28, 0x28, 0x35, 0x35, 0x35, 0x3F, 0x3F, 0x3F, 0x43, 0x43, 0x43, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x29, 0x29, 0x29, 0x36, 0x36, 0x36, 0x41, 0x41, 0x41, 0x44, 0x44, 0x44, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x2A, 0x2A, 0x2A, 0x38, 0x38, 0x38, 0x42, 0x42, 0x42, 0x46, 0x46, 0x46, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2B, 0x2B, 0x2B, 0x39, 0x39, 0x39, 0x43, 0x43, 0x43, 0x47, 0x47, 0x47, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2B, 0x2B, 0x2B, 0x3A, 0x3A, 0x3A, 0x45, 0x45, 0x45, 0x48, 0x48, 0x48, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2C, 0x2C, 0x2C, 0x3B, 0x3B, 0x3B, 0x46, 0x46, 0x46, 0x4A, 0x4A, 0x4A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2D, 0x2D, 0x2D, 0x3C, 0x3C, 0x3C, 0x47, 0x47, 0x47, 0x4B, 0x4B, 0x4B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x2E, 0x2E, 0x2E, 0x3D, 0x3D, 0x3D, 0x49, 0x49, 0x49, 0x4D, 0x4D, 0x4D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x2F, 0x2F, 0x2F, 0x3F, 0x3F, 0x3F, 0x4B, 0x4B, 0x4B, 0x4E, 0x4E, 0x4E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x30, 0x30, 0x30, 0x40, 0x40, 0x40, 0x4C, 0x4C, 0x4C, 0x50, 0x50, 0x50, 0x12, 0xC7, 0xA4, 0x18 },
		/* HBM */
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x31, 0x31, 0x31, 0x42, 0x42, 0x42, 0x4E, 0x4E, 0x4E, 0x52, 0x52, 0x52, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x33, 0x33, 0x33, 0x44, 0x44, 0x44, 0x50, 0x50, 0x50, 0x55, 0x55, 0x55, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x34, 0x34, 0x34, 0x45, 0x45, 0x45, 0x52, 0x52, 0x52, 0x57, 0x57, 0x57, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x35, 0x35, 0x35, 0x47, 0x47, 0x47, 0x54, 0x54, 0x54, 0x58, 0x58, 0x58, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x36, 0x36, 0x36, 0x48, 0x48, 0x48, 0x55, 0x55, 0x55, 0x5A, 0x5A, 0x5A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x49, 0x49, 0x49, 0x57, 0x57, 0x57, 0x5B, 0x5B, 0x5B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x4A, 0x4A, 0x4A, 0x58, 0x58, 0x58, 0x5C, 0x5C, 0x5C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4A, 0x4A, 0x4A, 0x58, 0x58, 0x58, 0x5D, 0x5D, 0x5D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x58, 0x58, 0x58, 0x5D, 0x5D, 0x5D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x4A, 0x4A, 0x4A, 0x58, 0x58, 0x58, 0x5C, 0x5C, 0x5C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x49, 0x49, 0x49, 0x57, 0x57, 0x57, 0x5B, 0x5B, 0x5B, 0x12, 0xC7, 0xA4, 0x18 },
	},
	[S6E3HAB_VRR_DIM_60HS] = {
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x08, 0x08, 0x08, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x05, 0x05, 0x05, 0x07, 0x07, 0x07, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x05, 0x05, 0x05, 0x07, 0x07, 0x07, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x06, 0x06, 0x06, 0x08, 0x08, 0x08, 0x09, 0x09, 0x09, 0x0A, 0x0A, 0x0A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x06, 0x06, 0x06, 0x08, 0x08, 0x08, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x06, 0x06, 0x06, 0x09, 0x09, 0x09, 0x0A, 0x0A, 0x0A, 0x0B, 0x0B, 0x0B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x07, 0x07, 0x07, 0x09, 0x09, 0x09, 0x0B, 0x0B, 0x0B, 0x0B, 0x0B, 0x0B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x07, 0x07, 0x07, 0x0A, 0x0A, 0x0A, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x08, 0x08, 0x08, 0x0A, 0x0A, 0x0A, 0x0C, 0x0C, 0x0C, 0x0D, 0x0D, 0x0D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x08, 0x08, 0x08, 0x0B, 0x0B, 0x0B, 0x0D, 0x0D, 0x0D, 0x0E, 0x0E, 0x0E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x09, 0x09, 0x09, 0x0C, 0x0C, 0x0C, 0x0E, 0x0E, 0x0E, 0x0F, 0x0F, 0x0F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x09, 0x09, 0x09, 0x0C, 0x0C, 0x0C, 0x0F, 0x0F, 0x0F, 0x10, 0x10, 0x10, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x0A, 0x0A, 0x0A, 0x0D, 0x0D, 0x0D, 0x10, 0x10, 0x10, 0x11, 0x11, 0x11, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0B, 0x0B, 0x0B, 0x0E, 0x0E, 0x0E, 0x11, 0x11, 0x11, 0x12, 0x12, 0x12, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0B, 0x0B, 0x0B, 0x0F, 0x0F, 0x0F, 0x12, 0x12, 0x12, 0x13, 0x13, 0x13, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0C, 0x0C, 0x0C, 0x10, 0x10, 0x10, 0x13, 0x13, 0x13, 0x14, 0x14, 0x14, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0D, 0x0D, 0x0D, 0x11, 0x11, 0x11, 0x14, 0x14, 0x14, 0x15, 0x15, 0x15, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0E, 0x0E, 0x0E, 0x12, 0x12, 0x12, 0x16, 0x16, 0x16, 0x17, 0x17, 0x17, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x0E, 0x0E, 0x0E, 0x13, 0x13, 0x13, 0x17, 0x17, 0x17, 0x18, 0x18, 0x18, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x0F, 0x0F, 0x0F, 0x14, 0x14, 0x14, 0x18, 0x18, 0x18, 0x1A, 0x1A, 0x1A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x10, 0x10, 0x10, 0x16, 0x16, 0x16, 0x1A, 0x1A, 0x1A, 0x1B, 0x1B, 0x1B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x11, 0x11, 0x11, 0x17, 0x17, 0x17, 0x1C, 0x1C, 0x1C, 0x1D, 0x1D, 0x1D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x05, 0x05, 0x05, 0x13, 0x13, 0x13, 0x19, 0x19, 0x19, 0x1D, 0x1D, 0x1D, 0x1F, 0x1F, 0x1F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x05, 0x05, 0x05, 0x14, 0x14, 0x14, 0x1A, 0x1A, 0x1A, 0x1F, 0x1F, 0x1F, 0x21, 0x21, 0x21, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x05, 0x05, 0x05, 0x15, 0x15, 0x15, 0x1C, 0x1C, 0x1C, 0x21, 0x21, 0x21, 0x23, 0x23, 0x23, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x06, 0x06, 0x06, 0x16, 0x16, 0x16, 0x1E, 0x1E, 0x1E, 0x23, 0x23, 0x23, 0x25, 0x25, 0x25, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x06, 0x06, 0x06, 0x18, 0x18, 0x18, 0x20, 0x20, 0x20, 0x25, 0x25, 0x25, 0x27, 0x27, 0x27, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x06, 0x06, 0x06, 0x19, 0x19, 0x19, 0x22, 0x22, 0x22, 0x28, 0x28, 0x28, 0x2A, 0x2A, 0x2A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x07, 0x07, 0x07, 0x1B, 0x1B, 0x1B, 0x24, 0x24, 0x24, 0x2A, 0x2A, 0x2A, 0x2D, 0x2D, 0x2D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x07, 0x07, 0x07, 0x1C, 0x1C, 0x1C, 0x26, 0x26, 0x26, 0x2D, 0x2D, 0x2D, 0x2F, 0x2F, 0x2F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x08, 0x08, 0x08, 0x1E, 0x1E, 0x1E, 0x28, 0x28, 0x28, 0x30, 0x30, 0x30, 0x32, 0x32, 0x32, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x08, 0x08, 0x08, 0x20, 0x20, 0x20, 0x2B, 0x2B, 0x2B, 0x33, 0x33, 0x33, 0x36, 0x36, 0x36, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x09, 0x09, 0x09, 0x22, 0x22, 0x22, 0x2E, 0x2E, 0x2E, 0x36, 0x36, 0x36, 0x39, 0x39, 0x39, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x09, 0x09, 0x09, 0x24, 0x24, 0x24, 0x30, 0x30, 0x30, 0x39, 0x39, 0x39, 0x3C, 0x3C, 0x3C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x26, 0x26, 0x26, 0x33, 0x33, 0x33, 0x3C, 0x3C, 0x3C, 0x3F, 0x3F, 0x3F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x28, 0x28, 0x28, 0x35, 0x35, 0x35, 0x3F, 0x3F, 0x3F, 0x43, 0x43, 0x43, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x29, 0x29, 0x29, 0x36, 0x36, 0x36, 0x41, 0x41, 0x41, 0x44, 0x44, 0x44, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x2A, 0x2A, 0x2A, 0x38, 0x38, 0x38, 0x42, 0x42, 0x42, 0x46, 0x46, 0x46, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2B, 0x2B, 0x2B, 0x39, 0x39, 0x39, 0x43, 0x43, 0x43, 0x47, 0x47, 0x47, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2B, 0x2B, 0x2B, 0x3A, 0x3A, 0x3A, 0x45, 0x45, 0x45, 0x48, 0x48, 0x48, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2C, 0x2C, 0x2C, 0x3B, 0x3B, 0x3B, 0x46, 0x46, 0x46, 0x4A, 0x4A, 0x4A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2D, 0x2D, 0x2D, 0x3C, 0x3C, 0x3C, 0x47, 0x47, 0x47, 0x4B, 0x4B, 0x4B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x2E, 0x2E, 0x2E, 0x3D, 0x3D, 0x3D, 0x49, 0x49, 0x49, 0x4D, 0x4D, 0x4D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x2F, 0x2F, 0x2F, 0x3F, 0x3F, 0x3F, 0x4B, 0x4B, 0x4B, 0x4E, 0x4E, 0x4E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x30, 0x30, 0x30, 0x40, 0x40, 0x40, 0x4C, 0x4C, 0x4C, 0x50, 0x50, 0x50, 0x12, 0xC7, 0xA4, 0x18 },
		/* HBM */
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x31, 0x31, 0x31, 0x42, 0x42, 0x42, 0x4E, 0x4E, 0x4E, 0x52, 0x52, 0x52, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x33, 0x33, 0x33, 0x44, 0x44, 0x44, 0x50, 0x50, 0x50, 0x55, 0x55, 0x55, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x34, 0x34, 0x34, 0x45, 0x45, 0x45, 0x52, 0x52, 0x52, 0x57, 0x57, 0x57, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x35, 0x35, 0x35, 0x47, 0x47, 0x47, 0x54, 0x54, 0x54, 0x58, 0x58, 0x58, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x36, 0x36, 0x36, 0x48, 0x48, 0x48, 0x55, 0x55, 0x55, 0x5A, 0x5A, 0x5A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x49, 0x49, 0x49, 0x57, 0x57, 0x57, 0x5B, 0x5B, 0x5B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x4A, 0x4A, 0x4A, 0x58, 0x58, 0x58, 0x5C, 0x5C, 0x5C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4A, 0x4A, 0x4A, 0x58, 0x58, 0x58, 0x5D, 0x5D, 0x5D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x58, 0x58, 0x58, 0x5D, 0x5D, 0x5D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x4A, 0x4A, 0x4A, 0x58, 0x58, 0x58, 0x5C, 0x5C, 0x5C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x49, 0x49, 0x49, 0x57, 0x57, 0x57, 0x5B, 0x5B, 0x5B, 0x12, 0xC7, 0xA4, 0x18 },
	},
	[S6E3HAB_VRR_DIM_120HS] = {
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x03, 0x03, 0x03, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x04, 0x04, 0x04, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x08, 0x08, 0x08, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x05, 0x05, 0x05, 0x07, 0x07, 0x07, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x05, 0x05, 0x05, 0x07, 0x07, 0x07, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x01, 0x01, 0x01, 0x06, 0x06, 0x06, 0x08, 0x08, 0x08, 0x09, 0x09, 0x09, 0x0A, 0x0A, 0x0A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x06, 0x06, 0x06, 0x08, 0x08, 0x08, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x06, 0x06, 0x06, 0x09, 0x09, 0x09, 0x0A, 0x0A, 0x0A, 0x0B, 0x0B, 0x0B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x07, 0x07, 0x07, 0x09, 0x09, 0x09, 0x0B, 0x0B, 0x0B, 0x0B, 0x0B, 0x0B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x07, 0x07, 0x07, 0x0A, 0x0A, 0x0A, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x08, 0x08, 0x08, 0x0A, 0x0A, 0x0A, 0x0C, 0x0C, 0x0C, 0x0D, 0x0D, 0x0D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x08, 0x08, 0x08, 0x0B, 0x0B, 0x0B, 0x0D, 0x0D, 0x0D, 0x0E, 0x0E, 0x0E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x09, 0x09, 0x09, 0x0C, 0x0C, 0x0C, 0x0E, 0x0E, 0x0E, 0x0F, 0x0F, 0x0F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x09, 0x09, 0x09, 0x0C, 0x0C, 0x0C, 0x0F, 0x0F, 0x0F, 0x10, 0x10, 0x10, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x02, 0x02, 0x02, 0x0A, 0x0A, 0x0A, 0x0D, 0x0D, 0x0D, 0x10, 0x10, 0x10, 0x11, 0x11, 0x11, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0B, 0x0B, 0x0B, 0x0E, 0x0E, 0x0E, 0x11, 0x11, 0x11, 0x12, 0x12, 0x12, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0B, 0x0B, 0x0B, 0x0F, 0x0F, 0x0F, 0x12, 0x12, 0x12, 0x13, 0x13, 0x13, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0C, 0x0C, 0x0C, 0x10, 0x10, 0x10, 0x13, 0x13, 0x13, 0x14, 0x14, 0x14, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0D, 0x0D, 0x0D, 0x11, 0x11, 0x11, 0x14, 0x14, 0x14, 0x15, 0x15, 0x15, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x03, 0x03, 0x03, 0x0E, 0x0E, 0x0E, 0x12, 0x12, 0x12, 0x16, 0x16, 0x16, 0x17, 0x17, 0x17, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x0E, 0x0E, 0x0E, 0x13, 0x13, 0x13, 0x17, 0x17, 0x17, 0x18, 0x18, 0x18, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x0F, 0x0F, 0x0F, 0x14, 0x14, 0x14, 0x18, 0x18, 0x18, 0x1A, 0x1A, 0x1A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x10, 0x10, 0x10, 0x16, 0x16, 0x16, 0x1A, 0x1A, 0x1A, 0x1B, 0x1B, 0x1B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x04, 0x04, 0x04, 0x11, 0x11, 0x11, 0x17, 0x17, 0x17, 0x1C, 0x1C, 0x1C, 0x1D, 0x1D, 0x1D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x05, 0x05, 0x05, 0x13, 0x13, 0x13, 0x19, 0x19, 0x19, 0x1D, 0x1D, 0x1D, 0x1F, 0x1F, 0x1F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x05, 0x05, 0x05, 0x14, 0x14, 0x14, 0x1A, 0x1A, 0x1A, 0x1F, 0x1F, 0x1F, 0x21, 0x21, 0x21, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x05, 0x05, 0x05, 0x15, 0x15, 0x15, 0x1C, 0x1C, 0x1C, 0x21, 0x21, 0x21, 0x23, 0x23, 0x23, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x06, 0x06, 0x06, 0x16, 0x16, 0x16, 0x1E, 0x1E, 0x1E, 0x23, 0x23, 0x23, 0x25, 0x25, 0x25, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x06, 0x06, 0x06, 0x18, 0x18, 0x18, 0x20, 0x20, 0x20, 0x25, 0x25, 0x25, 0x27, 0x27, 0x27, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x06, 0x06, 0x06, 0x19, 0x19, 0x19, 0x22, 0x22, 0x22, 0x28, 0x28, 0x28, 0x2A, 0x2A, 0x2A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x07, 0x07, 0x07, 0x1B, 0x1B, 0x1B, 0x24, 0x24, 0x24, 0x2A, 0x2A, 0x2A, 0x2D, 0x2D, 0x2D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x07, 0x07, 0x07, 0x1C, 0x1C, 0x1C, 0x26, 0x26, 0x26, 0x2D, 0x2D, 0x2D, 0x2F, 0x2F, 0x2F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x08, 0x08, 0x08, 0x1E, 0x1E, 0x1E, 0x28, 0x28, 0x28, 0x30, 0x30, 0x30, 0x32, 0x32, 0x32, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x08, 0x08, 0x08, 0x20, 0x20, 0x20, 0x2B, 0x2B, 0x2B, 0x33, 0x33, 0x33, 0x36, 0x36, 0x36, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x09, 0x09, 0x09, 0x22, 0x22, 0x22, 0x2E, 0x2E, 0x2E, 0x36, 0x36, 0x36, 0x39, 0x39, 0x39, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x09, 0x09, 0x09, 0x24, 0x24, 0x24, 0x30, 0x30, 0x30, 0x39, 0x39, 0x39, 0x3C, 0x3C, 0x3C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x26, 0x26, 0x26, 0x33, 0x33, 0x33, 0x3C, 0x3C, 0x3C, 0x3F, 0x3F, 0x3F, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x28, 0x28, 0x28, 0x35, 0x35, 0x35, 0x3F, 0x3F, 0x3F, 0x43, 0x43, 0x43, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x29, 0x29, 0x29, 0x36, 0x36, 0x36, 0x41, 0x41, 0x41, 0x44, 0x44, 0x44, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0A, 0x0A, 0x0A, 0x2A, 0x2A, 0x2A, 0x38, 0x38, 0x38, 0x42, 0x42, 0x42, 0x46, 0x46, 0x46, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2B, 0x2B, 0x2B, 0x39, 0x39, 0x39, 0x43, 0x43, 0x43, 0x47, 0x47, 0x47, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2B, 0x2B, 0x2B, 0x3A, 0x3A, 0x3A, 0x45, 0x45, 0x45, 0x48, 0x48, 0x48, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2C, 0x2C, 0x2C, 0x3B, 0x3B, 0x3B, 0x46, 0x46, 0x46, 0x4A, 0x4A, 0x4A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0B, 0x0B, 0x0B, 0x2D, 0x2D, 0x2D, 0x3C, 0x3C, 0x3C, 0x47, 0x47, 0x47, 0x4B, 0x4B, 0x4B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x2E, 0x2E, 0x2E, 0x3D, 0x3D, 0x3D, 0x49, 0x49, 0x49, 0x4D, 0x4D, 0x4D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x2F, 0x2F, 0x2F, 0x3F, 0x3F, 0x3F, 0x4B, 0x4B, 0x4B, 0x4E, 0x4E, 0x4E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x30, 0x30, 0x30, 0x40, 0x40, 0x40, 0x4C, 0x4C, 0x4C, 0x50, 0x50, 0x50, 0x12, 0xC7, 0xA4, 0x18 },
		/* HBM */
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0C, 0x0C, 0x0C, 0x31, 0x31, 0x31, 0x42, 0x42, 0x42, 0x4E, 0x4E, 0x4E, 0x52, 0x52, 0x52, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x33, 0x33, 0x33, 0x44, 0x44, 0x44, 0x50, 0x50, 0x50, 0x55, 0x55, 0x55, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x34, 0x34, 0x34, 0x45, 0x45, 0x45, 0x52, 0x52, 0x52, 0x57, 0x57, 0x57, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x35, 0x35, 0x35, 0x47, 0x47, 0x47, 0x54, 0x54, 0x54, 0x58, 0x58, 0x58, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0D, 0x0D, 0x0D, 0x36, 0x36, 0x36, 0x48, 0x48, 0x48, 0x55, 0x55, 0x55, 0x5A, 0x5A, 0x5A, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x49, 0x49, 0x49, 0x57, 0x57, 0x57, 0x5B, 0x5B, 0x5B, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x4A, 0x4A, 0x4A, 0x58, 0x58, 0x58, 0x5C, 0x5C, 0x5C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4A, 0x4A, 0x4A, 0x58, 0x58, 0x58, 0x5D, 0x5D, 0x5D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x59, 0x59, 0x59, 0x5E, 0x5E, 0x5E, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x38, 0x38, 0x38, 0x4B, 0x4B, 0x4B, 0x58, 0x58, 0x58, 0x5D, 0x5D, 0x5D, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x4A, 0x4A, 0x4A, 0x58, 0x58, 0x58, 0x5C, 0x5C, 0x5C, 0x12, 0xC7, 0xA4, 0x18 },
		{ 0x27, 0x65, 0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x97, 0xFF, 0x0E, 0x0E, 0x0E, 0x37, 0x37, 0x37, 0x49, 0x49, 0x49, 0x57, 0x57, 0x57, 0x5B, 0x5B, 0x5B, 0x12, 0xC7, 0xA4, 0x18 },
	},
};

static u8 hubble1_a3_s0_dsc_table[][1] = {
	{ 0x00 },
	{ 0x01 },
};

static u8 hubble1_a3_s0_pps_table[][MAX_S6E3HAB_SCALER][128] = {
	{
		/* 1440x3200 PANEL */
		{
			// PPS For DSU MODE 1 : 1440x3200 (Original) Slice Info : 720x40
			0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x0C, 0x80,
			0x05, 0xA0, 0x00, 0x28, 0x02, 0xD0, 0x02, 0xD0,
			0x02, 0x00, 0x02, 0x68, 0x00, 0x20, 0x04, 0x6C,
			0x00, 0x0A, 0x00, 0x0C, 0x02, 0x77, 0x01, 0xE9,
			0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
			0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
			0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
			0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
			0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
			0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
			0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		{
			// PPS For DSU MODE 2 : 1080x2400 Slice Info : 540x40
			0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x09, 0x60,
			0x04, 0x38, 0x00, 0x28, 0x02, 0x1C, 0x02, 0x1C,
			0x02, 0x00, 0x02, 0x0E, 0x00, 0x20, 0x03, 0xDD,
			0x00, 0x07, 0x00, 0x0C, 0x02, 0x77, 0x02, 0x8B,
			0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
			0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
			0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
			0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
			0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
			0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
			0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		},
		{
			// PPS For DSU MODE 3 : 720x1600 Slice Info : 360x80
			0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x06, 0x40,
			0x02, 0xD0, 0x00, 0x50, 0x01, 0x68, 0x01, 0x68,
			0x02, 0x00, 0x01, 0xB4, 0x00, 0x20, 0x06, 0x2F,
			0x00, 0x05, 0x00, 0x0C, 0x01, 0x38, 0x01, 0xE9,
			0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
			0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
			0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
			0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
			0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
			0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
			0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
	}
};

static u8 hubble1_a3_s0_scaler_table[][MAX_S6E3HAB_SCALER][5] = {
	{
		[S6E3HAB_SCALER_OFF] = {0x01, 0x26, 0x08, 0x08, 0xF3},
		[S6E3HAB_SCALER_x1_78] = {0x02, 0x26, 0x08, 0x08, 0xF3},
		[S6E3HAB_SCALER_x4] = {0x00, 0x26, 0x08, 0x08, 0xF3},
	}
};

static u8 hubble1_a3_s0_caset_table[][MAX_S6E3HAB_SCALER][4] = {
	{
		[S6E3HAB_SCALER_OFF] = {0x00, 0x00, 0x05, 0x9F},
		[S6E3HAB_SCALER_x1_78] = {0x00, 0x00, 0x04, 0x37},
		[S6E3HAB_SCALER_x4] = {0x00, 0x00, 0x02, 0xCF},
	}
};

static u8 hubble1_a3_s0_paset_table[][MAX_S6E3HAB_SCALER][4] = {
	{
		[S6E3HAB_SCALER_OFF] = {0x00, 0x00, 0x0C, 0x7F},
		[S6E3HAB_SCALER_x1_78] = {0x00, 0x00, 0x09, 0x5F},
		[S6E3HAB_SCALER_x4] = {0x00, 0x00, 0x06, 0x3F},
	}
};

#if defined(__PANEL_NOT_USED_VARIABLE__)
static u8 hubble1_a3_s0_ssd_improve_table[][1] = {
	[S6E3HAB_VRR_FPS_60] = { 0x45 },
	[S6E3HAB_VRR_FPS_120] = { 0x46 },
};
#endif

static u8 hubble1_a3_s0_aid_table[MAX_S6E3HAB_AID_CYCLE][1] = {
	[S6E3HAB_AID_2_CYCLE] = { 0x40 },
	[S6E3HAB_AID_4_CYCLE] = { 0x80 },
};

static u8 hubble1_a3_s0_osc_table[][1] = {
	[S6E3HAB_VRR_MODE_NS] = { 0xC2 },
	[S6E3HAB_VRR_MODE_HS] = { 0xC0 },
};

static u8 hubble1_a3_s0_pwr_gen_table[][1] = {
	{ 0x00 },	/* Adaptive Sync Off */
	{ 0xC0 },	/* Adaptive Sync On */
};

static u8 hubble1_a3_s0_src_amp_table[][1] = {
	{ 0x01 },	/* Adaptive Sync Off */
	{ 0x41 },	/* Adaptive Sync On */
};

static u8 hubble1_a3_s0_ltps_0_table[][1] = {
	[S6E3HAB_VRR_MODE_NS] = { 0x9D },
	[S6E3HAB_VRR_MODE_HS] = { 0x85 },
};

static u8 hubble1_a3_s0_osc_86_4m_ltps_1_table[][8] = {
	[S6E3HAB_VRR_MODE_NS] = { 0x0F, 0x54, 0x00, 0x00, 0x00, 0x40, 0x0F, 0x54 },
	[S6E3HAB_VRR_MODE_HS] = { 0x15, 0x4A, 0x00, 0x00, 0x00, 0x40, 0x15, 0x4A },
};

static u8 hubble1_a3_s0_osc_86_4m_ltps_2_table[][8] = {
	[S6E3HAB_VRR_MODE_NS] = { 0x0B, 0x2F, 0x00, 0x00, 0x00, 0xD8, 0x0B, 0x2F },
	[S6E3HAB_VRR_MODE_HS] = { 0x16, 0x19, 0x00, 0x00, 0x00, 0xD8, 0x16, 0x19 },
};

static u8 hubble1_a3_s0_osc_96_5m_ltps_1_table[][8] = {
	[S6E3HAB_VRR_MODE_NS] = { 0x10, 0x5E, 0x00, 0x00, 0x00, 0x40, 0x10, 0x5E },
	[S6E3HAB_VRR_MODE_HS] = { 0x17, 0x53, 0x00, 0x00, 0x00, 0x40, 0x17, 0x53 },
};

static u8 hubble1_a3_s0_osc_96_5m_ltps_2_table[][8] = {
	[S6E3HAB_VRR_MODE_NS] = { 0x0C, 0x32, 0x00, 0x00, 0x00, 0xD8, 0x0C, 0x32 },
	[S6E3HAB_VRR_MODE_HS] = { 0x18, 0x1C, 0x00, 0x00, 0x00, 0xD8, 0x18, 0x1C },
};

static u8 hubble1_a3_s0_fps_table[][1] = {
	[S6E3HAB_VRR_FPS_60] = { 0x00 },
	[S6E3HAB_VRR_FPS_120] = { 0x20 },
};

static u8 hubble1_a3_s0_lpm_nit_table[][4][7] = {
	[ALPM_MODE] = {
		{0x0B, 0x0C, 0x0C, 0x43, 0x0C, 0x43, 0x80}, // HLPM_2NIT
		{0x0B, 0x0C, 0x0A, 0x8A, 0x0C, 0x43, 0x80}, // HLPM_10NIT
		{0x0B, 0x0C, 0x06, 0xBA, 0x0C, 0x43, 0x80}, // HLPM_30NIT
		{0x0B, 0x0C, 0x00, 0x18, 0x0C, 0x43, 0x00}, // HLPM_60NIT
	},
	[HLPM_MODE] = {
		{0x09, 0x0C, 0x0C, 0x43, 0x0C, 0x43, 0x80}, // HLPM_2NIT
		{0x09, 0x0C, 0x0A, 0x8A, 0x0C, 0x43, 0x80}, // HLPM_10NIT
		{0x09, 0x0C, 0x06, 0xBA, 0x0C, 0x43, 0x80}, // HLPM_30NIT
		{0x09, 0x0C, 0x00, 0x18, 0x0C, 0x43, 0x00}, // HLPM_60NIT
	}
};

static u8 hubble1_a3_s0_lpm_mode_table[][4][1] = {
	[ALPM_MODE] = {
		{0x03}, // ALPM_2NIT
		{0x02}, // ALPM_10NIT
		{0x02}, // ALPM_30NIT
		{0x02}, // ALPM_60NIT
	},
	[HLPM_MODE] = {
		{0x03}, // HLPM_2NIT
		{0x02}, // HLPM_10NIT
		{0x02}, // HLPM_30NIT
		{0x02}, // HLPM_60NIT
	}
};

static u8 hubble1_a3_s0_lpm_off_table[][4][1] = {
	[ALPM_MODE] = {
		{0x03},
		{0x03},
		{0x03},
		{0x03},
	},
	[HLPM_MODE] = {
		{0x01},
		{0x01},
		{0x01},
		{0x01},
	}
};

#if defined(__PANEL_NOT_USED_VARIABLE__)
static u8 hubble1_a3_s0_lpm_dyn_vlin_table[][1] = {
	{ 0x0E },	/* < OPR 2.5 % */
	{ 0x07 },	/* >= OPR 2.5 % */
};
#endif

static u8 hubble1_a3_s0_dia_onoff_table[][1] = {
	{ 0x01 }, /* dia off */
	{ 0x02 }, /* dia on */
};

#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
static u8 hubble1_a3_s0_vddm_table[][1] = {
	{0x00}, // VDDM ORIGINAL
	{0x04}, // VDDM LOW VOLTAGE : 0.92V
	{0x08}, // VDDM HIGH VOLTAGE : 1.08V
};
static u8 hubble1_a3_s0_gram_img_pattern_table[][1] = {
	{0x00}, // GCT_PATTERN_NONE
	{0x07}, // GCT_PATTERN_1
	{0x05}, // GCT_PATTERN_2
};
/* switch pattern_1 and pattern_2 */
static u8 hubble1_a3_s0_gram_inv_img_pattern_table[][1] = {
	{0x00}, // GCT_PATTERN_NONE
	{0x05}, // GCT_PATTERN_2
	{0x07}, // GCT_PATTERN_1
};
#endif

#ifdef CONFIG_DYNAMIC_FREQ
static u8 hubble1_a3_s0_osc_96_5m_dyn_ffc[][21] = {
	/* OSC 96.5  */
	{0x36, 0x09, 0x36, 0x09, 0x09, 0x00, 0x1A, 0xFC, 0x24, 0xD2, 0x0A, 0x00, 0x10, 0x00, 0x73, 0x00, 0xFF, 0x78, 0x8F, 0x00, 0x00},
	{0x35, 0xAE, 0x35, 0xAE, 0x09, 0x00, 0x1A, 0xFC, 0x24, 0xD2, 0x0A, 0x00, 0x10, 0x00, 0x73, 0x00, 0xFF, 0x78, 0x8F, 0x00, 0x00},
	{0x35, 0x61, 0x35, 0x61, 0x09, 0x00, 0x1A, 0xFC, 0x24, 0xD2, 0x0A, 0x00, 0x10, 0x00, 0x73, 0x00, 0xFF, 0x78, 0x8F, 0x00, 0x00},
	{0x34, 0x7F, 0x34, 0x7F, 0x09, 0x00, 0x1A, 0xFC, 0x24, 0xD2, 0x0A, 0x00, 0x10, 0x00, 0x73, 0x00, 0xFF, 0x78, 0x8F, 0x00, 0x00},
	/* OSC 94.5 */
	{0x34, 0xEA, 0x34, 0xEA, 0x09, 0x00, 0x1E, 0xAF, 0x24, 0xD2, 0x0A, 0x77, 0x10, 0x00, 0x33, 0x00, 0xFF, 0x01, 0x8F, 0x08, 0x00},
	{0x34, 0x92, 0x34, 0x92, 0x09, 0x00, 0x1E, 0xAF, 0x24, 0xD2, 0x0A, 0x77, 0x10, 0x00, 0x33, 0x00, 0xFF, 0x01, 0x8F, 0x08, 0x00},
	{0x34, 0x46, 0x34, 0x46, 0x09, 0x00, 0x1E, 0xAF, 0x24, 0xD2, 0x0A, 0x77, 0x10, 0x00, 0x33, 0x00, 0xFF, 0x01, 0x8F, 0x08, 0x00},
	{0x33, 0x68, 0x33, 0x68, 0x09, 0x00, 0x1E, 0xAF, 0x24, 0xD2, 0x0A, 0x77, 0x10, 0x00, 0x33, 0x00, 0xFF, 0x01, 0x8F, 0x08, 0x00},
	/* OSC 94.5 @ 60HS,*/
	{0x34, 0xEA, 0x34, 0xEA, 0x09, 0x00, 0x1E, 0xAF, 0x24, 0xD2, 0x0A, 0x77, 0x10, 0x00, 0x33, 0x00, 0xFF, 0x01, 0x8B, 0x08, 0x00},
	{0x34, 0x92, 0x34, 0x92, 0x09, 0x00, 0x1E, 0xAF, 0x24, 0xD2, 0x0A, 0x77, 0x10, 0x00, 0x33, 0x00, 0xFF, 0x01, 0x8B, 0x08, 0x00},
	{0x34, 0x46, 0x34, 0x46, 0x09, 0x00, 0x1E, 0xAF, 0x24, 0xD2, 0x0A, 0x77, 0x10, 0x00, 0x33, 0x00, 0xFF, 0x01, 0x8B, 0x08, 0x00},
	{0x33, 0x68, 0x33, 0x68, 0x09, 0x00, 0x1E, 0xAF, 0x24, 0xD2, 0x0A, 0x77, 0x10, 0x00, 0x33, 0x00, 0xFF, 0x01, 0x8B, 0x08, 0x00},
};


static u8 hubble1_a3_s0_dyn_ffc[][4] = {
	/*FFC for OSC 86.4*/
	{0x30, 0x61, 0x30, 0x61}, /* 1143 */
	{0x30, 0x10, 0x30, 0x10}, /* 1150.5 */
	{0x2F, 0xCB, 0x2F, 0xCB}, /* 1157 */
	{0x2F, 0x00, 0x2F, 0x00}, /* 1176.5 */

	{0x30, 0x61, 0x30, 0x61}, /* 1143 */
	{0x30, 0x10, 0x30, 0x10}, /* 1150.5 */
	{0x2F, 0xCB, 0x2F, 0xCB}, /* 1157 */
	{0x2F, 0x00, 0x2F, 0x00}, /* 1176.5 */
};


static u8 hubble1_a3_s0_96_5m_default_dyn_ffc[][21] = {
	/* OSC 96.5, 1157 */
	{0x35, 0x61, 0x35, 0x61, 0x09, 0x00, 0x1A, 0xFC, 0x24, 0xD2, 0x0A, 0x00, 0x10, 0x00, 0x73, 0x00, 0xFF, 0x78, 0x8F, 0x00, 0x00},
	/* OSC 94.5, 1157 */
	{0x34, 0x46, 0x34, 0x46, 0x09, 0x00, 0x1E, 0xAF, 0x24, 0xD2, 0x0A, 0x77, 0x10, 0x00, 0x33, 0x00, 0xFF, 0x01, 0x8F, 0x08, 0x00},
	/* OSC 94.5 @60 HS, 1157*/
	{0x34, 0x46, 0x34, 0x46, 0x09, 0x00, 0x1E, 0xAF, 0x24, 0xD2, 0x0A, 0x77, 0x10, 0x00, 0x33, 0x00, 0xFF, 0x01, 0x8B, 0x08, 0x00},
};

#if defined(__PANEL_NOT_USED_VARIABLE__)
static u8 hubble1_a3_s0_default_dyn_ffc[][4] = {
	{0x2F, 0xCB, 0x2F, 0xCB}, /* 1157 */

	{0x2F, 0xCB, 0x2F, 0xCB}, /* 1157 */
};
#endif

static u8 hubble1_a3_s0_ddi_osc_clk_tune1[][2] = {
	/* OSC 96.5 */
	{0x0F, 0x80},
	/* OSC 94.5 */
	{0x0F, 0x30},
};

static u8 hubble1_a3_s0_ddi_osc_clk_tune2[][4] = {
	/* OSC 96.5 */
	{0x00, 0x10, 0x0F, 0x80},
	/* OSC 94.5 */
	{0x00, 0x10, 0x0F, 0x30},
	/*OSC 94.5 60HS*/
	{0x0C, 0xB0, 0x0F, 0x30},
};

static u8 hubble1_a3_s0_ddi_osc_94_5m_ltps_comp_tbl1[][210] = {
	/* Normal mode */
	{
		0x00, 0x15, 0x9D, 0x9D, 0x00, 0x00, 0x00, 0x00,
		0x00, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x95, 0x86,
		0xE3, 0xDF, 0xDD, 0xC6, 0xD9, 0xD6, 0xC7, 0xC1,
		0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x55, 0xD5,
		0xD5, 0x46, 0xE3, 0xDF, 0xDD, 0x86, 0xD9, 0x96,
		0xC7, 0xC1, 0xD5, 0xD5, 0xD5, 0xC0, 0xC0, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x0B, 0x00, 0x06, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C,
		0x00, 0x00, 0x00, 0x50, 0x10, 0x5C, 0x00, 0x00,
		0x00, 0x40, 0x10, 0x5C, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0C, 0x31,
		0x00, 0x00, 0x00, 0xD8, 0x0C, 0x31, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x0B, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00,
		0x00, 0x20, 0x00, 0x00, 0x16, 0x51, 0x00, 0x00,
		0x00, 0x16, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00
	},
	{
	/*Hs mode */
		0x00, 0x15, 0x9D, 0x85, 0x00, 0x00, 0x00, 0x00,
		0x00, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x95, 0x86,
		0xE3, 0xDF, 0xDD, 0xC6, 0xD9, 0xD6, 0xC7, 0xC1,
		0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x55, 0xD5,
		0xD5, 0x46, 0xE3, 0xDF, 0xDD, 0x86, 0xD9, 0x96,
		0xC7, 0xC1, 0xD5, 0xD5, 0xD5, 0xC0, 0xC0, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x0B, 0x00, 0x06, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C,
		0x00, 0x00, 0x00, 0x50, 0x16, 0x51, 0x00, 0x00,
		0x00, 0x40, 0x16, 0x51, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0x1C,
		0x00, 0x00, 0x00, 0xD8, 0x18, 0x1C, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x0B, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00,
		0x00, 0x20, 0x00, 0x00, 0x16, 0x51, 0x00, 0x00,
		0x00, 0x16, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00
	},
};

static u8 hubble1_a3_s0_ddi_osc_94_5m_ltps_comp_tbl2[][45] = {
	/* Normal mode */
	{
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x70, 0x30, 0x18, 0x1C,
		0x00, 0x00, 0x18, 0x1C, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00
	},
	{
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x70, 0x30, 0x18, 0x1C,
		0x00, 0x00, 0x18, 0x1C, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00
	},
};

#endif

static u8 hubble1_a3_s0_hbm_cycle_table[][1] = {
	[S6E3HAB_VRR_MODE_NS] = { 0x21 },
	[S6E3HAB_VRR_MODE_HS] = { 0x11 },
};

static u8 hubble1_a3_s0_hbm_onoff_table[][1] = {
	{ 0x00 }, /* HBM OFF */
	{ 0xC0 }, /* HBM ON */
};

#ifdef CONFIG_SUPPORT_MAFPC
static hubble1_a3_s0_mafpc_ena_table[][1] = {
	{ 0x00 },
	{ 0x11 },
};
#endif

static struct maptbl hubble1_a3_s0_maptbl[MAX_MAPTBL] = {
	[GAMMA_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_gamma_table, init_gamma_table, getidx_dimming_vrr_maptbl, copy_gamma_maptbl),
	[AOR_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_aor_table, init_aor_table, getidx_dimming_vrr_maptbl, copy_aor_maptbl),
	[MPS_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_mps_table, init_common_table, getidx_mps_table, copy_common_maptbl),
	[TSET_MAPTBL] = DEFINE_0D_MAPTBL(hubble1_a3_s0_tset_table, init_common_table, NULL, copy_tset_maptbl),
	[ELVSS_MAPTBL] = DEFINE_4D_MAPTBL(hubble1_a3_s0_elvss_table, init_elvss_table, getidx_elvss_temp_table, copy_common_maptbl),
	[ELVSS_TEMP_MAPTBL] = DEFINE_4D_MAPTBL(hubble1_a3_s0_elvss_temp_table, init_elvss_temp_table, getidx_elvss_temp_table, copy_common_maptbl),
	[VINT_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_vint_table, init_vint_table, getidx_dimming_vrr_60hz_maptbl, copy_common_maptbl),
	[VINT_VRR_120HZ_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_vint_table, init_common_table, getidx_dimming_vrr_120hz_maptbl, copy_common_maptbl),
#ifdef CONFIG_SUPPORT_XTALK_MODE
	[VGH_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_vgh_table, init_common_table, getidx_vgh_table, copy_common_maptbl),
#endif
	[ACL_ONOFF_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_acl_onoff_table, init_common_table, getidx_acl_onoff_table, copy_common_maptbl),
	[ACL_FRAME_AVG_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_acl_frame_avg_table, init_common_table, getidx_acl_onoff_table, copy_common_maptbl),
	[ACL_START_POINT_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_acl_start_point_table, init_common_table, getidx_hbm_onoff_table, copy_common_maptbl),
	[ACL_OPR_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_acl_opr_table, init_common_table, getidx_acl_opr_table, copy_common_maptbl),
	[IRC_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_irc_table, init_irc_table, getidx_dimming_vrr_maptbl, copy_irc_maptbl),
	[IRC_MODE_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_irc_mode_table, init_common_table, getidx_irc_mode_table, copy_common_maptbl),
#ifdef CONFIG_SUPPORT_HMD
	[HMD_GAMMA_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_hmd_gamma_table, init_hmd_gamma_table, getidx_hmd_dimming_maptbl, copy_common_maptbl),
	[HMD_AOR_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_hmd_aor_table, init_hmd_aor_table, getidx_hmd_dimming_maptbl, copy_common_maptbl),
	[HMD_ELVSS_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_hmd_elvss_table, init_common_table, getidx_hmd_dimming_maptbl, copy_common_maptbl),
#endif /* CONFIG_SUPPORT_HMD */
	[DSC_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_dsc_table, init_common_table, getidx_dsc_table, copy_common_maptbl),
#ifdef CONFIG_SUPPORT_DSU
	[PPS_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_pps_table, init_common_table, getidx_resolution_table, copy_common_maptbl),
	[SCALER_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_scaler_table, init_common_table, getidx_resolution_table, copy_common_maptbl),
	[CASET_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_caset_table, init_common_table, getidx_resolution_table, copy_common_maptbl),
	[PASET_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_paset_table, init_common_table, getidx_resolution_table, copy_common_maptbl),
#endif
#if defined(__PANEL_NOT_USED_VARIABLE__)
	[SSD_IMPROVE_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_ssd_improve_table, init_common_table, getidx_vrr_fps_table, copy_common_maptbl),
#endif
	[AID_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_aid_table, init_common_table, getidx_vrr_aid_cycle_table, copy_common_maptbl),
	[OSC_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_osc_table, init_common_table, getidx_vrr_mode_table, copy_common_maptbl),
	[VFP_NM_MAPTBL] = DEFINE_0D_MAPTBL(hubble1_a3_s0_vfp_nm_table, init_common_table, NULL, copy_vfp_nm_maptbl),
	[VFP_HS_MAPTBL] = DEFINE_0D_MAPTBL(hubble1_a3_s0_vfp_hs_table, init_common_table, NULL, copy_vfp_hs_maptbl),
	[PWR_GEN_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_pwr_gen_table, init_common_table, getidx_vrr_async_table, copy_common_maptbl),
	[SRC_AMP_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_src_amp_table, init_common_table, getidx_vrr_async_table, copy_common_maptbl),
	[LTPS_0_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_ltps_0_table, init_common_table, getidx_vrr_mode_table, copy_common_maptbl),
	[OSC_86_4M_LTPS_1_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_osc_86_4m_ltps_1_table, init_common_table, getidx_vrr_mode_table, copy_common_maptbl),
	[OSC_86_4M_LTPS_2_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_osc_86_4m_ltps_2_table, init_common_table, getidx_vrr_mode_table, copy_common_maptbl),
	[OSC_96_5M_LTPS_1_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_osc_96_5m_ltps_1_table, init_common_table, getidx_vrr_mode_table, copy_common_maptbl),
	[OSC_96_5M_LTPS_2_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_osc_96_5m_ltps_2_table, init_common_table, getidx_vrr_mode_table, copy_common_maptbl),
	[FPS_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_fps_table, init_common_table, getidx_vrr_fps_table, copy_common_maptbl),
	[LPM_NIT_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_lpm_nit_table, init_lpm_table, getidx_lpm_table, copy_common_maptbl),
	[LPM_MODE_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_lpm_mode_table, init_common_table, getidx_lpm_table, copy_common_maptbl),
#if defined(__PANEL_NOT_USED_VARIABLE__)
	[LPM_DYN_VLIN_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_lpm_dyn_vlin_table, init_common_table, getidx_lpm_dyn_vlin_table, copy_common_maptbl),
#endif
	[LPM_OFF_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_lpm_off_table, init_common_table, getidx_lpm_table, copy_common_maptbl),

#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
	[VDDM_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_vddm_table, init_common_table, s6e3hab_getidx_vddm_table, copy_common_maptbl),
	[GRAM_IMG_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_gram_img_pattern_table, init_common_table, s6e3hab_getidx_gram_img_pattern_table, copy_common_maptbl),
	[GRAM_INV_IMG_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_gram_inv_img_pattern_table, init_common_table, s6e3hab_getidx_gram_img_pattern_table, copy_common_maptbl),
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	[OSC_96_5M_DYN_FFC_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_osc_96_5m_dyn_ffc, init_common_table, getidx_96_5_dyn_ffc_table, copy_common_maptbl),
	[DYN_FFC_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_dyn_ffc, init_common_table, getidx_86_4_dyn_ffc_table, copy_common_maptbl),
	[OSC_96_5M_DEFAULT_FFC_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_96_5m_default_dyn_ffc, init_common_table, getidx_96_5_dyn_default_ffc_table, copy_common_maptbl),
	[DDI_OSC_CLK_TUNE1] = DEFINE_2D_MAPTBL(hubble1_a3_s0_ddi_osc_clk_tune1, init_common_table, getidx_ddi_osc_comp_table, copy_common_maptbl),
	[DDI_OSC_CLK_TUNE2] = DEFINE_2D_MAPTBL(hubble1_a3_s0_ddi_osc_clk_tune2, init_common_table, getidx_ddi_osc2_comp_table, copy_common_maptbl),
	[DDI_OSC_LTPS_COMP1] =  DEFINE_2D_MAPTBL(hubble1_a3_s0_ddi_osc_94_5m_ltps_comp_tbl1, init_common_table, getidx_ddi_osc_ltps_comp_table, copy_common_maptbl),
	[DDI_OSC_LTPS_COMP2] =  DEFINE_2D_MAPTBL(hubble1_a3_s0_ddi_osc_94_5m_ltps_comp_tbl2, init_common_table, getidx_ddi_osc_ltps_comp_table, copy_common_maptbl),
#endif
	[MCD_RESISTANCE_MAPTBL] = DEFINE_0D_MAPTBL(hubble1_a3_s0_mcd_resistance_table, init_common_table, NULL, copy_mcd_resistance_maptbl),
#ifdef CONFIG_SUPPORT_ISC_TUNE_TEST
	[ISC_THRESHOLD_MAPTBL] = DEFINE_0D_MAPTBL(hubble1_a3_s0_isc_thresh_hold_table, init_common_table, NULL, copy_isc_threshold_maptbl),
	[STM_TUNE_MAPTBL] = DEFINE_0D_MAPTBL(hubble1_a3_s0_stm_tune_table, init_stm_tune, NULL, copy_stm_tune_maptbl),
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	[MAFPC_ENA_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_mafpc_ena_table, init_common_table, getidx_mafpc_enable_table, copy_common_maptbl),
	[MAFPC_CTRL_MAPTBL] = DEFINE_0D_MAPTBL(hubble1_a3_s0_mafpc_ctrl, init_common_table, NULL, copy_mafpc_ctrl_maptbl),
	[MAFPC_SCALE_MAPTBL] = DEFINE_0D_MAPTBL(hubble1_a3_s0_mafpc_scale, init_common_table, NULL, copy_mafpc_scale_maptbl),
#endif
	[GAMMA_INTER_CONTROL_MAPTBL] = DEFINE_0D_MAPTBL(hubble1_a3_s0_gamma_inter_table, init_common_table, NULL, copy_gamma_inter_control_maptbl),
	[POC_COMP_MAPTBL] = DEFINE_3D_MAPTBL(hubble1_a3_s0_poc_comp_table, init_common_table, getidx_dimming_vrr_maptbl, copy_common_maptbl),
	[DBV_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_dbv_table, init_common_table, getidx_dimming_maptbl, copy_common_maptbl),
	[HBM_CYCLE_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_hbm_cycle_table, init_common_table, getidx_vrr_mode_table, copy_common_maptbl),
	[HBM_ONOFF_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_hbm_onoff_table, init_common_table, getidx_hbm_onoff_table, copy_common_maptbl),
	[DIA_ONOFF_MAPTBL] = DEFINE_2D_MAPTBL(hubble1_a3_s0_dia_onoff_table, init_common_table, getidx_dia_onoff_table, copy_common_maptbl),
};

/* ===================================================================================== */
/* ============================== [S6E3HAB COMMAND TABLE] ============================== */
/* ===================================================================================== */
static u8 HUBBLE1_A3_S0_KEY1_ENABLE[] = { 0x9F, 0xA5, 0xA5 };
static u8 HUBBLE1_A3_S0_KEY2_ENABLE[] = { 0xF0, 0x5A, 0x5A };
static u8 HUBBLE1_A3_S0_KEY3_ENABLE[] = { 0xFC, 0x5A, 0x5A };
static u8 HUBBLE1_A3_S0_KEY1_DISABLE[] = { 0x9F, 0x5A, 0x5A };
static u8 HUBBLE1_A3_S0_KEY2_DISABLE[] = { 0xF0, 0xA5, 0xA5 };
static u8 HUBBLE1_A3_S0_KEY3_DISABLE[] = { 0xFC, 0xA5, 0xA5 };
static u8 HUBBLE1_A3_S0_SLEEP_OUT[] = { 0x11 };
static u8 HUBBLE1_A3_S0_SLEEP_IN[] = { 0x10 };
static u8 HUBBLE1_A3_S0_DISPLAY_OFF[] = { 0x28 };
static u8 HUBBLE1_A3_S0_DISPLAY_ON[] = { 0x29 };

#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
static u8 HUBBLE1_A3_S0_SW_RESET[] = { 0x01 };
static u8 HUBBLE1_A3_S0_GCT_DSC[] = { 0x9D, 0x01 };
static u8 HUBBLE1_A3_S0_GCT_PPS[] = { 0x9E,
	0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x0C, 0x80,
	0x05, 0xA0, 0x00, 0x28, 0x02, 0xD0, 0x02, 0xD0,
	0x02, 0x00, 0x02, 0x68, 0x00, 0x20, 0x04, 0x6C,
	0x00, 0x0A, 0x00, 0x0C, 0x02, 0x77, 0x01, 0xE9,
	0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
	0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
	0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
	0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
	0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
	0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
	0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
	0x00
};
#endif
static u8 HUBBLE1_A3_S0_DSC[] = { 0x01 };
#ifdef CONFIG_SUPPORT_DSU
static u8 HUBBLE1_A3_S0_PPS[] = {
	// WQHD : 1440x3200
	0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x0C, 0x80,
	0x05, 0xA0, 0x00, 0x28, 0x02, 0xD0, 0x02, 0xD0,
	0x02, 0x00, 0x02, 0x68, 0x00, 0x20, 0x04, 0x6C,
	0x00, 0x0A, 0x00, 0x0C, 0x02, 0x77, 0x01, 0xE9,
	0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
	0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
	0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
	0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
	0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
	0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
	0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
#else
/* todo: c1 fixed to FHD, mres will be update */
static u8 HUBBLE1_A3_S0_PPS[] = {
	0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x09, 0x60,
	0x04, 0x38, 0x00, 0x28, 0x02, 0x1C, 0x02, 0x1C,
	0x02, 0x00, 0x02, 0x0E, 0x00, 0x20, 0x03, 0xDD,
	0x00, 0x07, 0x00, 0x0C, 0x02, 0x77, 0x02, 0x8B,
	0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
	0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
	0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
	0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
	0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
	0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
	0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
#endif

static u8 HUBBLE1_A3_S0_MCA_SETGING1[] = {
	0x96,
	0x08, 0xD9, 0x54, 0x00, 0x00, 0x8E, 0x55
};

static u8 HUBBLE1_A3_S0_MCA_SETGING2[] = {
	0x98,
	0x00, 0x8F, 0x00, 0xAB, 0x55
};

static u8 HUBBLE1_A3_S0_LTPS_SETGING1[] = {
	0xCB,
	0xC6
};

static u8 HUBBLE1_A3_S0_LTPS_SETGING2[] = {
	0xCB,
	0xD6
};

static u8 HUBBLE1_A3_S0_ASYNC_ENABLE[] = {
	0xF3, 0x00
};

static u8 HUBBLE1_A3_S0_DIA_SETTING[] = {
	0x91, 0x01, 0xF9
};

static u8 HUBBLE1_A3_S0_TE_ON[] = { 0x35, 0x00 };
#if defined(__PANEL_NOT_USED_VARIABLE__)
static u8 HUBBLE1_A3_S0_TE_OFF[] = { 0x34 };
#endif
static u8 HUBBLE1_A3_S0_ERR_FG[] = { 0xED, 0x06, 0x4C };

#ifdef CONFIG_DYNAMIC_FREQ
static u8 HUBBLE1_A3_S0_OSC_96_5M_FFC[] = {
	0xC5,
	0x11, 0x08, 0x50, 0x35, 0x61, 0x35, 0x61, 0x09,
	0x00, 0x0A, 0xFC, 0x24, 0xD2, 0x0A, 0x00, 0x10,
	0x00, 0x73, 0x00, 0xFF, 0x78, 0x8F, 0x00, 0x00,
};

static u8 HUBBLE1_A3_S0_FFC[] = {
	0xC5,
	0x11, 0x08, 0x50, 0x2F, 0xCB, 0x2F, 0xCB
};

static u8 HUBBLE1_A3_S0_OSC_96_5M_FFC_DEFAULT[] = {
	0xC5,
	0x11, 0x08, 0x50, 0x35, 0x61, 0x35, 0x61, 0x09,
	0x00, 0x0A, 0xFC, 0x24, 0xD2, 0x0A, 0x00, 0x10,
	0x00, 0x73, 0x00, 0xFF, 0x78, 0x8F, 0x00, 0x00,
};
static u8 HUBBLE1_A3_S0_FFC_DEFAULT[] = {
	0xC5,
	0x11, 0x08, 0x50, 0x2F, 0xCB, 0x2F, 0xCB /* 1157 Mbps */
};
#endif

static u8 HUBBLE1_A3_S0_TSP_HSYNC[] = {
	0xB9,
	0x01, 0xC0, 0x81, 0x09, 0x00, 0x00, 0x00, 0x11, 0x03
};

static u8 HUBBLE1_A3_S0_GAMMA[S6E3HAB_GAMMA_CMD_CNT] = {
	S6E3HAB_GAMMA_REG,
	0x2A, 0x00, 0x00, 0x00,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x00, 0x00, 0x00,
};

static u8 HUBBLE1_A3_S0_HBM_GAMMA[S6E3HAB_GAMMA_CMD_CNT] = {
	S6E3HAB_HBM_GAMMA_REG,
	0x2A, 0x00, 0x00, 0x00,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x80, 0x80, 0x80,
	0x00, 0x00, 0x00,
};

static u8 HUBBLE1_A3_S0_HBM_CYCLE[] = { 0xB3, 0x21 };
static u8 HUBBLE1_A3_S0_HBM_ONOFF[] = { 0x53, 0x00 };
static u8 HUBBLE1_A3_S0_HBM_AOR[] = { 0xB1, 0x00, 0x00, 0x00, 0x00 };

static u8 HUBBLE1_A3_S0_DBV[] = { 0x6A, 0x07, 0xFF, 0x01 };
static u8 HUBBLE1_A3_S0_AOR[] = { 0xB1, 0x00, 0x18 };
#if defined(__PANEL_NOT_USED_VARIABLE__)
static u8 HUBBLE1_A3_S0_POC_COMP1[] = {
	0xB1,
	0x01, 0xAF, 0x00, 0x54, 0x68, 0xCC, 0x78, 0x30, 0xCC, 0x64, 0xFF
};
static u8 HUBBLE1_A3_S0_POC_COMP2[] = { 0x96, 0x53, 0xFF };
#endif

static u8 HUBBLE1_A3_S0_TSET_MPS_ELVSS[] = {
	0xB5,
	0x19,	/* temperature 25 */
	0xDC,	/* MPS_CON : ACL OFF */
	0x0A,	/* ELVSS : MAX */
};
static u8 HUBBLE1_A3_S0_ELVSS_TEMP[] = {
	0xB5,
	0x0C	/* ELVSS TEMP */
};
static u8 HUBBLE1_A3_S0_VGH_VINT[] = {
	0xF4,
	0x30, 0x02, 0x2B, 0x6B,
	0x1E	/* VINT */
};

static u8 HUBBLE1_A3_S0_VINT_VRR_120HZ[] = {
	0xF4,
	0x1E	/* VINT */
};

static u8 HUBBLE1_A3_S0_IRC_VALUE[] = {
	S6E3HAB_IRC_REG,
	0x27, 0x65,
	0xFF, 0x01, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00,
	0x00, 0x8B, 0x95, 0x04, 0x0B, 0x0B, 0x0B, 0x2D,
	0x2D, 0x2D, 0x3C, 0x3C, 0x3C, 0x47, 0x47, 0x47,
	0x4B, 0x4B, 0x4B, 0x92, 0xC7, 0xA4, 0x18
};
static u8 HUBBLE1_A3_S0_IRC_ON[] = { S6E3HAB_IRC_REG, 0x27 };
#ifdef CONFIG_SUPPORT_HMD
static u8 HUBBLE1_A3_S0_IRC_OFF[] = { S6E3HAB_IRC_REG, 0x00 };
#endif

#if defined(__PANEL_NOT_USED_VARIABLE__)
static u8 HUBBLE1_A3_S0_GAMMA_MODE1[] = { 0xB1, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00 };
#endif
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
static u8 HUBBLE1_A3_S0_CMDLOG_ENABLE[] = { 0xF7, 0x80 };
static u8 HUBBLE1_A3_S0_CMDLOG_DISABLE[] = { 0xF7, 0x00 };
static u8 HUBBLE1_A3_S0_GAMMA_UPDATE_ENABLE[] = { 0xF7, 0x8F };
#else
static u8 HUBBLE1_A3_S0_GAMMA_UPDATE_ENABLE[] = { 0xF7, 0x0F };
#endif
static u8 HUBBLE1_A3_S0_ACL_ONOFF[] = { 0x55, 0x00 };
static u8 HUBBLE1_A3_S0_ACL_CONTROL[] = { 0xB4, 0x00, 0x44, 0x80, 0x65, 0x26, 0x00 };
#if defined(__PANEL_NOT_USED_VARIABLE__)
static u8 HUBBLE1_A3_S0_ACL_DIM_FRM[] = { 0xB4, 0x20 };
#endif

static u8 HUBBLE1_A3_S0_DIA_ONOFF[] = { 0x91, 0x00 };

#ifdef CONFIG_SUPPORT_DSU
static u8 HUBBLE1_A3_S0_SCALER[] = { 0xBA, 0x01, 0x26, 0x08, 0x08, 0xF3};
static u8 HUBBLE1_A3_S0_CASET[] = { 0x2A, 0x00, 0x00, 0x05, 0x9F };
static u8 HUBBLE1_A3_S0_PASET[] = { 0x2B, 0x00, 0x00, 0x0C, 0x7F };
#else
/* todo: c1 fixed to FHD, mres will be update */
static u8 HUBBLE1_A3_S0_SCALER[] = { 0xBA, 0x02, 0x26, 0x08, 0x08, 0xF3 };
static u8 HUBBLE1_A3_S0_CASET[] = { 0x2A, 0x00, 0x00, 0x04, 0x37 };
static u8 HUBBLE1_A3_S0_PASET[] = { 0x2B, 0x00, 0x00, 0x09, 0x5F };
#endif

static u8 HUBBLE1_A3_S0_LPM_AOR[] =  { 0xB1, 0x0C, 0x65 }; /*AOR 98.4*/
static u8 HUBBLE1_A3_S0_LPM_NIT[] = {0xBB, 0x09, 0x0C, 0x00, 0x18, 0x0C, 0x43, 0x00};
static u8 HUBBLE1_A3_S0_LPM_MODE[] = { 0x53, 0x00 };
static u8 HUBBLE1_A3_S0_LPM_OFF_NIT[] = {0xBB, 0x00};
static u8 HUBBLE1_A3_S0_AVS_ON[] = { 0xFD, 0x0C};
static u8 HUBBLE1_A3_S0_ASWIRE[] = { 0xB5, 0x00};

static u8 HUBBLE1_A3_S0_AVC2_ON[] = { 0xF4, 0xCA };
static u8 HUBBLE1_A3_S0_AVC2_OFF[] = { 0xF4, 0x8A };
#if defined(__PANEL_NOT_USED_VARIABLE__)
static u8 HUBBLE1_A3_S0_LPM_DYN_VLIN[] = { 0xB5, 0x07 };
static u8 HUBBLE1_A3_S0_LPM_OFF_DYN_VLIN[] = { 0xB5, 0x38 };
#endif

static u8 HUBBLE1_A3_S0_EXIT_ALPM[] = {0x53, 0x00};

static u8 HUBBLE1_A3_S0_ISC[] = { 0xF6, 0x40 };
static u8 HUBBLE1_A3_S0_ISC_LPM[] = { 0xF6, 0xFF };

static u8 HUBBLE1_A3_S0_MCD_ON_00[] = { 0xC5, 0x10 };
static u8 HUBBLE1_A3_S0_MCD_ON_01[] = { 0xF4, 0x32 };
static u8 HUBBLE1_A3_S0_MCD_ON_02[] = {
	0xCB,
	0x00, 0x15, 0x9D, 0x9D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x95, 0x86,
	0xE3, 0xDF, 0xDD, 0xC6, 0xD9, 0xD6, 0xC7, 0xC1,
	0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x55, 0xD5,
	0xD5, 0x46, 0xE3, 0xDF, 0xDD, 0xC6, 0xD9, 0xD6,
	0xC7, 0xC1, 0xD5, 0xD5, 0xD5, 0xC0, 0xC0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0F, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C,
	0x00, 0x00, 0x00, 0x50, 0x10, 0x5E, 0x00, 0x00,
	0x00, 0x40, 0x10, 0x5E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0C, 0x4D,
	0x00, 0x00, 0x00, 0xD8, 0x0C, 0x4D, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
	0x00, 0x0B, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00,
	0x00, 0x20, 0x00, 0x00, 0x12, 0x53, 0x00, 0x00,
	0x00, 0x12, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00
};
static u8 HUBBLE1_A3_S0_MCD_ON_03[] = { 0xF6, 0x00 };
static u8 HUBBLE1_A3_S0_MCD_ON_04[] = { 0xCC, 0x12 };

static u8 HUBBLE1_A3_S0_MCD_OFF_00[] = { 0xC5, 0x11 };
static u8 HUBBLE1_A3_S0_MCD_OFF_01[] = { 0xF4, 0x30 };
static u8 HUBBLE1_A3_S0_MCD_OFF_02[] = {
	0xCB,
	0x00, 0x15, 0x9D, 0x9D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x95, 0x86,
	0xE3, 0xDF, 0xDD, 0xC6, 0xD9, 0xD6, 0xC7, 0xC1,
	0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x55, 0xD5,
	0xD5, 0x46, 0xE3, 0xDF, 0xDD, 0xC6, 0xD9, 0xD6,
	0xC7, 0xC1, 0xD5, 0xD5, 0xD5, 0xC0, 0xC0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x06, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C,
	0x00, 0x00, 0x00, 0x50, 0x10, 0x5E, 0x00, 0x00,
	0x00, 0x40, 0x10, 0x5E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0C, 0x32,
	0x00, 0x00, 0x00, 0xD8, 0x0C, 0x32, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0B, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00,
	0x00, 0x20, 0x00, 0x00, 0x17, 0x53, 0x00, 0x00,
	0x00, 0x17, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00
};
static u8 HUBBLE1_A3_S0_MCD_OFF_03[] = { 0xF6, 0x5F };
static u8 HUBBLE1_A3_S0_MCD_OFF_04[] = { 0xCC, 0x00 };

/* MCD 3.0 */
static u8 HUBBLE1_A3_S0_MCD_RS_ON_01[] = { 0xF3, 0x1F };
static u8 HUBBLE1_A3_S0_MCD_RS_ON_02[] = { 0xFD, 0x30 };
static u8 HUBBLE1_A3_S0_MCD_RS_ON_03[] = { 0xCC, 0x00 };
static u8 HUBBLE1_A3_S0_MCD_RS_ON_04[] = { 0xF3, 0x5F };
static u8 HUBBLE1_A3_S0_MCD_RS_ON_05[] = { 0xF3, 0x5E };
static u8 HUBBLE1_A3_S0_MCD_RS_ON_06[] = { 0xF3, 0x5A };
static u8 HUBBLE1_A3_S0_MCD_RS_ON_07[] = { 0xF3, 0x52 };
static u8 HUBBLE1_A3_S0_MCD_RS_ON_08[] = { 0xCC, 0x88 };
static u8 HUBBLE1_A3_S0_MCD_RS_ON_09[] = { 0xF4, 0x97 };

static u8 HUBBLE1_A3_S0_MCD_RS_OFF_01[] = { 0xF4, 0x17 };
static u8 HUBBLE1_A3_S0_MCD_RS_OFF_02[] = { 0xCC, 0x89 };
static u8 HUBBLE1_A3_S0_MCD_RS_OFF_03[] = { 0xF3, 0x5A };
static u8 HUBBLE1_A3_S0_MCD_RS_OFF_04[] = { 0xF3, 0x5E };
static u8 HUBBLE1_A3_S0_MCD_RS_OFF_05[] = { 0xF3, 0x5F };
static u8 HUBBLE1_A3_S0_MCD_RS_OFF_06[] = { 0xCC, 0x89 };
static u8 HUBBLE1_A3_S0_MCD_RS_OFF_07[] = { 0xF3, 0x1F };

static u8 HUBBLE1_A3_S0_MCD_RS_1_RIGHT_01[] = { 0xCC, 0x00 };
static u8 HUBBLE1_A3_S0_MCD_RS_2_RIGHT_01[] = { 0xCC, 0x00 };
static u8 HUBBLE1_A3_S0_MCD_RS_RIGHT_02[] = { 0xCC, 0x10 };
static u8 HUBBLE1_A3_S0_MCD_RS_1_RIGHT_03[] = { 0xCC, 0x80 };
static u8 HUBBLE1_A3_S0_MCD_RS_2_RIGHT_03[] = { 0xCC, 0x40 };
static u8 HUBBLE1_A3_S0_MCD_RS_RIGHT_04[] = { 0xCC, 0x00 };
static u8 HUBBLE1_A3_S0_MCD_RS_RIGHT_05[] = { 0xCC, 0x00 };

static u8 HUBBLE1_A3_S0_MCD_RS_1_LEFT_01[] = { 0xCC, 0x00 };
static u8 HUBBLE1_A3_S0_MCD_RS_2_LEFT_01[] = { 0xCC, 0x00 };
static u8 HUBBLE1_A3_S0_MCD_RS_LEFT_02[] = { 0xCC, 0x01 };
static u8 HUBBLE1_A3_S0_MCD_RS_1_LEFT_03[] = { 0xCC, 0x08 };
static u8 HUBBLE1_A3_S0_MCD_RS_2_LEFT_03[] = { 0xCC, 0x04 };
static u8 HUBBLE1_A3_S0_MCD_RS_LEFT_04[] = { 0xCC, 0x00 };
static u8 HUBBLE1_A3_S0_MCD_RS_LEFT_05[] = { 0xCC, 0x00 };

#ifdef CONFIG_SUPPORT_MST
static u8 HUBBLE1_A3_S0_MST_ON_01[] = { 0xCB, 0x1A };
static u8 HUBBLE1_A3_S0_MST_ON_02[] = { 0xCB, 0x1A };
static u8 HUBBLE1_A3_S0_MST_ON_03[] = { 0xCB, 0x54 };
static u8 HUBBLE1_A3_S0_MST_ON_04[] = { 0xCB, 0x54 };
static u8 HUBBLE1_A3_S0_MST_ON_05[] = {
	0xF6,
	0x44, 0x18, 0x16, 0x44, 0x53, 0x9E, 0xAA, 0x1F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0x4F
};
static u8 HUBBLE1_A3_S0_MST_ON_06[] = {
	0xBF,
	0x33, 0x25, 0xFF, 0x00, 0x00, 0x10
};

static u8 HUBBLE1_A3_S0_MST_OFF_01[] = { 0xCB, 0x10 };
static u8 HUBBLE1_A3_S0_MST_OFF_02[] = { 0xCB, 0x10 };
static u8 HUBBLE1_A3_S0_MST_OFF_03[] = { 0xCB, 0x5E };
static u8 HUBBLE1_A3_S0_MST_OFF_04[] = { 0xCB, 0x5E };
static u8 HUBBLE1_A3_S0_MST_OFF_05[] = {
	0xF6,
	0x44, 0x18, 0x16, 0x44, 0x53, 0x9E, 0xAA, 0x1F,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0x5F
};
static u8 HUBBLE1_A3_S0_MST_OFF_06[] = {
	0xBF,
	0x00, 0x07, 0xFF, 0x00, 0x00, 0x10
};

#endif

#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
static u8 HUBBLE1_A3_S0_VDDM_ORIG[] = { 0xD7, 0x00 };
static u8 HUBBLE1_A3_S0_VDDM_VOLT[] = { 0xD7, 0x00 };
static u8 HUBBLE1_A3_S0_VDDM_INIT[] = { 0xFE, 0x14 };
static u8 HUBBLE1_A3_S0_GRAM_CHKSUM_START[] = { 0x2C };
static u8 HUBBLE1_A3_S0_GRAM_IMG_PATTERN_ON[] = { 0xBE, 0x00 };
static u8 HUBBLE1_A3_S0_GRAM_INV_IMG_PATTERN_ON[] = { 0xBE, 0x00 };
static u8 HUBBLE1_A3_S0_GRAM_IMG_PATTERN_OFF[] = { 0xBE, 0x00 };
#endif

#ifdef CONFIG_SUPPORT_CCD_TEST
static u8 HUBBLE1_A3_S0_CCD_ENABLE[] = { 0xCC, 0x01 };
static u8 HUBBLE1_A3_S0_CCD_DISABLE[] = { 0xCC, 0x00 };
#endif

static u8 HUBBLE1_A3_S0_GAMMA_INTER_CONTROL1[] = {
	0xB1,
	0x00, 0x01, 0x00, 0x01, 0x00, 0x00
};

static u8 HUBBLE1_A3_S0_GAMMA_INTER_CONTROL2[] = {
	0xB1,
	0x80
};

#if defined(__PANEL_NOT_USED_VARIABLE__)
static u8 HUBBLE1_A3_S0_STM_ENABLE[] = {
	0x86,
	0x01, 0x08, 0x10, 0x21, 0x11, 0x42, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static u8 HUBBLE1_A3_S0_STM_DISABLE[] = { 0x86, 0x00 };
#endif

#ifdef CONFIG_SUPPORT_DYNAMIC_HLPM
static u8 HUBBLE1_A3_S0_DYNAMIC_HLPM_ENABLE[] = {
	0x85,
	0x03, 0x0B, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x02, 0x26, 0x02, 0xB2, 0x07, 0xBC, 0x09, 0xEB
};

static u8 HUBBLE1_A3_S0_DYNAMIC_HLPM_DISABLE[] = {
	0x85,
	0x00
};
#endif

#ifdef CONFIG_SUPPORT_GRAYSPOT_TEST
static u8 HUBBLE1_A3_S0_GRAYSPOT_ON_01[] = {
	0xF6, 0x00
};
static u8 HUBBLE1_A3_S0_GRAYSPOT_ON_02[] = {
	0xF2, 0xC2, 0x00
};
static u8 HUBBLE1_A3_S0_GRAYSPOT_ON_03[] = {
	0xF2, 0x90
};
static u8 HUBBLE1_A3_S0_GRAYSPOT_ON_04[] = {
	0xF4,
	0x30, 0x02, 0x2B, 0x6B, 0x23
};
static u8 HUBBLE1_A3_S0_GRAYSPOT_ON_05[] = {
	0xB5,
	0x19, 0xCC, 0x21
};
static u8 HUBBLE1_A3_S0_GRAYSPOT_ON_06[] = {
	0xB5,
	0x14
};

static u8 HUBBLE1_A3_S0_GRAYSPOT_OFF_01[] = {
	0xF6, 0x5F
};
static u8 HUBBLE1_A3_S0_GRAYSPOT_OFF_02[] = {
	0xF2, 0xC2, 0xB4
};
static u8 HUBBLE1_A3_S0_GRAYSPOT_OFF_03[] = {
	0xF2, 0x30
};
#endif

#ifdef CONFIG_SUPPORT_ISC_TUNE_TEST
static u8 HUBBLE1_A3_S0_ISC_THRESHOLD[] = {0xF6, 0x43};
static u8 HUBBLE1_A3_S0_STM_TUNE[] = {
	0x86,
	0x01, 0x08, 0x10, 0x21, 0x11, 0x42, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
#endif

static DEFINE_STATIC_PACKET(hubble1_a3_s0_level1_key_enable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_KEY1_ENABLE, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_level2_key_enable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_KEY2_ENABLE, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_level3_key_enable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_KEY3_ENABLE, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_level1_key_disable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_KEY1_DISABLE, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_level2_key_disable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_KEY2_DISABLE, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_level3_key_disable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_KEY3_DISABLE, 0);

static DEFINE_STATIC_PACKET(hubble1_a3_s0_sleep_out, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_SLEEP_OUT, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_sleep_in, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_SLEEP_IN, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_display_on, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_DISPLAY_ON, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_display_off, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_DISPLAY_OFF, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_exit_alpm, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_EXIT_ALPM, 0);

static DEFINE_COND(hubble1_a3_s0_cond_is_panel_state_not_lpm, is_panel_state_not_lpm);

#if defined(__PANEL_NOT_USED_VARIABLE__)
static DEFINE_STATIC_PACKET(hubble1_a3_s0_te_off, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_TE_OFF, 0);
#endif
static DEFINE_STATIC_PACKET(hubble1_a3_s0_te_on, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_TE_ON, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_err_fg, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ERR_FG, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mca_setting1, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCA_SETGING1, 0xA9);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mca_setting2, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCA_SETGING2, 0x28);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_async_enable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ASYNC_ENABLE, 0x06);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_dia_setting, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_DIA_SETTING, 0x73);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_ltps_setting1, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_LTPS_SETGING1, 0x25);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_ltps_setting2, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_LTPS_SETGING2, 0x27);

#ifdef CONFIG_DYNAMIC_FREQ
static DEFINE_PKTUI(hubble1_a3_s0_osc_96_5m_ffc, &hubble1_a3_s0_maptbl[OSC_96_5M_DYN_FFC_MAPTBL], 4);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_osc_96_5m_ffc, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_OSC_96_5M_FFC, 0);

static DEFINE_PKTUI(hubble1_a3_s0_ffc, &hubble1_a3_s0_maptbl[DYN_FFC_MAPTBL], 4);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_ffc, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_FFC, 0);

static DEFINE_STATIC_PACKET(hubble1_a3_s0_ffc_default, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_FFC_DEFAULT, 0);

static DEFINE_PKTUI(hubble1_a3_s0_osc_96_5m_ffc_default, &hubble1_a3_s0_maptbl[OSC_96_5M_DEFAULT_FFC_MAPTBL], 4);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_osc_96_5m_ffc_default, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_OSC_96_5M_FFC_DEFAULT, 0);

static u8 HUBBLE1_A3_S0_DDI_OSC_TUNE1[] = {
	0xF2,
	0x0D, 0xF0
};
static DEFINE_PKTUI(hubble1_a3_s0_ddi_osc_tune1, &hubble1_a3_s0_maptbl[DDI_OSC_CLK_TUNE1], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_ddi_osc_tune1, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_DDI_OSC_TUNE1, 8);


static u8 HUBBLE1_A3_S0_DDI_OSC_TUNE2[] = {
	0xF2,
	0x00, 0x10, 0x0D, 0xF0
};

static DEFINE_PKTUI(hubble1_a3_s0_ddi_osc_tune2, &hubble1_a3_s0_maptbl[DDI_OSC_CLK_TUNE2], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_ddi_osc_tune2, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_DDI_OSC_TUNE2, 0x0B);
#endif

static DEFINE_STATIC_PACKET(hubble1_a3_s0_tsp_hsync, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_TSP_HSYNC, 0);

#if defined(__PANEL_NOT_USED_VARIABLE__)
static u8 HUBBLE1_A3_S0_SSD_IMPROVE[] = { 0xEF, 0x45, };
static DEFINE_PKTUI(hubble1_a3_s0_ssd_improve, &hubble1_a3_s0_maptbl[SSD_IMPROVE_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_ssd_improve, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_SSD_IMPROVE, 0x0C);
#endif

static u8 HUBBLE1_A3_S0_AID[] = { 0xB1, 0x80, };
static DEFINE_PKTUI(hubble1_a3_s0_aid, &hubble1_a3_s0_maptbl[AID_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_aid, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_AID, 0x06);

static u8 HUBBLE1_A3_S0_OSC[] = { 0xF2, 0x00, };
static DEFINE_PKTUI(hubble1_a3_s0_osc, &hubble1_a3_s0_maptbl[OSC_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_osc, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_OSC, 0);

static u8 HUBBLE1_A3_S0_VFP_NM[] = { 0xF2, 0x00, 0x00 };
static DEFINE_PKTUI(hubble1_a3_s0_vfp_nm, &hubble1_a3_s0_maptbl[VFP_NM_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_vfp_nm, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_VFP_NM, 0x0B);

static u8 HUBBLE1_A3_S0_VFP_HS[] = { 0xF2, 0x00, 0x00 };
static DEFINE_PKTUI(hubble1_a3_s0_vfp_hs, &hubble1_a3_s0_maptbl[VFP_HS_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_vfp_hs, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_VFP_HS, 0x06);

static u8 HUBBLE1_A3_S0_PWR_GEN[] = { 0xF3, 0x00 };
static DEFINE_PKTUI(hubble1_a3_s0_pwr_gen, &hubble1_a3_s0_maptbl[PWR_GEN_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_pwr_gen, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_PWR_GEN, 0x06);

static u8 HUBBLE1_A3_S0_SRC_AMP[] = { 0xF6, 0x00 };
static DEFINE_PKTUI(hubble1_a3_s0_src_amp, &hubble1_a3_s0_maptbl[SRC_AMP_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_src_amp, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_SRC_AMP, 0x18);

static u8 HUBBLE1_A3_S0_LTPS_0[] = { 0xCB, 0x00 };
static DEFINE_PKTUI(hubble1_a3_s0_ltps_0, &hubble1_a3_s0_maptbl[LTPS_0_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_ltps_0, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_LTPS_0, 0x03);

static u8 HUBBLE1_A3_S0_OSC_86_4M_LTPS_1[] = { 0xCB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
static DEFINE_PKTUI(hubble1_a3_s0_osc_86_4m_ltps_1, &hubble1_a3_s0_maptbl[OSC_86_4M_LTPS_1_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_osc_86_4m_ltps_1, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_OSC_86_4M_LTPS_1, 0x54);

static u8 HUBBLE1_A3_S0_OSC_86_4M_LTPS_2[] = { 0xCB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
static DEFINE_PKTUI(hubble1_a3_s0_osc_86_4m_ltps_2, &hubble1_a3_s0_maptbl[OSC_86_4M_LTPS_2_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_osc_86_4m_ltps_2, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_OSC_86_4M_LTPS_2, 0x8E);

static u8 HUBBLE1_A3_S0_OSC_96_5M_LTPS_1[] = { 0xCB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
static DEFINE_PKTUI(hubble1_a3_s0_osc_96_5m_ltps_1, &hubble1_a3_s0_maptbl[OSC_96_5M_LTPS_1_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_osc_96_5m_ltps_1, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_OSC_96_5M_LTPS_1, 0x54);

static u8 HUBBLE1_A3_S0_OSC_96_5M_LTPS_2[] = { 0xCB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
static DEFINE_PKTUI(hubble1_a3_s0_osc_96_5m_ltps_2, &hubble1_a3_s0_maptbl[OSC_96_5M_LTPS_2_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_osc_96_5m_ltps_2, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_OSC_96_5M_LTPS_2, 0x8E);

static u8 HUBBLE1_A3_S0_FPS[] = { 0x60, 0x00, };
static DEFINE_PKTUI(hubble1_a3_s0_fps, &hubble1_a3_s0_maptbl[FPS_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_fps, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_FPS, 0);

static DEFINE_PKTUI(hubble1_a3_s0_dsc, &hubble1_a3_s0_maptbl[DSC_MAPTBL], 0);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_dsc, DSI_PKT_TYPE_COMP, HUBBLE1_A3_S0_DSC, 0);

#ifdef CONFIG_SUPPORT_DSU
static DEFINE_PKTUI(hubble1_a3_s0_pps, &hubble1_a3_s0_maptbl[PPS_MAPTBL], 0);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_pps, DSI_PKT_TYPE_PPS, HUBBLE1_A3_S0_PPS, 0);
static DEFINE_PKTUI(hubble1_a3_s0_scaler, &hubble1_a3_s0_maptbl[SCALER_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_scaler, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_SCALER, 0);
static DEFINE_PKTUI(hubble1_a3_s0_caset, &hubble1_a3_s0_maptbl[CASET_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_caset, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_CASET, 0);
static DEFINE_PKTUI(hubble1_a3_s0_paset, &hubble1_a3_s0_maptbl[PASET_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_paset, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_PASET, 0);
#else
static DEFINE_STATIC_PACKET(hubble1_a3_s0_pps, DSI_PKT_TYPE_PPS, HUBBLE1_A3_S0_PPS, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_scaler, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_SCALER, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_caset, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_CASET, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_paset, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_PASET, 0);
#endif

static DEFINE_STATIC_PACKET(hubble1_a3_s0_lpm_aor, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_LPM_AOR, 0);
static DEFINE_PKTUI(hubble1_a3_s0_lpm_off_nit, &hubble1_a3_s0_maptbl[LPM_OFF_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_lpm_off_nit, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_LPM_OFF_NIT, 0);
static DEFINE_PKTUI(hubble1_a3_s0_lpm_nit, &hubble1_a3_s0_maptbl[LPM_NIT_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_lpm_nit, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_LPM_NIT, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_aswire, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ASWIRE, 0x53);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_avs_on, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_AVS_ON, 0x28);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_avc2_on, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_AVC2_ON, 0x09);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_avc2_off, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_AVC2_OFF, 0x09);
#if defined(__PANEL_NOT_USED_VARIABLE__)
static DEFINE_PKTUI(hubble1_a3_s0_lpm_dyn_vlin, &hubble1_a3_s0_maptbl[LPM_DYN_VLIN_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_lpm_dyn_vlin, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_LPM_DYN_VLIN, 0x20);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_lpm_off_dyn_vlin, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_LPM_OFF_DYN_VLIN, 0x1D);
#endif
static DEFINE_PKTUI(hubble1_a3_s0_lpm_mode, &hubble1_a3_s0_maptbl[LPM_MODE_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_lpm_mode, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_LPM_MODE, 0);

#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
static DEFINE_STATIC_PACKET(hubble1_a3_s0_sw_reset, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_SW_RESET, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_gct_dsc, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GCT_DSC, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_gct_pps, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GCT_PPS, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_vddm_orig, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_VDDM_ORIG, 0x02);
static DEFINE_PKTUI(hubble1_a3_s0_vddm_volt, &hubble1_a3_s0_maptbl[VDDM_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_vddm_volt, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_VDDM_VOLT, 0x02);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_vddm_init, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_VDDM_INIT, 0x0A);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_gram_chksum_start, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAM_CHKSUM_START, 0);
static DEFINE_PKTUI(hubble1_a3_s0_gram_img_pattern_on, &hubble1_a3_s0_maptbl[GRAM_IMG_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_gram_img_pattern_on, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAM_IMG_PATTERN_ON, 0);
static DEFINE_PKTUI(hubble1_a3_s0_gram_inv_img_pattern_on, &hubble1_a3_s0_maptbl[GRAM_INV_IMG_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_gram_inv_img_pattern_on, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAM_INV_IMG_PATTERN_ON, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_gram_img_pattern_off, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAM_IMG_PATTERN_OFF, 0);
#endif

static DEFINE_PKTUI(hubble1_a3_s0_gamma_inter_control1, &hubble1_a3_s0_maptbl[GAMMA_INTER_CONTROL_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_gamma_inter_control1, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GAMMA_INTER_CONTROL1, S6E3HAB_GAMMA_INTER_OFS);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_gamma_inter_control2, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GAMMA_INTER_CONTROL2, 0x63);

#ifdef CONFIG_SUPPORT_CCD_TEST
static DEFINE_STATIC_PACKET(hubble1_a3_s0_ccd_test_enable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_CCD_ENABLE, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_ccd_test_disable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_CCD_DISABLE, 0);
#endif

#if defined(__PANEL_NOT_USED_VARIABLE__)
static DEFINE_STATIC_PACKET(hubble1_a3_s0_stm_enable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_STM_ENABLE, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_stm_disable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_STM_DISABLE, 0);
#endif

#if defined(__PANEL_NOT_USED_VARIABLE__)
static DEFINE_STATIC_PACKET(hubble1_a3_s0_gamma_mode1, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GAMMA_MODE1, 0x95);
#endif

#ifdef CONFIG_SUPPORT_ISC_TUNE_TEST
static DEFINE_PKTUI(hubble1_a3_s0_isc_threshold, &hubble1_a3_s0_maptbl[ISC_THRESHOLD_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_isc_threshold, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_THRESHOLD, 0x0B);
static DEFINE_PKTUI(hubble1_a3_s0_stm_tune, &hubble1_a3_s0_maptbl[STM_TUNE_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_stm_tune, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_STM_TUNE, 0);
#endif

#ifdef CONFIG_SUPPORT_DYNAMIC_HLPM
static DEFINE_STATIC_PACKET(hubble1_a3_s0_dynamic_hlpm_enable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_DYNAMIC_HLPM_ENABLE, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_dynamic_hlpm_disable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_DYNAMIC_HLPM_DISABLE, 0);
#endif

static DEFINE_PKTUI(hubble1_a3_s0_hbm_cycle, &hubble1_a3_s0_maptbl[HBM_CYCLE_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_hbm_cycle, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HBM_CYCLE, 0);
static DEFINE_PKTUI(hubble1_a3_s0_hbm_onoff, &hubble1_a3_s0_maptbl[HBM_ONOFF_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_hbm_onoff, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HBM_ONOFF, 0);
static DEFINE_PKTUI(hubble1_a3_s0_hbm_gamma, &hubble1_a3_s0_maptbl[GAMMA_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_hbm_gamma, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HBM_GAMMA, S6E3HAB_HBM_GAMMA_OFS);
static DECLARE_PKTUI(hubble1_a3_s0_hbm_aor) = {
	{ .offset = 1, .maptbl = &hubble1_a3_s0_maptbl[AOR_MAPTBL] },
	{ .offset = 3, .maptbl = &hubble1_a3_s0_maptbl[AOR_MAPTBL] },
};
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_hbm_aor, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HBM_AOR, 2);

static DEFINE_PKTUI(hubble1_a3_s0_gamma, &hubble1_a3_s0_maptbl[GAMMA_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_gamma, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GAMMA, 0);
static DEFINE_PKTUI(hubble1_a3_s0_aor, &hubble1_a3_s0_maptbl[AOR_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_aor, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_AOR, 0);

#if defined(__PANEL_NOT_USED_VARIABLE__)
static DEFINE_STATIC_PACKET(hubble1_a3_s0_poc_comp1, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_POC_COMP1, 0x06);
static DEFINE_PKTUI(hubble1_a3_s0_poc_comp2, &hubble1_a3_s0_maptbl[POC_COMP_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_poc_comp2, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_POC_COMP2, 0x02);
#endif

static DEFINE_PKTUI(hubble1_a3_s0_dbv, &hubble1_a3_s0_maptbl[DBV_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_dbv, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_DBV, 0);


static DECLARE_PKTUI(hubble1_a3_s0_tset_mps_elvss) = {
	{ .offset = 1, .maptbl = &hubble1_a3_s0_maptbl[TSET_MAPTBL] },
	{ .offset = 2, .maptbl = &hubble1_a3_s0_maptbl[MPS_MAPTBL] },
	{ .offset = 3, .maptbl = &hubble1_a3_s0_maptbl[ELVSS_MAPTBL] },
};
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_tset_mps_elvss, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_TSET_MPS_ELVSS, 0);
static DEFINE_PKTUI(hubble1_a3_s0_elvss_temp, &hubble1_a3_s0_maptbl[ELVSS_TEMP_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_elvss_temp, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ELVSS_TEMP, S6E3HAB_ELVSS_TEMP_0_OFS);

#ifdef CONFIG_SUPPORT_HMD
/* Command for hmd on */
static u8 HUBBLE1_A3_S0_HMD_ON_OSC[] = {
	0xF2,
	0xC2
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_hmd_on_osc, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HMD_ON_OSC, 0x00);

static u8 HUBBLE1_A3_S0_HMD_ON_VFP_NM[] = {
	0xF2,
	0x00, 0x10
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_hmd_on_vfp_nm, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HMD_ON_VFP_NM, 0x0B);

static u8 HUBBLE1_A3_S0_HMD_ON_FPS[] = {
	0x60,
	0x00
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_hmd_on_fps, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HMD_ON_FPS, 0x00);

static u8 HUBBLE1_A3_S0_HMD_ON_HBM_OFF[] = {
	0x53,
	0x00
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_hmd_on_hbm_off, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HMD_ON_HBM_OFF, 0x00);

static u8 HUBBLE1_A3_S0_HMD_ON_AOR[] = {
	0xB1,
	0x09, 0x93
};

static u8 HUBBLE1_A3_S0_HMD_ON_AID_1CYCLE[] = {
	0xB1,
	0x00
};

static u8 HUBBLE1_A3_S0_HMD_ON_LTPS[] = {
	0xCB,
	0x00, 0x15, 0x9D, 0x9D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x95, 0x86,
	0xE3, 0xDF, 0xDD, 0xC6, 0xDB, 0xD7, 0xC7, 0xC1,
	0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x55,
	0xD5, 0xC6, 0xE3, 0x5F, 0xDD, 0x86, 0xDB, 0x97,
	0xC7, 0xC1, 0xD5, 0xD5, 0xD5, 0xC0, 0xC0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x0E, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C,
	0x00, 0x00, 0x00, 0x50, 0x10, 0x61, 0x00, 0x00,
	0x00, 0x40, 0x10, 0x61, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x18, 0x00, 0x00, 0x00, 0xF8, 0x0C, 0x34,
	0x00, 0x00, 0x00, 0xD8, 0x0C, 0x34, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0B, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00,
	0x00, 0x20, 0x00, 0x00, 0x12, 0x53, 0x00, 0x00,
	0x00, 0x12, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00
};

static DEFINE_PKTUI(hubble1_a3_s0_hmd_on_aor, &hubble1_a3_s0_maptbl[HMD_AOR_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_hmd_on_aor, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HMD_ON_AOR, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_hmd_on_ltps, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HMD_ON_LTPS, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_hmd_on_aid_1cycle, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HMD_ON_AID_1CYCLE, 0x06);

/* Command for hmd off */
static u8 HUBBLE1_A3_S0_HMD_OFF_AOR[] = {
	0xB1,
	0x09, 0x93
};

static u8 HUBBLE1_A3_S0_HMD_OFF_AID_4CYCLE[] = {
	0xB1,
	0x80
};

static u8 HUBBLE1_A3_S0_HMD_OFF_LTPS[] = {
	0xCB,
	0x00, 0x15, 0x9D, 0x9D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x95, 0x86,
	0xE3, 0xDF, 0xDD, 0xC6,	0xD9, 0xD6, 0xC7, 0xC1,
	0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x55, 0xD5,
	0xD5, 0x46, 0xE3, 0xDF, 0xDD, 0xC6, 0xD9, 0xD6,
	0xC7, 0xC1, 0xD5, 0xD5, 0xD5, 0xC0, 0xC0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x06, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C,
	0x00, 0x00, 0x00, 0x50, 0x10, 0x5E, 0x00, 0x00,
	0x00, 0x40, 0x10, 0x5E, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0C, 0x32,
	0x00, 0x00, 0x00, 0xD8, 0x0C, 0x32, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0B, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00,
	0x00, 0x20, 0x00, 0x00, 0x17, 0x53, 0x00, 0x00,
	0x00, 0x17, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00
};

static DEFINE_PKTUI(hubble1_a3_s0_hmd_off_aor, &hubble1_a3_s0_maptbl[HMD_AOR_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_hmd_off_aor, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HMD_OFF_AOR, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_hmd_off_aid_4cycle, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HMD_OFF_AID_4CYCLE, 0x06);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_hmd_off_ltps, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_HMD_OFF_LTPS, 0);

static DEFINE_PKTUI(hubble1_a3_s0_hmd_gamma, &hubble1_a3_s0_maptbl[HMD_GAMMA_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_hmd_gamma, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GAMMA, 0);
static DEFINE_PKTUI(hubble1_a3_s0_hmd_aor, &hubble1_a3_s0_maptbl[HMD_AOR_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_hmd_aor, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_AOR, 0);
static DECLARE_PKTUI(hubble1_a3_s0_hmd_tset_mps_elvss) = {
	{ .offset = 1, .maptbl = &hubble1_a3_s0_maptbl[TSET_MAPTBL] },
	{ .offset = 2, .maptbl = &hubble1_a3_s0_maptbl[MPS_MAPTBL] },
	{ .offset = 3, .maptbl = &hubble1_a3_s0_maptbl[HMD_ELVSS_MAPTBL] },
};
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_hmd_tset_mps_elvss, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_TSET_MPS_ELVSS, 0);
#endif /* CONFIG_SUPPORT_HMD */

static DECLARE_PKTUI(hubble1_a3_s0_vgh_vint) = {
#ifdef CONFIG_SUPPORT_XTALK_MODE
	{ .offset = 1, .maptbl = &hubble1_a3_s0_maptbl[VGH_MAPTBL] },
#endif
	{ .offset = 5, .maptbl = &hubble1_a3_s0_maptbl[VINT_MAPTBL] },
};

static DEFINE_PKTUI(hubble1_a3_s0_vint_vrr_120hz, &hubble1_a3_s0_maptbl[VINT_VRR_120HZ_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_vint_vrr_120hz, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_VINT_VRR_120HZ, 28);

static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_vgh_vint, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_VGH_VINT, 0x00);
static DECLARE_PKTUI(hubble1_a3_s0_irc_value) = {
	{ .offset = 1, .maptbl = &hubble1_a3_s0_maptbl[IRC_MAPTBL] },
	{ .offset = 2, .maptbl = &hubble1_a3_s0_maptbl[IRC_MODE_MAPTBL] },
};
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_irc_value, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_IRC_VALUE, S6E3HAB_IRC_VALUE_OFS);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_irc_on, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_IRC_ON, 0x0A);
#ifdef CONFIG_SUPPORT_HMD
static DEFINE_STATIC_PACKET(hubble1_a3_s0_irc_off, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_IRC_OFF, 0x0A);
#endif
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
static DEFINE_STATIC_PACKET(hubble1_a3_s0_cmdlog_enable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_CMDLOG_ENABLE, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_cmdlog_disable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_CMDLOG_DISABLE, 0);
#endif
static DEFINE_STATIC_PACKET(hubble1_a3_s0_gamma_update_enable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GAMMA_UPDATE_ENABLE, 0);
static DEFINE_PKTUI(hubble1_a3_s0_acl_onoff, &hubble1_a3_s0_maptbl[ACL_ONOFF_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_acl_onoff, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ACL_ONOFF, 0);

static DEFINE_PKTUI(hubble1_a3_s0_dia_onoff, &hubble1_a3_s0_maptbl[DIA_ONOFF_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_dia_onoff, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_DIA_ONOFF, 0x3C);

static DECLARE_PKTUI(hubble1_a3_s0_acl_control) = {
	{ .offset = 2, .maptbl = &hubble1_a3_s0_maptbl[ACL_FRAME_AVG_MAPTBL] },
	{ .offset = 3, .maptbl = &hubble1_a3_s0_maptbl[ACL_START_POINT_MAPTBL] },
	{ .offset = 6, .maptbl = &hubble1_a3_s0_maptbl[ACL_OPR_MAPTBL] },
};
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_acl_control, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ACL_CONTROL, 0);
#if defined(__PANEL_NOT_USED_VARIABLE__)
static DEFINE_STATIC_PACKET(hubble1_a3_s0_acl_dim_frm, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ACL_DIM_FRM, 0xF);
#endif

static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC, 0x08);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_lpm, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_LPM, 0x10);

static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_on_00, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_ON_00, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_on_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_ON_01, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_on_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_ON_02, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_on_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_ON_03, 0x11);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_on_04, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_ON_04, 0x04);

static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_off_00, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_OFF_00, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_off_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_OFF_01, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_off_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_OFF_02, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_off_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_OFF_03, 0x11);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_off_04, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_OFF_04, 0x04);

static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_on_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_ON_01, 0x05);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_on_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_ON_02, 0x24);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_on_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_ON_03, 0x03);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_on_04, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_ON_04, 0x05);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_on_05, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_ON_05, 0x05);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_on_06, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_ON_06, 0x05);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_on_07, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_ON_07, 0x05);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_on_08, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_ON_08, 0x02);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_on_09, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_ON_09, 0x03);

static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_off_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_OFF_01, 0x03);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_off_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_OFF_02, 0x02);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_off_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_OFF_03, 0x05);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_off_04, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_OFF_04, 0x05);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_off_05, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_OFF_05, 0x05);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_off_06, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_OFF_06, 0x02);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_off_07, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_OFF_07, 0x05);

static DEFINE_PKTUI(hubble1_a3_s0_mcd_rs_1_right_01, &hubble1_a3_s0_maptbl[MCD_RESISTANCE_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_mcd_rs_1_right_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_1_RIGHT_01, 0x07);

static DEFINE_PKTUI(hubble1_a3_s0_mcd_rs_2_right_01, &hubble1_a3_s0_maptbl[MCD_RESISTANCE_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_mcd_rs_2_right_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_2_RIGHT_01, 0x08);

static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_right_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_RIGHT_02, 0x03);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_1_right_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_1_RIGHT_03, 0x04);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_2_right_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_2_RIGHT_03, 0x04);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_right_04, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_RIGHT_04, 0x04);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_right_05, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_RIGHT_05, 0x03);

static DEFINE_PKTUI(hubble1_a3_s0_mcd_rs_1_left_01, &hubble1_a3_s0_maptbl[MCD_RESISTANCE_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_mcd_rs_1_left_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_1_LEFT_01, 0x0B);

static DEFINE_PKTUI(hubble1_a3_s0_mcd_rs_2_left_01, &hubble1_a3_s0_maptbl[MCD_RESISTANCE_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_mcd_rs_2_left_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_2_LEFT_01, 0x0C);

static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_left_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_LEFT_02, 0x03);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_1_left_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_1_LEFT_03, 0x04);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_2_left_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_2_LEFT_03, 0x04);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_left_04, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_LEFT_04, 0x04);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mcd_rs_left_05, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MCD_RS_LEFT_05, 0x03);

#ifdef CONFIG_SUPPORT_MST
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_on_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_ON_01, 0x54);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_on_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_ON_02, 0x5A);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_on_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_ON_03, 0x55);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_on_04, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_ON_04, 0x5B);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_on_05, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_ON_05, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_on_06, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_ON_06, 0);

static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_off_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_OFF_01, 0x54);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_off_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_OFF_02, 0x5A);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_off_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_OFF_03, 0x55);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_off_04, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_OFF_04, 0x5B);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_off_05, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_OFF_05, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mst_off_06, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MST_OFF_06, 0);
#endif

#ifdef CONFIG_SUPPORT_GRAYSPOT_TEST
static DEFINE_STATIC_PACKET(hubble1_a3_s0_grayspot_on_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAYSPOT_ON_01, 0x11);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_grayspot_on_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAYSPOT_ON_02, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_grayspot_on_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAYSPOT_ON_03, 0x4F);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_grayspot_on_04, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAYSPOT_ON_04, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_grayspot_on_05, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAYSPOT_ON_05, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_grayspot_on_06, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAYSPOT_ON_06, S6E3HAB_ELVSS_TEMP_0_OFS);

static DEFINE_STATIC_PACKET(hubble1_a3_s0_grayspot_off_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAYSPOT_OFF_01, 0x11);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_grayspot_off_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAYSPOT_OFF_02, 0);
static DEFINE_STATIC_PACKET(hubble1_a3_s0_grayspot_off_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_GRAYSPOT_OFF_03, 0x4F);
#endif

static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_1msec, 1);
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_5msec, 5);
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_sleep_out_20msec, 20);
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_sleep_out_10msec, 10);
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_ltps_set, 10);
#ifdef CONFIG_SUPPORT_AFC
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_afc_off, 20);
#endif
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_sleep_in, 120);
static DEFINE_PANEL_UDELAY(hubble1_a3_s0_wait_1_frame_in_60hz, 16700);
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_100msec, 100);
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_124msec, 124);
static DEFINE_PANEL_VSYNC_DELAY(hubble1_a3_s0_wait_1_vsync, 1);
#ifdef CONFIG_SUPPORT_MAFPC
static DEFINE_PANEL_UDELAY(hubble1_a3_s0_wait_1usec, 1);
#endif

#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_120msec, 120);
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_vddm_update, 50);
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_20msec_gram_img_update, 20);
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_wait_gram_img_update, 150);
#endif

static DEFINE_PANEL_KEY(hubble1_a3_s0_level1_key_enable, CMD_LEVEL_1, KEY_ENABLE, &PKTINFO(hubble1_a3_s0_level1_key_enable));
static DEFINE_PANEL_KEY(hubble1_a3_s0_level2_key_enable, CMD_LEVEL_2, KEY_ENABLE, &PKTINFO(hubble1_a3_s0_level2_key_enable));
static DEFINE_PANEL_KEY(hubble1_a3_s0_level3_key_enable, CMD_LEVEL_3, KEY_ENABLE, &PKTINFO(hubble1_a3_s0_level3_key_enable));
static DEFINE_PANEL_KEY(hubble1_a3_s0_level1_key_disable, CMD_LEVEL_1, KEY_DISABLE, &PKTINFO(hubble1_a3_s0_level1_key_disable));
static DEFINE_PANEL_KEY(hubble1_a3_s0_level2_key_disable, CMD_LEVEL_2, KEY_DISABLE, &PKTINFO(hubble1_a3_s0_level2_key_disable));
static DEFINE_PANEL_KEY(hubble1_a3_s0_level3_key_disable, CMD_LEVEL_3, KEY_DISABLE, &PKTINFO(hubble1_a3_s0_level3_key_disable));


#ifdef CONFIG_SUPPORT_MAFPC
static u8 HUBBLE1_A3_S0_MAFPC_FLASH_SEL_OFF[] = {
	0xFE, 0x12,
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mafpc_flash_sel_off, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_FLASH_SEL_OFF, 0x09);

static u8 HUBBLE1_A3_S0_MAFPC_FLASH_SEL_ON[] = {
	0xFE, 0x10,
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mafpc_flash_sel_on, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_FLASH_SEL_ON, 0x09);

static u8 HUBBLE1_A3_S0_MAFPC_SR_PATH[] = {
	0x75, 0x40,
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mafpc_sr_path, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_SR_PATH, 0);


static u8 HUBBLE1_A3_S0_DEFAULT_SR_PATH[] = {
	0x75, 0x01,
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_default_sr_path, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_DEFAULT_SR_PATH, 0);

static DEFINE_STATIC_PACKET_WITH_OPTION(hubble1_mafpc_default_img, DSI_PKT_TYPE_SR_FAST,
	S6E3HAB_HUBBLE_MAFPC_DEFAULT_IMG, 0, PKT_OPTION_SR_ALIGN_12);

static u8 HUBBLE1_A3_S0_MAFPC_ENABLE[] = {
	0x87,
	0x00, 0x09, 0x0f, 0x00, 0x00, 0x81, 0x81, 0x81,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xf0, 0xf0, 0xf0,
};
static DECLARE_PKTUI(hubble1_a3_s0_mafpc_enable) = {
	{ .offset = 1, .maptbl = &hubble1_a3_s0_maptbl[MAFPC_ENA_MAPTBL] },
	{ .offset = 6, .maptbl = &hubble1_a3_s0_maptbl[MAFPC_CTRL_MAPTBL] },
};
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_mafpc_enable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_ENABLE, 0);

static u8 HUBBLE1_A3_S0_MAFPC_SCALE[] = {
	0x87,
	0xFF, 0xFF, 0xFF,
};
static DEFINE_PKTUI(hubble1_a3_s0_mafpc_scale, &hubble1_a3_s0_maptbl[MAFPC_SCALE_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_mafpc_scale, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_SCALE, 0x08);

static u8 HUBBLE1_A3_S0_MAFPC_DISABLE[] = {
	0x87, 0x00,
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mafpc_disable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_DISABLE, 0);

static u8 HUBBLE1_A3_S0_MAFPC_CRC_ON[] = {
	0xD8, 0x15,
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mafpc_crc_on, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_CRC_ON, 0x27);

static u8 HUBBLE1_A3_S0_MAFPC_CRC_BIST_ON[] = {
	0xBF,
	0x01, 0x07, 0xFF, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mafpc_crc_bist_on, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_CRC_BIST_ON, 0x00);


static u8 HUBBLE1_A3_S0_MAFPC_CRC_BIST_OFF[] = {
	0xBF,
	0x00, 0x07, 0xFF, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mafpc_crc_bist_off, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_CRC_BIST_OFF, 0x00);


static u8 HUBBLE1_A3_S0_MAFPC_CRC_ENABLE[] = {
	0x87,
	0x11, 0x09, 0x0f, 0x00, 0x00, 0x81, 0x81, 0x81,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xF0, 0xF0, 0xF0
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mafpc_crc_enable, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_CRC_ENABLE, 0);


static u8 HUBBLE1_A3_S0_MAFPC_CRC_MDNIE_OFF[] = {
	0xDD,
	0x00
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mafpc_crc_mdnie_off, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_CRC_MDNIE_OFF, 0);


static u8 HUBBLE1_A3_S0_MAFPC_CRC_MDNIE_ON[] = {
	0xDD,
	0x01
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_mafpc_crc_mdnie_on, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_MAFPC_CRC_MDNIE_ON, 0);

static u8 HUBBLE1_A3_S0_DUMMY_2C[] = {
	0x2C,
	0x00, 0x00, 0x00, 0x00
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_dummy_2c, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_DUMMY_2C, 0);
static DEFINE_PANEL_MDELAY(hubble1_a3_s0_crc_wait, 34);

static void *hubble1_a3_s0_mafpc_image_cmdtbl[] = {
	//&KEYINFO(hubble1_a3_s0_level3_key_enable),
	//&PKTINFO(hubble1_a3_s0_mafpc_flash_sel_off),
	//&KEYINFO(hubble1_a3_s0_level3_key_disable),

	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_sr_path),
	&DLYINFO(hubble1_a3_s0_wait_1usec),
	&PKTINFO(hubble1_mafpc_default_img),
	&PKTINFO(hubble1_a3_s0_default_sr_path),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),

	//&KEYINFO(hubble1_a3_s0_level3_key_enable),
	//&PKTINFO(hubble1_a3_s0_mafpc_flash_sel_on),
	//&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
};

static void *hubble1_a3_s0_mafpc_on_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_scale),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_mafpc_off_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_mafpc_check_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),

	&PKTINFO(hubble1_a3_s0_dummy_2c),
	&PKTINFO(hubble1_a3_s0_mafpc_crc_on),
	&PKTINFO(hubble1_a3_s0_mafpc_crc_bist_on),

	&PKTINFO(hubble1_a3_s0_mafpc_crc_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_crc_mdnie_off),
	&PKTINFO(hubble1_a3_s0_display_on),
	&DLYINFO(hubble1_a3_s0_crc_wait),
	&s6e3hab_restbl[RES_MAFPC_CRC],
	&PKTINFO(hubble1_a3_s0_display_off),
	&PKTINFO(hubble1_a3_s0_mafpc_crc_bist_off),
	&PKTINFO(hubble1_a3_s0_mafpc_disable),
	&PKTINFO(hubble1_a3_s0_mafpc_crc_mdnie_on),

	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
};


static DEFINE_PANEL_TIMER_MDELAY(hubble1_a3_s0_mafpc_delay, 130);
static DEFINE_PANEL_TIMER_BEGIN(hubble1_a3_s0_mafpc_delay,
		TIMER_DLYINFO(&hubble1_a3_s0_mafpc_delay));
#endif

static struct seqinfo SEQINFO(hubble1_a3_s0_set_bl_param_seq);
static struct seqinfo SEQINFO(hubble1_a3_s0_preliminary_set_fps_param_seq);
static struct seqinfo SEQINFO(hubble1_a3_s0_osc_96_5m_set_fps_param_seq);
static struct seqinfo SEQINFO(hubble1_a3_s0_osc_86_4m_set_fps_param_seq);

static void *hubble1_a3_s0_preliminary_osc_96_5m_init_cmdtbl[] = {
	&DLYINFO(hubble1_a3_s0_wait_5msec),
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_dsc),
	&PKTINFO(hubble1_a3_s0_pps),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mca_setting1),
	&PKTINFO(hubble1_a3_s0_mca_setting2),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_async_enable),
	&PKTINFO(hubble1_a3_s0_dia_setting),
	&PKTINFO(hubble1_a3_s0_sleep_out),
	&DLYINFO(hubble1_a3_s0_wait_sleep_out_10msec),
	&PKTINFO(hubble1_a3_s0_ltps_setting1),
	&PKTINFO(hubble1_a3_s0_ltps_setting2),
	&DLYINFO(hubble1_a3_s0_wait_ltps_set),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
#ifdef CONFIG_SUPPORT_MAFPC
	&TIMER_DLYINFO_BEGIN(hubble1_a3_s0_mafpc_delay),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_flash_sel_off),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),

	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_sr_path),
	&DLYINFO(hubble1_a3_s0_wait_1usec),
	&PKTINFO(hubble1_mafpc_default_img),
	&PKTINFO(hubble1_a3_s0_default_sr_path),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),

	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_flash_sel_on),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),

	&TIMER_DLYINFO(hubble1_a3_s0_mafpc_delay),
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&s6e3hab_restbl[RES_POC_CHKSUM],
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
#endif
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_scaler),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&PKTINFO(hubble1_a3_s0_caset),
	&PKTINFO(hubble1_a3_s0_paset),
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_te_on),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_err_fg),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
#ifdef CONFIG_DYNAMIC_FREQ
	&PKTINFO(hubble1_a3_s0_osc_96_5m_ffc_default),
	&PKTINFO(hubble1_a3_s0_ddi_osc_tune1),
	&PKTINFO(hubble1_a3_s0_ddi_osc_tune2),
#endif
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&PKTINFO(hubble1_a3_s0_tsp_hsync),
	&PKTINFO(hubble1_a3_s0_isc),
	/* set brightness & fps */
	&SEQINFO(hubble1_a3_s0_set_bl_param_seq),
	&SEQINFO(hubble1_a3_s0_preliminary_set_fps_param_seq),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	&SEQINFO(hubble1_a3_s0_copr_seqtbl[COPR_SET_SEQ]),
#endif
};

static void *hubble1_a3_s0_preliminary_init_cmdtbl[] = {
	&DLYINFO(hubble1_a3_s0_wait_5msec),
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_dsc),
	&PKTINFO(hubble1_a3_s0_pps),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mca_setting1),
	&PKTINFO(hubble1_a3_s0_mca_setting2),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_async_enable),
	&PKTINFO(hubble1_a3_s0_dia_setting),
	&PKTINFO(hubble1_a3_s0_sleep_out),
	&DLYINFO(hubble1_a3_s0_wait_sleep_out_20msec),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
#ifdef CONFIG_SUPPORT_MAFPC
	&TIMER_DLYINFO_BEGIN(hubble1_a3_s0_mafpc_delay),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_flash_sel_off),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),

	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_sr_path),
	&DLYINFO(hubble1_a3_s0_wait_1usec),
	&PKTINFO(hubble1_mafpc_default_img),
	&PKTINFO(hubble1_a3_s0_default_sr_path),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),

	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_flash_sel_on),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),

	&TIMER_DLYINFO(hubble1_a3_s0_mafpc_delay),
#endif
#ifdef CONFIG_DISPLAY_USE_INFO
	&s6e3hab_dmptbl[DUMP_SELF_DIAG],
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&s6e3hab_restbl[RES_POC_CHKSUM],
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
#endif
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_scaler),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&PKTINFO(hubble1_a3_s0_caset),
	&PKTINFO(hubble1_a3_s0_paset),
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_te_on),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_err_fg),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
#ifdef CONFIG_DYNAMIC_FREQ
	&PKTINFO(hubble1_a3_s0_ffc_default),
#endif
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&PKTINFO(hubble1_a3_s0_tsp_hsync),
	&PKTINFO(hubble1_a3_s0_isc),
	/* set brightness & fps */
	&SEQINFO(hubble1_a3_s0_set_bl_param_seq),
	&SEQINFO(hubble1_a3_s0_preliminary_set_fps_param_seq),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	&SEQINFO(hubble1_a3_s0_copr_seqtbl[COPR_SET_SEQ]),
#endif
};

static void *hubble1_a3_s0_osc_96_5m_init_cmdtbl[] = {
	&DLYINFO(hubble1_a3_s0_wait_5msec),
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_dsc),
	&PKTINFO(hubble1_a3_s0_pps),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mca_setting1),
	&PKTINFO(hubble1_a3_s0_mca_setting2),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_async_enable),
	&PKTINFO(hubble1_a3_s0_dia_setting),
	&PKTINFO(hubble1_a3_s0_sleep_out),
	&DLYINFO(hubble1_a3_s0_wait_sleep_out_10msec),
	&PKTINFO(hubble1_a3_s0_ltps_setting1),
	&PKTINFO(hubble1_a3_s0_ltps_setting2),
	&DLYINFO(hubble1_a3_s0_wait_ltps_set),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
#ifdef CONFIG_SUPPORT_MAFPC
	&TIMER_DLYINFO_BEGIN(hubble1_a3_s0_mafpc_delay),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_flash_sel_off),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),

	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_sr_path),
	&DLYINFO(hubble1_a3_s0_wait_1usec),
	&PKTINFO(hubble1_mafpc_default_img),
	&PKTINFO(hubble1_a3_s0_default_sr_path),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),

	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_flash_sel_on),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),

	&TIMER_DLYINFO(hubble1_a3_s0_mafpc_delay),
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&s6e3hab_restbl[RES_POC_CHKSUM],
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
#endif
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_scaler),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&PKTINFO(hubble1_a3_s0_caset),
	&PKTINFO(hubble1_a3_s0_paset),
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_te_on),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_err_fg),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
#ifdef CONFIG_DYNAMIC_FREQ
	&PKTINFO(hubble1_a3_s0_osc_96_5m_ffc_default),
	&PKTINFO(hubble1_a3_s0_ddi_osc_tune1),
	&PKTINFO(hubble1_a3_s0_ddi_osc_tune2),
#endif
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&PKTINFO(hubble1_a3_s0_tsp_hsync),
	&PKTINFO(hubble1_a3_s0_isc),
	/* set brightness & fps */
	&SEQINFO(hubble1_a3_s0_set_bl_param_seq),
	&SEQINFO(hubble1_a3_s0_osc_96_5m_set_fps_param_seq),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	&SEQINFO(hubble1_a3_s0_copr_seqtbl[COPR_SET_SEQ]),
#endif
};

static void *hubble1_a3_s0_init_cmdtbl[] = {
	&DLYINFO(hubble1_a3_s0_wait_5msec),
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_dsc),
	&PKTINFO(hubble1_a3_s0_pps),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mca_setting1),
	&PKTINFO(hubble1_a3_s0_mca_setting2),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_async_enable),
	&PKTINFO(hubble1_a3_s0_dia_setting),
	&PKTINFO(hubble1_a3_s0_sleep_out),
	&DLYINFO(hubble1_a3_s0_wait_sleep_out_20msec),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
#ifdef CONFIG_SUPPORT_MAFPC
	&TIMER_DLYINFO_BEGIN(hubble1_a3_s0_mafpc_delay),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_flash_sel_off),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),

	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_sr_path),
	&DLYINFO(hubble1_a3_s0_wait_1usec),
	&PKTINFO(hubble1_mafpc_default_img),
	&PKTINFO(hubble1_a3_s0_default_sr_path),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),

	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_flash_sel_on),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),

	&TIMER_DLYINFO(hubble1_a3_s0_mafpc_delay),
#endif
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
	&PKTINFO(hubble1_a3_s0_cmdlog_enable),
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&s6e3hab_restbl[RES_POC_CHKSUM],
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
#endif
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_scaler),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&PKTINFO(hubble1_a3_s0_caset),
	&PKTINFO(hubble1_a3_s0_paset),
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_te_on),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_err_fg),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
#ifdef CONFIG_DYNAMIC_FREQ
	&PKTINFO(hubble1_a3_s0_ffc_default),
#endif
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&PKTINFO(hubble1_a3_s0_tsp_hsync),
	&PKTINFO(hubble1_a3_s0_isc),
	/* set brightness & fps */
	&SEQINFO(hubble1_a3_s0_set_bl_param_seq),
	&SEQINFO(hubble1_a3_s0_osc_86_4m_set_fps_param_seq),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	&SEQINFO(hubble1_a3_s0_copr_seqtbl[COPR_SET_SEQ]),
#endif
};

static void *hubble1_a3_s0_res_init_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&s6e3hab_restbl[RES_COORDINATE],
	&s6e3hab_restbl[RES_CODE],
	&s6e3hab_restbl[RES_ELVSS],
	&s6e3hab_restbl[RES_ELVSS_TEMP_0],
	&s6e3hab_restbl[RES_ELVSS_TEMP_1],
	&s6e3hab_restbl[RES_MTP],
	&s6e3hab_restbl[RES_DATE],
	&s6e3hab_restbl[RES_HBM_GAMMA],
	&s6e3hab_restbl[RES_HBM_GAMMA_60HZ_HS],
	&s6e3hab_restbl[RES_HBM_GAMMA_120HZ],
	&s6e3hab_restbl[RES_CENTER_GAMMA_60HZ_HS],
	&s6e3hab_restbl[RES_CENTER_GAMMA_120HZ],
	&s6e3hab_restbl[RES_OCTA_ID],
#ifdef CONFIG_DISPLAY_USE_INFO
	&s6e3hab_restbl[RES_CHIP_ID],
	&s6e3hab_restbl[RES_SELF_DIAG],
	&s6e3hab_restbl[RES_ERR_FG],
	&s6e3hab_restbl[RES_DSI_ERR],
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	&s6e3hab_restbl[RES_POC_CHKSUM],
#endif
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
};

#ifdef CONFIG_SUPPORT_DIM_FLASH
static void *hubble1_a3_s0_preliminary_dim_flash_res_init_cmdtbl[] = {
	&s6e3hab_restbl[RES_DIM_FLASH_HBM_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_AOR],
	&s6e3hab_restbl[RES_DIM_FLASH_VINT],
	&s6e3hab_restbl[RES_DIM_FLASH_ELVSS],
	&s6e3hab_restbl[RES_DIM_FLASH_IRC],
	&s6e3hab_restbl[RES_DIM_FLASH_HMD_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_HMD_AOR],
	&s6e3hab_restbl[RES_DIM_FLASH_MTP_OFFSET],

	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_HBM_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_AOR],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_VINT],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_ELVSS],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_IRC],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_HMD_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_HMD_AOR],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_MTP_OFFSET],
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&s6e3hab_restbl[RES_MTP],
	&s6e3hab_restbl[RES_HBM_GAMMA],
	&s6e3hab_restbl[RES_HBM_GAMMA_120HZ],
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_dim_flash_res_init_cmdtbl[] = {
	&s6e3hab_restbl[RES_DIM_FLASH_HBM_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_AOR],
	&s6e3hab_restbl[RES_DIM_FLASH_VINT],
	&s6e3hab_restbl[RES_DIM_FLASH_ELVSS],
	&s6e3hab_restbl[RES_DIM_FLASH_IRC],
	&s6e3hab_restbl[RES_DIM_FLASH_HMD_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_HMD_AOR],
	&s6e3hab_restbl[RES_DIM_FLASH_MTP_OFFSET],

	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_HBM_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_AOR],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_VINT],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_ELVSS],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_IRC],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_HMD_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_HMD_AOR],
	&s6e3hab_restbl[RES_DIM_FLASH_120HZ_MTP_OFFSET],

	&s6e3hab_restbl[RES_DIM_FLASH_60HZ_HS_HBM_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_60HZ_HS_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_60HZ_HS_AOR],
	&s6e3hab_restbl[RES_DIM_FLASH_60HZ_HS_VINT],
	&s6e3hab_restbl[RES_DIM_FLASH_60HZ_HS_ELVSS],
	&s6e3hab_restbl[RES_DIM_FLASH_60HZ_HS_IRC],
	&s6e3hab_restbl[RES_DIM_FLASH_60HZ_HS_HMD_GAMMA],
	&s6e3hab_restbl[RES_DIM_FLASH_60HZ_HS_HMD_AOR],
	&s6e3hab_restbl[RES_DIM_FLASH_60HZ_HS_MTP_OFFSET],

	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&s6e3hab_restbl[RES_MTP],
	&s6e3hab_restbl[RES_HBM_GAMMA],
	&s6e3hab_restbl[RES_HBM_GAMMA_120HZ],
	&s6e3hab_restbl[RES_HBM_GAMMA_60HZ_HS],
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};
#endif

static void *hubble1_a3_s0_set_bl_param_cmdtbl[] = {
	&PKTINFO(hubble1_a3_s0_hbm_cycle),
	&PKTINFO(hubble1_a3_s0_hbm_gamma),
	&PKTINFO(hubble1_a3_s0_hbm_aor),
	&PKTINFO(hubble1_a3_s0_gamma),
	&PKTINFO(hubble1_a3_s0_aor),
	&PKTINFO(hubble1_a3_s0_aid),
	&PKTINFO(hubble1_a3_s0_dbv),
	&PKTINFO(hubble1_a3_s0_vgh_vint),
	&PKTINFO(hubble1_a3_s0_vint_vrr_120hz),
	&PKTINFO(hubble1_a3_s0_acl_control),
	&PKTINFO(hubble1_a3_s0_acl_onoff),
	&PKTINFO(hubble1_a3_s0_irc_value),
	&PKTINFO(hubble1_a3_s0_irc_on),
	&PKTINFO(hubble1_a3_s0_tset_mps_elvss),
	&PKTINFO(hubble1_a3_s0_elvss_temp),
	&PKTINFO(hubble1_a3_s0_hbm_onoff),
};

static DEFINE_SEQINFO(hubble1_a3_s0_set_bl_param_seq,
		hubble1_a3_s0_set_bl_param_cmdtbl);

static void *hubble1_a3_s0_set_bl_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
#ifdef CONFIG_SUPPORT_MAFPC
	&PKTINFO(hubble1_a3_s0_mafpc_scale),
#endif
	&SEQINFO(hubble1_a3_s0_set_bl_param_seq),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_preliminary_set_fps_param_cmdtbl[] = {
	/* fps & osc setting */
	&PKTINFO(hubble1_a3_s0_osc),
	&PKTINFO(hubble1_a3_s0_vfp_nm),
	&PKTINFO(hubble1_a3_s0_vfp_hs),
	&PKTINFO(hubble1_a3_s0_pwr_gen),
	&PKTINFO(hubble1_a3_s0_src_amp),
	&PKTINFO(hubble1_a3_s0_fps),
};

static DEFINE_SEQINFO(hubble1_a3_s0_preliminary_set_fps_param_seq,
		hubble1_a3_s0_preliminary_set_fps_param_cmdtbl);

static void *hubble1_a3_s0_preliminary_set_fps_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&SEQINFO(hubble1_a3_s0_set_bl_param_seq),
	&DLYINFO(hubble1_a3_s0_wait_1_vsync),
	&SEQINFO(hubble1_a3_s0_preliminary_set_fps_param_seq),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

#if defined(CONFIG_PANEL_DISPLAY_MODE)
static void *hubble1_a3_s0_preliminary_display_mode_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&CONDINFO_IF(hubble1_a3_s0_cond_is_panel_state_not_lpm),
	&SEQINFO(hubble1_a3_s0_set_bl_param_seq),
	&DLYINFO(hubble1_a3_s0_wait_1_vsync),
	&CONDINFO_FI(hubble1_a3_s0_cond_is_panel_state_not_lpm),
#ifdef CONFIG_SUPPORT_DSU
	&PKTINFO(hubble1_a3_s0_dsc),
	&PKTINFO(hubble1_a3_s0_pps),
	&PKTINFO(hubble1_a3_s0_caset),
	&PKTINFO(hubble1_a3_s0_paset),
	&PKTINFO(hubble1_a3_s0_scaler),
#endif
	&CONDINFO_IF(hubble1_a3_s0_cond_is_panel_state_not_lpm),
	&SEQINFO(hubble1_a3_s0_preliminary_set_fps_param_seq),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&CONDINFO_FI(hubble1_a3_s0_cond_is_panel_state_not_lpm),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
};
#endif

static void *hubble1_a3_s0_osc_86_4m_set_fps_param_cmdtbl[] = {
	/* fps & osc setting */
	&PKTINFO(hubble1_a3_s0_osc),
	&PKTINFO(hubble1_a3_s0_vfp_nm),
	&PKTINFO(hubble1_a3_s0_vfp_hs),
	&PKTINFO(hubble1_a3_s0_pwr_gen),
	&PKTINFO(hubble1_a3_s0_src_amp),
	&PKTINFO(hubble1_a3_s0_ltps_0),
	&PKTINFO(hubble1_a3_s0_osc_86_4m_ltps_1),
	&PKTINFO(hubble1_a3_s0_osc_86_4m_ltps_2),
	&PKTINFO(hubble1_a3_s0_fps),
};

static DEFINE_SEQINFO(hubble1_a3_s0_osc_86_4m_set_fps_param_seq,
		hubble1_a3_s0_osc_86_4m_set_fps_param_cmdtbl);

static void *hubble1_a3_s0_osc_86_4m_set_fps_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&SEQINFO(hubble1_a3_s0_set_bl_param_seq),
	&DLYINFO(hubble1_a3_s0_wait_1_vsync),
	&SEQINFO(hubble1_a3_s0_osc_86_4m_set_fps_param_seq),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

#if defined(CONFIG_PANEL_DISPLAY_MODE)
static void *hubble1_a3_s0_osc_86_4m_display_mode_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&CONDINFO_IF(hubble1_a3_s0_cond_is_panel_state_not_lpm),
	&SEQINFO(hubble1_a3_s0_set_bl_param_seq),
	&DLYINFO(hubble1_a3_s0_wait_1_vsync),
	&CONDINFO_FI(hubble1_a3_s0_cond_is_panel_state_not_lpm),
#ifdef CONFIG_SUPPORT_DSU
	&PKTINFO(hubble1_a3_s0_dsc),
	&PKTINFO(hubble1_a3_s0_pps),
	&PKTINFO(hubble1_a3_s0_caset),
	&PKTINFO(hubble1_a3_s0_paset),
	&PKTINFO(hubble1_a3_s0_scaler),
#endif
	&CONDINFO_IF(hubble1_a3_s0_cond_is_panel_state_not_lpm),
	&SEQINFO(hubble1_a3_s0_osc_86_4m_set_fps_param_seq),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&CONDINFO_FI(hubble1_a3_s0_cond_is_panel_state_not_lpm),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
};
#endif

static void *hubble1_a3_s0_osc_96_5m_set_fps_param_cmdtbl[] = {
	/* fps & osc setting */
	&PKTINFO(hubble1_a3_s0_osc),
	&PKTINFO(hubble1_a3_s0_vfp_nm),
	&PKTINFO(hubble1_a3_s0_vfp_hs),
	&PKTINFO(hubble1_a3_s0_pwr_gen),
	&PKTINFO(hubble1_a3_s0_src_amp),
	&PKTINFO(hubble1_a3_s0_ltps_0),
	&PKTINFO(hubble1_a3_s0_osc_96_5m_ltps_1),
	&PKTINFO(hubble1_a3_s0_osc_96_5m_ltps_2),
	&PKTINFO(hubble1_a3_s0_fps),
};

static DEFINE_SEQINFO(hubble1_a3_s0_osc_96_5m_set_fps_param_seq,
		hubble1_a3_s0_osc_96_5m_set_fps_param_cmdtbl);

static void *hubble1_a3_s0_osc_96_5m_set_fps_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&SEQINFO(hubble1_a3_s0_set_bl_param_seq),
	&DLYINFO(hubble1_a3_s0_wait_1_vsync),
	&SEQINFO(hubble1_a3_s0_osc_96_5m_set_fps_param_seq),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

#if defined(CONFIG_PANEL_DISPLAY_MODE)
static void *hubble1_a3_s0_osc_96_5m_display_mode_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&CONDINFO_IF(hubble1_a3_s0_cond_is_panel_state_not_lpm),
	&SEQINFO(hubble1_a3_s0_set_bl_param_seq),
	&DLYINFO(hubble1_a3_s0_wait_1_vsync),
	&CONDINFO_FI(hubble1_a3_s0_cond_is_panel_state_not_lpm),
#ifdef CONFIG_SUPPORT_DSU
	&PKTINFO(hubble1_a3_s0_dsc),
	&PKTINFO(hubble1_a3_s0_pps),
	&PKTINFO(hubble1_a3_s0_caset),
	&PKTINFO(hubble1_a3_s0_paset),
	&PKTINFO(hubble1_a3_s0_scaler),
#endif
	&CONDINFO_IF(hubble1_a3_s0_cond_is_panel_state_not_lpm),
	&SEQINFO(hubble1_a3_s0_osc_96_5m_set_fps_param_seq),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&CONDINFO_FI(hubble1_a3_s0_cond_is_panel_state_not_lpm),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
};
#endif

#ifdef CONFIG_SUPPORT_HMD
static void *hubble1_a3_s0_hmd_on_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_hmd_on_aor),
	&PKTINFO(hubble1_a3_s0_hmd_on_aid_1cycle),
	&PKTINFO(hubble1_a3_s0_hmd_on_ltps),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_hmd_off_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_hmd_off_aor),
	&PKTINFO(hubble1_a3_s0_hmd_off_aid_4cycle),
	&PKTINFO(hubble1_a3_s0_hmd_off_ltps),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_hmd_bl_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_hmd_gamma),
	&PKTINFO(hubble1_a3_s0_hmd_aor),
	&PKTINFO(hubble1_a3_s0_hmd_tset_mps_elvss),
	&PKTINFO(hubble1_a3_s0_acl_control),
	&PKTINFO(hubble1_a3_s0_acl_onoff),
	&PKTINFO(hubble1_a3_s0_irc_off),
	&PKTINFO(hubble1_a3_s0_hmd_on_osc),
	&PKTINFO(hubble1_a3_s0_hmd_on_vfp_nm),
	&PKTINFO(hubble1_a3_s0_hmd_on_fps),
	&PKTINFO(hubble1_a3_s0_hmd_on_hbm_off),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};
#endif

static void *hubble1_a3_s0_display_on_cmdtbl[] = {
#ifdef CONFIG_SUPPORT_MAFPC
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_enable),
	&PKTINFO(hubble1_a3_s0_mafpc_scale),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
#endif
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_display_on),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
};

static void *hubble1_a3_s0_display_off_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_display_off),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
};

static void *hubble1_a3_s0_exit_cmdtbl[] = {
#ifdef CONFIG_SUPPORT_AFC
	&SEQINFO(hubble1_a3_s0_mdnie_seqtbl[MDNIE_AFC_OFF_SEQ]),
	&DLYINFO(hubble1_a3_s0_wait_afc_off),
#endif
 	&KEYINFO(hubble1_a3_s0_level1_key_enable),
#ifdef CONFIG_DISPLAY_USE_INFO
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&s6e3hab_dmptbl[DUMP_ERR_FG],
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&s6e3hab_dmptbl[DUMP_DSI_ERR],
	&s6e3hab_dmptbl[DUMP_SELF_DIAG],
#endif
	&PKTINFO(hubble1_a3_s0_sleep_in),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
	&DLYINFO(hubble1_a3_s0_wait_sleep_in),
};

static void *hubble1_a3_s0_alpm_enter_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_lpm_aor),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_lpm_nit),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_isc_lpm),
	&PKTINFO(hubble1_a3_s0_avs_on),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&PKTINFO(hubble1_a3_s0_lpm_mode),
	&PKTINFO(hubble1_a3_s0_avc2_off),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_alpm_enter_delay_cmdtbl[] = {
	&DLYINFO(hubble1_a3_s0_wait_124msec),
};

static void *hubble1_a3_s0_alpm_exit_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_lpm_off_nit),
	&PKTINFO(hubble1_a3_s0_aswire),
	&PKTINFO(hubble1_a3_s0_avc2_on),
	&PKTINFO(hubble1_a3_s0_exit_alpm),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_dia_onoff_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_dia_onoff),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_gamma_inter_control_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_gamma_inter_control1),
	&PKTINFO(hubble1_a3_s0_gamma_inter_control2),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_check_condition_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&s6e3hab_dmptbl[DUMP_RDDPM],
#ifdef CONFIG_SUPPORT_MAFPC
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&s6e3hab_dmptbl[DUMP_MAFPC],
	&s6e3hab_dmptbl[DUMP_MAFPC_FLASH],
	&s6e3hab_dmptbl[DUMP_SELF_MASK_CRC],
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
#endif
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

#ifdef CONFIG_SUPPORT_ISC_TUNE_TEST
static void *hubble1_a3_s0_isc_threshold_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_isc_threshold),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_stm_tune_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_stm_tune),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};
#endif

#ifdef CONFIG_DYNAMIC_FREQ

static u8 HUBBLE1_A3_S0_OSC_96_5M_LTPS_COMP1[] = {
	0xCB,
	0x00, 0x15, 0x9D, 0x9D, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x95, 0x86,
	0xE3, 0xDF, 0xDD, 0xC6, 0xD9, 0xD6, 0xC7, 0xC1,
	0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0xD5, 0x55, 0xD5,
	0xD5, 0x46, 0xE3, 0xDF, 0xDD, 0x86, 0xD9, 0x96,
	0xC7, 0xC1, 0xD5, 0xD5, 0xD5, 0xC0, 0xC0, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0B, 0x00, 0x06, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C,
	0x00, 0x00, 0x00, 0x50, 0x10, 0x5C, 0x00, 0x00,
	0x00, 0x40, 0x10, 0x5C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0C, 0x31,
	0x00, 0x00, 0x00, 0xD8, 0x0C, 0x31, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0B, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00,
	0x00, 0x20, 0x00, 0x00, 0x16, 0x51, 0x00, 0x00,
	0x00, 0x16, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00
};


static DEFINE_PKTUI(hubble1_a3_s0_osc_94_5m_ltps_comp1, &hubble1_a3_s0_maptbl[DDI_OSC_LTPS_COMP1], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_osc_94_5m_ltps_comp1, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_OSC_96_5M_LTPS_COMP1, 0);


static u8 HUBBLE1_A3_S0_OSC_96_5M_LTPS_COMP2[] = {
	0xB7,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x70, 0x30, 0x18, 0x1C,
	0x00, 0x00, 0x18, 0x1C, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00
};

static DEFINE_PKTUI(hubble1_a3_s0_osc_94_5m_ltps_comp2, &hubble1_a3_s0_maptbl[DDI_OSC_LTPS_COMP2], 1);
static DEFINE_VARIABLE_PACKET(hubble1_a3_s0_osc_94_5m_ltps_comp2, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_OSC_96_5M_LTPS_COMP2, 0);

static void *hubble1_a3_s0_osc_96_5m_dynamic_ffc_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_osc_96_5m_ffc),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
};

static void *hubble1_a3_s0_osc_94_5m_ltps_comp_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_osc_94_5m_ltps_comp1),
	&PKTINFO(hubble1_a3_s0_osc_94_5m_ltps_comp2),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_dynamic_ffc_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_ffc),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
};
#endif

#ifdef CONFIG_SUPPORT_DSU
static void *hubble1_a3_s0_dsu_mode_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_dsc),
	&PKTINFO(hubble1_a3_s0_pps),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
	&PKTINFO(hubble1_a3_s0_caset),
	&PKTINFO(hubble1_a3_s0_paset),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_scaler),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};
#endif

static void *hubble1_a3_s0_mcd_on_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_mcd_on_00),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&PKTINFO(hubble1_a3_s0_mcd_on_01),
	&PKTINFO(hubble1_a3_s0_mcd_on_02),
	&PKTINFO(hubble1_a3_s0_mcd_on_03),
	&PKTINFO(hubble1_a3_s0_mcd_on_04),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&DLYINFO(hubble1_a3_s0_wait_100msec),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_mcd_off_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_mcd_off_00),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&PKTINFO(hubble1_a3_s0_mcd_off_01),
	&PKTINFO(hubble1_a3_s0_mcd_off_02),
	&PKTINFO(hubble1_a3_s0_mcd_off_03),
	&PKTINFO(hubble1_a3_s0_mcd_off_04),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&DLYINFO(hubble1_a3_s0_wait_100msec),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_mcd_rs_on_cmdtbl[] = {
	&PKTINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_display_off),
	&PKTINFO(hubble1_a3_s0_level1_key_disable),
	&PKTINFO(hubble1_a3_s0_mcd_rs_on_01),
	&PKTINFO(hubble1_a3_s0_mcd_rs_on_02),
	&PKTINFO(hubble1_a3_s0_mcd_rs_on_03),
	&PKTINFO(hubble1_a3_s0_mcd_rs_on_04),
	&PKTINFO(hubble1_a3_s0_mcd_rs_on_05),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&PKTINFO(hubble1_a3_s0_mcd_rs_on_06),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&PKTINFO(hubble1_a3_s0_mcd_rs_on_07),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&PKTINFO(hubble1_a3_s0_mcd_rs_on_08),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&PKTINFO(hubble1_a3_s0_mcd_rs_on_09),
};

static void *hubble1_a3_s0_mcd_rs_read_cmdtbl[] = {
	&PKTINFO(hubble1_a3_s0_mcd_rs_1_right_01),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	&PKTINFO(hubble1_a3_s0_mcd_rs_2_right_01),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	&PKTINFO(hubble1_a3_s0_mcd_rs_1_left_01),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	&PKTINFO(hubble1_a3_s0_mcd_rs_2_left_01),
	&DLYINFO(hubble1_a3_s0_wait_1msec),

	/* MCD_R ENABLE */
	&PKTINFO(hubble1_a3_s0_mcd_rs_right_02),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	/* MCD1_R */
	&PKTINFO(hubble1_a3_s0_mcd_rs_1_right_03),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	&PKTINFO(hubble1_a3_s0_mcd_rs_right_04),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	/* MCD2_R */
	&PKTINFO(hubble1_a3_s0_mcd_rs_2_right_03),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	&PKTINFO(hubble1_a3_s0_mcd_rs_right_04),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	/* MCD_R DISABLE */
	&PKTINFO(hubble1_a3_s0_mcd_rs_right_05),
	&DLYINFO(hubble1_a3_s0_wait_1msec),

	/* MCD_L ENABLE */
	&PKTINFO(hubble1_a3_s0_mcd_rs_left_02),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	/* MCD1_L */
	&PKTINFO(hubble1_a3_s0_mcd_rs_1_left_03),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	&PKTINFO(hubble1_a3_s0_mcd_rs_left_04),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	/* MCD2_L */
	&PKTINFO(hubble1_a3_s0_mcd_rs_2_left_03),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	&PKTINFO(hubble1_a3_s0_mcd_rs_left_04),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	/* MCD_L DISABLE */
	&PKTINFO(hubble1_a3_s0_mcd_rs_left_05),
	&DLYINFO(hubble1_a3_s0_wait_1msec),

	/* READ MCD RESISTANCE */
	&s6e3hab_restbl[RES_MCD_RESISTANCE],
};

static void *hubble1_a3_s0_mcd_rs_off_cmdtbl[] = {
	&PKTINFO(hubble1_a3_s0_mcd_rs_off_01),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&PKTINFO(hubble1_a3_s0_mcd_rs_off_02),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&PKTINFO(hubble1_a3_s0_mcd_rs_off_03),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&PKTINFO(hubble1_a3_s0_mcd_rs_off_04),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&PKTINFO(hubble1_a3_s0_mcd_rs_off_05),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&PKTINFO(hubble1_a3_s0_mcd_rs_off_06),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&PKTINFO(hubble1_a3_s0_mcd_rs_off_07),
	&DLYINFO(hubble1_a3_s0_wait_1_frame_in_60hz),
	&PKTINFO(hubble1_a3_s0_level3_key_disable),
	&PKTINFO(hubble1_a3_s0_level2_key_disable),
	&PKTINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_display_on),
	&PKTINFO(hubble1_a3_s0_level1_key_disable),
};

#ifdef CONFIG_SUPPORT_MST
static void *hubble1_a3_s0_mst_on_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mst_on_01),
	&PKTINFO(hubble1_a3_s0_mst_on_02),
	&PKTINFO(hubble1_a3_s0_mst_on_03),
	&PKTINFO(hubble1_a3_s0_mst_on_04),
	&PKTINFO(hubble1_a3_s0_mst_on_05),
	&PKTINFO(hubble1_a3_s0_mst_on_06),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_mst_off_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_mst_off_01),
	&PKTINFO(hubble1_a3_s0_mst_off_02),
	&PKTINFO(hubble1_a3_s0_mst_off_03),
	&PKTINFO(hubble1_a3_s0_mst_off_04),
	&PKTINFO(hubble1_a3_s0_mst_off_05),
	&PKTINFO(hubble1_a3_s0_mst_off_06),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};
#endif

#ifdef CONFIG_SUPPORT_CCD_TEST
static void *hubble1_a3_s0_ccd_test_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_ccd_test_enable),
	&DLYINFO(hubble1_a3_s0_wait_1msec),
	&s6e3hab_restbl[RES_CCD_STATE],
	&PKTINFO(hubble1_a3_s0_ccd_test_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};
#endif

#ifdef CONFIG_SUPPORT_DYNAMIC_HLPM
static void *hubble1_a3_s0_dynamic_hlpm_on_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_dynamic_hlpm_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_dynamic_hlpm_off_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_dynamic_hlpm_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};
#endif

#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
static void *hubble1_a3_s0_gct_enter_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&PKTINFO(hubble1_a3_s0_sw_reset),
	&DLYINFO(hubble1_a3_s0_wait_120msec),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_vddm_init),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&PKTINFO(hubble1_a3_s0_sleep_out),
	&DLYINFO(hubble1_a3_s0_wait_sleep_out_20msec),
	&PKTINFO(hubble1_a3_s0_gct_dsc),
	&PKTINFO(hubble1_a3_s0_gct_pps),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
};

static void *hubble1_a3_s0_gct_vddm_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_vddm_volt),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&DLYINFO(hubble1_a3_s0_wait_vddm_update),
};

static void *hubble1_a3_s0_gct_img_0_update_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_gram_chksum_start),
	&PKTINFO(hubble1_a3_s0_gram_inv_img_pattern_on),
	&DLYINFO(hubble1_a3_s0_wait_20msec_gram_img_update),
	&PKTINFO(hubble1_a3_s0_gram_img_pattern_off),
	&DLYINFO(hubble1_a3_s0_wait_20msec_gram_img_update),
	&PKTINFO(hubble1_a3_s0_gram_img_pattern_on),
	&DLYINFO(hubble1_a3_s0_wait_gram_img_update),
	&s6e3hab_restbl[RES_GRAM_CHECKSUM],
	&PKTINFO(hubble1_a3_s0_gram_img_pattern_on),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_gct_img_1_update_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_gram_img_pattern_off),
	&DLYINFO(hubble1_a3_s0_wait_20msec_gram_img_update),
	&PKTINFO(hubble1_a3_s0_gram_img_pattern_on),
	&DLYINFO(hubble1_a3_s0_wait_gram_img_update),
	&s6e3hab_restbl[RES_GRAM_CHECKSUM],
	&PKTINFO(hubble1_a3_s0_gram_img_pattern_off),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_gct_exit_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_vddm_orig),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
};
#endif

#ifdef CONFIG_SUPPORT_GRAYSPOT_TEST
static void *hubble1_a3_s0_grayspot_on_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_grayspot_on_01),
	&PKTINFO(hubble1_a3_s0_grayspot_on_02),
	&PKTINFO(hubble1_a3_s0_grayspot_on_03),
	&PKTINFO(hubble1_a3_s0_grayspot_on_04),
	&PKTINFO(hubble1_a3_s0_grayspot_on_05),
	&PKTINFO(hubble1_a3_s0_grayspot_on_06),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&DLYINFO(hubble1_a3_s0_wait_100msec),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};

static void *hubble1_a3_s0_grayspot_off_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&PKTINFO(hubble1_a3_s0_grayspot_off_01),
	&PKTINFO(hubble1_a3_s0_grayspot_off_02),
	&PKTINFO(hubble1_a3_s0_grayspot_off_03),
	&PKTINFO(hubble1_a3_s0_vgh_vint),
	&PKTINFO(hubble1_a3_s0_tset_mps_elvss),
	&PKTINFO(hubble1_a3_s0_elvss_temp),
	&PKTINFO(hubble1_a3_s0_gamma_update_enable),
	&DLYINFO(hubble1_a3_s0_wait_100msec),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};
#endif

#ifdef CONFIG_SUPPORT_ISC_DEFECT
static u8 HUBBLE1_A3_S0_ISC_IPOFF_SEQ_01[] = {
	0xF5, 0x80
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_ipoff_seq_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_IPOFF_SEQ_01, 0);

static u8 HUBBLE1_A3_S0_ISC_IPOFF_SEQ_02[] = {
	0xB7, 0x40
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_ipoff_seq_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_IPOFF_SEQ_02, 0);

/*
static u8 HUBBLE1_A3_S0_ISC_IPOFF_SEQ_03[] = {
	0xB0, 0x02
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_ipoff_seq_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_IPOFF_SEQ_03, 0);
*/

static u8 HUBBLE1_A3_S0_ISC_IPOFF_SEQ_04[] = {
	0xC2, 0xFF, 0xFF
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_ipoff_seq_04, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_IPOFF_SEQ_04, 0x02);

static u8 HUBBLE1_A3_S0_ISC_IPOFF_SEQ_05[] = {
	0xB8, 0x20
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_ipoff_seq_05, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_IPOFF_SEQ_05, 0);


static u8 HUBBLE1_A3_S0_ISC_IPOFF_SEQ_06[] = {
	0xEB, 0x56, 0x37
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_ipoff_seq_06, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_IPOFF_SEQ_06, 0);

/*
static u8 HUBBLE1_A3_S0_ISC_IPOFF_SEQ_07[] = {
	0xB0, 0x37
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_ipoff_seq_07, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_IPOFF_SEQ_07, 0);
*/

static u8 HUBBLE1_A3_S0_ISC_IPOFF_SEQ_08[] = {
	0xEB, 0xE4
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_ipoff_seq_08, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_IPOFF_SEQ_08, 0x37);

static u8 HUBBLE1_A3_S0_ISC_IPOFF_SEQ_09[] = {
	0xDD, 0x00
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_ipoff_seq_09, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_IPOFF_SEQ_09, 0);

/*
static u8 HUBBLE1_A3_S0_ISC_VDDM_SEQ_01[] = {
	0xB0, 0x09
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_vddm_seq_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_VDDM_SEQ_01, 0);
*/

static u8 HUBBLE1_A3_S0_ISC_VDDM_SEQ_02[] = {
	0xF4, 0x10
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_vddm_seq_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_VDDM_SEQ_02, 0x09);

static u8 HUBBLE1_A3_S0_ISC_VDDM_SEQ_03[] = {
	0xFE, 0xB0
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_vddm_seq_03, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_VDDM_SEQ_03, 0);

static u8 HUBBLE1_A3_S0_ISC_VDDM_SEQ_04[] = {
	0xFE, 0x30
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_vddm_seq_04, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_VDDM_SEQ_04, 0);

/*
static u8 HUBBLE1_A3_S0_ISC_ISON_SEQ_01[] = {
	0xB0, 0x03
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_ison_seq_01, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_ISON_SEQ_01, 0);
*/

static u8 HUBBLE1_A3_S0_ISC_ISON_SEQ_02[] = {
	0xF6, 0x43
};
static DEFINE_STATIC_PACKET(hubble1_a3_s0_isc_ison_seq_02, DSI_PKT_TYPE_WR, HUBBLE1_A3_S0_ISC_ISON_SEQ_02, 0x03);


static void *hubble1_a3_s0_isc_defect_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&PKTINFO(hubble1_a3_s0_isc_ipoff_seq_01),
	&PKTINFO(hubble1_a3_s0_isc_ipoff_seq_02),
	//&PKTINFO(hubble1_a3_s0_isc_ipoff_seq_03),
	&PKTINFO(hubble1_a3_s0_isc_ipoff_seq_04),
	&PKTINFO(hubble1_a3_s0_isc_ipoff_seq_05),
	&PKTINFO(hubble1_a3_s0_isc_ipoff_seq_06),
	//&PKTINFO(hubble1_a3_s0_isc_ipoff_seq_07),
	&PKTINFO(hubble1_a3_s0_isc_ipoff_seq_08),
	&PKTINFO(hubble1_a3_s0_isc_ipoff_seq_09),
	//&PKTINFO(hubble1_a3_s0_isc_vddm_seq_01),
	&PKTINFO(hubble1_a3_s0_isc_vddm_seq_02),
	&PKTINFO(hubble1_a3_s0_isc_vddm_seq_03),
	&PKTINFO(hubble1_a3_s0_isc_vddm_seq_04),
	//&PKTINFO(hubble1_a3_s0_isc_ison_seq_01),
	&PKTINFO(hubble1_a3_s0_isc_ison_seq_02),
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};
#endif

#ifdef CONFIG_SUPPORT_DDI_CMDLOG
static void *hubble1_a3_s0_cmdlog_dump_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&s6e3hab_dmptbl[DUMP_CMDLOG],
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
};
#endif

static void *hubble1_a3_s0_dump_cmdtbl[] = {
	&KEYINFO(hubble1_a3_s0_level1_key_enable),
	&KEYINFO(hubble1_a3_s0_level2_key_enable),
	&KEYINFO(hubble1_a3_s0_level3_key_enable),
	&s6e3hab_dmptbl[DUMP_RDDPM],
	&s6e3hab_dmptbl[DUMP_RDDSM],
	&s6e3hab_dmptbl[DUMP_ERR],
	&s6e3hab_dmptbl[DUMP_ERR_FG],
	&s6e3hab_dmptbl[DUMP_DSI_ERR],
	&s6e3hab_dmptbl[DUMP_SELF_DIAG],
	&KEYINFO(hubble1_a3_s0_level3_key_disable),
	&KEYINFO(hubble1_a3_s0_level2_key_disable),
	&KEYINFO(hubble1_a3_s0_level1_key_disable),
};

static void *hubble1_a3_s0_dummy_cmdtbl[] = {
	NULL,
};

static struct seqinfo hubble1_a3_s0_preliminary_osc_96_5m_seqtbl[MAX_PANEL_SEQ] = {
	[PANEL_INIT_SEQ] = SEQINFO_INIT("init-seq", hubble1_a3_s0_preliminary_osc_96_5m_init_cmdtbl),
	[PANEL_RES_INIT_SEQ] = SEQINFO_INIT("resource-init-seq", hubble1_a3_s0_res_init_cmdtbl),
#ifdef CONFIG_SUPPORT_DIM_FLASH
	[PANEL_DIM_FLASH_RES_INIT_SEQ] = SEQINFO_INIT("dim-flash-resource-init-seq", hubble1_a3_s0_preliminary_dim_flash_res_init_cmdtbl),
#endif
	[PANEL_SET_BL_SEQ] = SEQINFO_INIT("set-bl-seq", hubble1_a3_s0_set_bl_cmdtbl),
#ifdef CONFIG_SUPPORT_HMD
	[PANEL_HMD_ON_SEQ] = SEQINFO_INIT("hmd-on-seq", hubble1_a3_s0_hmd_on_cmdtbl),
	[PANEL_HMD_OFF_SEQ] = SEQINFO_INIT("hmd-off-seq", hubble1_a3_s0_hmd_off_cmdtbl),
	[PANEL_HMD_BL_SEQ] = SEQINFO_INIT("hmd-bl-seq", hubble1_a3_s0_hmd_bl_cmdtbl),
#endif /* CONFIG_SUPPORT_HMD */
	[PANEL_DISPLAY_ON_SEQ] = SEQINFO_INIT("display-on-seq", hubble1_a3_s0_display_on_cmdtbl),
	[PANEL_DISPLAY_OFF_SEQ] = SEQINFO_INIT("display-off-seq", hubble1_a3_s0_display_off_cmdtbl),
	[PANEL_EXIT_SEQ] = SEQINFO_INIT("exit-seq", hubble1_a3_s0_exit_cmdtbl),
	[PANEL_ALPM_ENTER_SEQ] = SEQINFO_INIT("alpm-enter-seq", hubble1_a3_s0_alpm_enter_cmdtbl),
	[PANEL_ALPM_DELAY_SEQ] = SEQINFO_INIT("alpm-enter-delay-seq", hubble1_a3_s0_alpm_enter_delay_cmdtbl),
	[PANEL_ALPM_EXIT_SEQ] = SEQINFO_INIT("alpm-exit-seq", hubble1_a3_s0_alpm_exit_cmdtbl),
#ifdef CONFIG_SUPPORT_DSU
	[PANEL_DSU_SEQ] = SEQINFO_INIT("dsu-mode-seq", hubble1_a3_s0_dsu_mode_cmdtbl),
#endif
	[PANEL_FPS_SEQ] = SEQINFO_INIT("set-fps-seq", hubble1_a3_s0_preliminary_set_fps_cmdtbl),
#if defined(CONFIG_PANEL_DISPLAY_MODE)
	[PANEL_DISPLAY_MODE_SEQ] = SEQINFO_INIT("display-mode-seq", hubble1_a3_s0_preliminary_display_mode_cmdtbl),
#endif
	[PANEL_MCD_ON_SEQ] = SEQINFO_INIT("mcd-on-seq", hubble1_a3_s0_mcd_on_cmdtbl),
	[PANEL_MCD_OFF_SEQ] = SEQINFO_INIT("mcd-off-seq", hubble1_a3_s0_mcd_off_cmdtbl),
	[PANEL_MCD_RS_ON_SEQ] = SEQINFO_INIT("mcd-rs-on-seq", hubble1_a3_s0_mcd_rs_on_cmdtbl),
	[PANEL_MCD_RS_OFF_SEQ] = SEQINFO_INIT("mcd-rs-off-seq", hubble1_a3_s0_mcd_rs_off_cmdtbl),
	[PANEL_MCD_RS_READ_SEQ] = SEQINFO_INIT("mcd-rs-read-seq", hubble1_a3_s0_mcd_rs_read_cmdtbl),
#ifdef CONFIG_SUPPORT_MST
	[PANEL_MST_ON_SEQ] = SEQINFO_INIT("mst-on-seq", hubble1_a3_s0_mst_on_cmdtbl),
	[PANEL_MST_OFF_SEQ] = SEQINFO_INIT("mst-off-seq", hubble1_a3_s0_mst_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
	[PANEL_GCT_ENTER_SEQ] = SEQINFO_INIT("gct-enter-seq", hubble1_a3_s0_gct_enter_cmdtbl),
	[PANEL_GCT_VDDM_SEQ] = SEQINFO_INIT("gct-vddm-seq", hubble1_a3_s0_gct_vddm_cmdtbl),
	[PANEL_GCT_IMG_0_UPDATE_SEQ] = SEQINFO_INIT("gct-img-0-update-seq", hubble1_a3_s0_gct_img_0_update_cmdtbl),
	[PANEL_GCT_IMG_1_UPDATE_SEQ] = SEQINFO_INIT("gct-img-1-update-seq", hubble1_a3_s0_gct_img_1_update_cmdtbl),
	[PANEL_GCT_EXIT_SEQ] = SEQINFO_INIT("gct-exit-seq", hubble1_a3_s0_gct_exit_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_CCD_TEST
	[PANEL_CCD_TEST_SEQ] = SEQINFO_INIT("ccd-test-seq", hubble1_a3_s0_ccd_test_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_DYNAMIC_HLPM
	[PANEL_DYNAMIC_HLPM_ON_SEQ] = SEQINFO_INIT("dynamic-hlpm-on-seq", hubble1_a3_s0_dynamic_hlpm_on_cmdtbl),
	[PANEL_DYNAMIC_HLPM_OFF_SEQ] = SEQINFO_INIT("dynamic-hlpm-off-seq", hubble1_a3_s0_dynamic_hlpm_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_GRAYSPOT_TEST
	[PANEL_GRAYSPOT_ON_SEQ] = SEQINFO_INIT("grayspot-on-seq", hubble1_a3_s0_grayspot_on_cmdtbl),
	[PANEL_GRAYSPOT_OFF_SEQ] = SEQINFO_INIT("grayspot-off-seq", hubble1_a3_s0_grayspot_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_ISC_DEFECT
	[PANEL_CHECK_ISC_DEFECT_SEQ] = SEQINFO_INIT("isc-defect-seq", hubble1_a3_s0_isc_defect_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	[PANEL_MAFPC_IMG_SEQ] = SEQINFO_INIT("mafpc-img-seq", hubble1_a3_s0_mafpc_image_cmdtbl),
	[PANEL_MAFPC_ON_SEQ] = SEQINFO_INIT("mafpc-on-seq", hubble1_a3_s0_mafpc_on_cmdtbl),
	[PANEL_MAFPC_OFF_SEQ] = SEQINFO_INIT("mafpc-off-seq", hubble1_a3_s0_mafpc_off_cmdtbl),
	[PANEL_MAFPC_CHECKSUM_SEQ] = SEQINFO_INIT("mafpc-check-seq", hubble1_a3_s0_mafpc_check_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_ISC_TUNE_TEST
	[PANEL_ISC_THRESHOLD_SEQ] = SEQINFO_INIT("isc-threshold-seq", hubble1_a3_s0_isc_threshold_cmdtbl),
	[PANEL_STM_TUNE_SEQ] = SEQINFO_INIT("stm-tune-seq", hubble1_a3_s0_stm_tune_cmdtbl),
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	[PANEL_DYNAMIC_FFC_SEQ] = SEQINFO_INIT("dynamic-ffc-seq", hubble1_a3_s0_osc_96_5m_dynamic_ffc_cmdtbl),
	[PANEL_COMP_LTPS_SEQ] = SEQINFO_INIT("df-ltps-comp-seq", hubble1_a3_s0_osc_94_5m_ltps_comp_cmdtbl),
#endif
	[PANEL_GAMMA_INTER_CONTROL_SEQ] = SEQINFO_INIT("gamma-control-seq", hubble1_a3_s0_gamma_inter_control_cmdtbl),
	[PANEL_CHECK_CONDITION_SEQ] = SEQINFO_INIT("check-condition-seq", hubble1_a3_s0_check_condition_cmdtbl),
	[PANEL_DUMP_SEQ] = SEQINFO_INIT("dump-seq", hubble1_a3_s0_dump_cmdtbl),
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
	[PANEL_CMDLOG_DUMP_SEQ] = SEQINFO_INIT("cmdlog-dump-seq", hubble1_a3_s0_cmdlog_dump_cmdtbl),
#endif
	[PANEL_DUMMY_SEQ] = SEQINFO_INIT("dummy-seq", hubble1_a3_s0_dummy_cmdtbl),
};

static struct seqinfo hubble1_a3_s0_preliminary_seqtbl[MAX_PANEL_SEQ] = {
	[PANEL_INIT_SEQ] = SEQINFO_INIT("init-seq", hubble1_a3_s0_preliminary_init_cmdtbl),
	[PANEL_RES_INIT_SEQ] = SEQINFO_INIT("resource-init-seq", hubble1_a3_s0_res_init_cmdtbl),
#ifdef CONFIG_SUPPORT_DIM_FLASH
	[PANEL_DIM_FLASH_RES_INIT_SEQ] = SEQINFO_INIT("dim-flash-resource-init-seq", hubble1_a3_s0_preliminary_dim_flash_res_init_cmdtbl),
#endif
	[PANEL_SET_BL_SEQ] = SEQINFO_INIT("set-bl-seq", hubble1_a3_s0_set_bl_cmdtbl),
#ifdef CONFIG_SUPPORT_HMD
	[PANEL_HMD_ON_SEQ] = SEQINFO_INIT("hmd-on-seq", hubble1_a3_s0_hmd_on_cmdtbl),
	[PANEL_HMD_OFF_SEQ] = SEQINFO_INIT("hmd-off-seq", hubble1_a3_s0_hmd_off_cmdtbl),
	[PANEL_HMD_BL_SEQ] = SEQINFO_INIT("hmd-bl-seq", hubble1_a3_s0_hmd_bl_cmdtbl),
#endif /* CONFIG_SUPPORT_HMD */
	[PANEL_DISPLAY_ON_SEQ] = SEQINFO_INIT("display-on-seq", hubble1_a3_s0_display_on_cmdtbl),
	[PANEL_DISPLAY_OFF_SEQ] = SEQINFO_INIT("display-off-seq", hubble1_a3_s0_display_off_cmdtbl),
	[PANEL_EXIT_SEQ] = SEQINFO_INIT("exit-seq", hubble1_a3_s0_exit_cmdtbl),
	[PANEL_ALPM_ENTER_SEQ] = SEQINFO_INIT("alpm-enter-seq", hubble1_a3_s0_alpm_enter_cmdtbl),
	[PANEL_ALPM_DELAY_SEQ] = SEQINFO_INIT("alpm-enter-delay-seq", hubble1_a3_s0_alpm_enter_delay_cmdtbl),
	[PANEL_ALPM_EXIT_SEQ] = SEQINFO_INIT("alpm-exit-seq", hubble1_a3_s0_alpm_exit_cmdtbl),
#ifdef CONFIG_SUPPORT_DSU
	[PANEL_DSU_SEQ] = SEQINFO_INIT("dsu-mode-seq", hubble1_a3_s0_dsu_mode_cmdtbl),
#endif
	[PANEL_FPS_SEQ] = SEQINFO_INIT("set-fps-seq", hubble1_a3_s0_preliminary_set_fps_cmdtbl),
#if defined(CONFIG_PANEL_DISPLAY_MODE)
	[PANEL_DISPLAY_MODE_SEQ] = SEQINFO_INIT("display-mode-seq", hubble1_a3_s0_preliminary_display_mode_cmdtbl),
#endif
	[PANEL_MCD_ON_SEQ] = SEQINFO_INIT("mcd-on-seq", hubble1_a3_s0_mcd_on_cmdtbl),
	[PANEL_MCD_OFF_SEQ] = SEQINFO_INIT("mcd-off-seq", hubble1_a3_s0_mcd_off_cmdtbl),
	[PANEL_MCD_RS_ON_SEQ] = SEQINFO_INIT("mcd-rs-on-seq", hubble1_a3_s0_mcd_rs_on_cmdtbl),
	[PANEL_MCD_RS_OFF_SEQ] = SEQINFO_INIT("mcd-rs-off-seq", hubble1_a3_s0_mcd_rs_off_cmdtbl),
	[PANEL_MCD_RS_READ_SEQ] = SEQINFO_INIT("mcd-rs-read-seq", hubble1_a3_s0_mcd_rs_read_cmdtbl),
#ifdef CONFIG_SUPPORT_MST
	[PANEL_MST_ON_SEQ] = SEQINFO_INIT("mst-on-seq", hubble1_a3_s0_mst_on_cmdtbl),
	[PANEL_MST_OFF_SEQ] = SEQINFO_INIT("mst-off-seq", hubble1_a3_s0_mst_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
	[PANEL_GCT_ENTER_SEQ] = SEQINFO_INIT("gct-enter-seq", hubble1_a3_s0_gct_enter_cmdtbl),
	[PANEL_GCT_VDDM_SEQ] = SEQINFO_INIT("gct-vddm-seq", hubble1_a3_s0_gct_vddm_cmdtbl),
	[PANEL_GCT_IMG_0_UPDATE_SEQ] = SEQINFO_INIT("gct-img-0-update-seq", hubble1_a3_s0_gct_img_0_update_cmdtbl),
	[PANEL_GCT_IMG_1_UPDATE_SEQ] = SEQINFO_INIT("gct-img-1-update-seq", hubble1_a3_s0_gct_img_1_update_cmdtbl),
	[PANEL_GCT_EXIT_SEQ] = SEQINFO_INIT("gct-exit-seq", hubble1_a3_s0_gct_exit_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_CCD_TEST
	[PANEL_CCD_TEST_SEQ] = SEQINFO_INIT("ccd-test-seq", hubble1_a3_s0_ccd_test_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_DYNAMIC_HLPM
	[PANEL_DYNAMIC_HLPM_ON_SEQ] = SEQINFO_INIT("dynamic-hlpm-on-seq", hubble1_a3_s0_dynamic_hlpm_on_cmdtbl),
	[PANEL_DYNAMIC_HLPM_OFF_SEQ] = SEQINFO_INIT("dynamic-hlpm-off-seq", hubble1_a3_s0_dynamic_hlpm_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_GRAYSPOT_TEST
	[PANEL_GRAYSPOT_ON_SEQ] = SEQINFO_INIT("grayspot-on-seq", hubble1_a3_s0_grayspot_on_cmdtbl),
	[PANEL_GRAYSPOT_OFF_SEQ] = SEQINFO_INIT("grayspot-off-seq", hubble1_a3_s0_grayspot_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_ISC_DEFECT
	[PANEL_CHECK_ISC_DEFECT_SEQ] = SEQINFO_INIT("isc-defect-seq", hubble1_a3_s0_isc_defect_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	[PANEL_MAFPC_IMG_SEQ] = SEQINFO_INIT("mafpc-img-seq", hubble1_a3_s0_mafpc_image_cmdtbl),
	[PANEL_MAFPC_ON_SEQ] = SEQINFO_INIT("mafpc-on-seq", hubble1_a3_s0_mafpc_on_cmdtbl),
	[PANEL_MAFPC_OFF_SEQ] = SEQINFO_INIT("mafpc-off-seq", hubble1_a3_s0_mafpc_off_cmdtbl),
	[PANEL_MAFPC_CHECKSUM_SEQ] = SEQINFO_INIT("mafpc-check-seq", hubble1_a3_s0_mafpc_check_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_ISC_TUNE_TEST
	[PANEL_ISC_THRESHOLD_SEQ] = SEQINFO_INIT("isc-threshold-seq", hubble1_a3_s0_isc_threshold_cmdtbl),
	[PANEL_STM_TUNE_SEQ] = SEQINFO_INIT("stm-tune-seq", hubble1_a3_s0_stm_tune_cmdtbl),
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	[PANEL_DYNAMIC_FFC_SEQ] = SEQINFO_INIT("dynamic-ffc-seq", hubble1_a3_s0_dynamic_ffc_cmdtbl),
#endif
	[PANEL_GAMMA_INTER_CONTROL_SEQ] = SEQINFO_INIT("gamma-control-seq", hubble1_a3_s0_gamma_inter_control_cmdtbl),
	[PANEL_CHECK_CONDITION_SEQ] = SEQINFO_INIT("check-condition-seq", hubble1_a3_s0_check_condition_cmdtbl),
	[PANEL_DUMP_SEQ] = SEQINFO_INIT("dump-seq", hubble1_a3_s0_dump_cmdtbl),
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
	[PANEL_CMDLOG_DUMP_SEQ] = SEQINFO_INIT("cmdlog-dump-seq", hubble1_a3_s0_cmdlog_dump_cmdtbl),
#endif
	[PANEL_DUMMY_SEQ] = SEQINFO_INIT("dummy-seq", hubble1_a3_s0_dummy_cmdtbl),
};

static struct seqinfo hubble1_a3_s0_osc_96_5m_seqtbl[MAX_PANEL_SEQ] = {
	[PANEL_INIT_SEQ] = SEQINFO_INIT("init-seq", hubble1_a3_s0_osc_96_5m_init_cmdtbl),
	[PANEL_RES_INIT_SEQ] = SEQINFO_INIT("resource-init-seq", hubble1_a3_s0_res_init_cmdtbl),
#ifdef CONFIG_SUPPORT_DIM_FLASH
	[PANEL_DIM_FLASH_RES_INIT_SEQ] = SEQINFO_INIT("dim-flash-resource-init-seq", hubble1_a3_s0_dim_flash_res_init_cmdtbl),
#endif
	[PANEL_SET_BL_SEQ] = SEQINFO_INIT("set-bl-seq", hubble1_a3_s0_set_bl_cmdtbl),
#ifdef CONFIG_SUPPORT_HMD
	[PANEL_HMD_ON_SEQ] = SEQINFO_INIT("hmd-on-seq", hubble1_a3_s0_hmd_on_cmdtbl),
	[PANEL_HMD_OFF_SEQ] = SEQINFO_INIT("hmd-off-seq", hubble1_a3_s0_hmd_off_cmdtbl),
	[PANEL_HMD_BL_SEQ] = SEQINFO_INIT("hmd-bl-seq", hubble1_a3_s0_hmd_bl_cmdtbl),
#endif /* CONFIG_SUPPORT_HMD */
	[PANEL_DISPLAY_ON_SEQ] = SEQINFO_INIT("display-on-seq", hubble1_a3_s0_display_on_cmdtbl),
	[PANEL_DISPLAY_OFF_SEQ] = SEQINFO_INIT("display-off-seq", hubble1_a3_s0_display_off_cmdtbl),
	[PANEL_EXIT_SEQ] = SEQINFO_INIT("exit-seq", hubble1_a3_s0_exit_cmdtbl),
	[PANEL_ALPM_ENTER_SEQ] = SEQINFO_INIT("alpm-enter-seq", hubble1_a3_s0_alpm_enter_cmdtbl),
	[PANEL_ALPM_DELAY_SEQ] = SEQINFO_INIT("alpm-enter-delay-seq", hubble1_a3_s0_alpm_enter_delay_cmdtbl),
	[PANEL_ALPM_EXIT_SEQ] = SEQINFO_INIT("alpm-exit-seq", hubble1_a3_s0_alpm_exit_cmdtbl),
#ifdef CONFIG_SUPPORT_DSU
	[PANEL_DSU_SEQ] = SEQINFO_INIT("dsu-mode-seq", hubble1_a3_s0_dsu_mode_cmdtbl),
#endif
	[PANEL_FPS_SEQ] = SEQINFO_INIT("set-fps-seq", hubble1_a3_s0_osc_96_5m_set_fps_cmdtbl),
#if defined(CONFIG_PANEL_DISPLAY_MODE)
	[PANEL_DISPLAY_MODE_SEQ] = SEQINFO_INIT("display-mode-seq", hubble1_a3_s0_osc_96_5m_display_mode_cmdtbl),
#endif
	[PANEL_MCD_ON_SEQ] = SEQINFO_INIT("mcd-on-seq", hubble1_a3_s0_mcd_on_cmdtbl),
	[PANEL_MCD_OFF_SEQ] = SEQINFO_INIT("mcd-off-seq", hubble1_a3_s0_mcd_off_cmdtbl),
	[PANEL_MCD_RS_ON_SEQ] = SEQINFO_INIT("mcd-rs-on-seq", hubble1_a3_s0_mcd_rs_on_cmdtbl),
	[PANEL_MCD_RS_OFF_SEQ] = SEQINFO_INIT("mcd-rs-off-seq", hubble1_a3_s0_mcd_rs_off_cmdtbl),
	[PANEL_MCD_RS_READ_SEQ] = SEQINFO_INIT("mcd-rs-read-seq", hubble1_a3_s0_mcd_rs_read_cmdtbl),
#ifdef CONFIG_SUPPORT_MST
	[PANEL_MST_ON_SEQ] = SEQINFO_INIT("mst-on-seq", hubble1_a3_s0_mst_on_cmdtbl),
	[PANEL_MST_OFF_SEQ] = SEQINFO_INIT("mst-off-seq", hubble1_a3_s0_mst_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
	[PANEL_GCT_ENTER_SEQ] = SEQINFO_INIT("gct-enter-seq", hubble1_a3_s0_gct_enter_cmdtbl),
	[PANEL_GCT_VDDM_SEQ] = SEQINFO_INIT("gct-vddm-seq", hubble1_a3_s0_gct_vddm_cmdtbl),
	[PANEL_GCT_IMG_0_UPDATE_SEQ] = SEQINFO_INIT("gct-img-0-update-seq", hubble1_a3_s0_gct_img_0_update_cmdtbl),
	[PANEL_GCT_IMG_1_UPDATE_SEQ] = SEQINFO_INIT("gct-img-1-update-seq", hubble1_a3_s0_gct_img_1_update_cmdtbl),
	[PANEL_GCT_EXIT_SEQ] = SEQINFO_INIT("gct-exit-seq", hubble1_a3_s0_gct_exit_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_CCD_TEST
	[PANEL_CCD_TEST_SEQ] = SEQINFO_INIT("ccd-test-seq", hubble1_a3_s0_ccd_test_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_DYNAMIC_HLPM
	[PANEL_DYNAMIC_HLPM_ON_SEQ] = SEQINFO_INIT("dynamic-hlpm-on-seq", hubble1_a3_s0_dynamic_hlpm_on_cmdtbl),
	[PANEL_DYNAMIC_HLPM_OFF_SEQ] = SEQINFO_INIT("dynamic-hlpm-off-seq", hubble1_a3_s0_dynamic_hlpm_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_GRAYSPOT_TEST
	[PANEL_GRAYSPOT_ON_SEQ] = SEQINFO_INIT("grayspot-on-seq", hubble1_a3_s0_grayspot_on_cmdtbl),
	[PANEL_GRAYSPOT_OFF_SEQ] = SEQINFO_INIT("grayspot-off-seq", hubble1_a3_s0_grayspot_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_ISC_DEFECT
	[PANEL_CHECK_ISC_DEFECT_SEQ] = SEQINFO_INIT("isc-defect-seq", hubble1_a3_s0_isc_defect_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	[PANEL_MAFPC_IMG_SEQ] = SEQINFO_INIT("mafpc-img-seq", hubble1_a3_s0_mafpc_image_cmdtbl),
	[PANEL_MAFPC_ON_SEQ] = SEQINFO_INIT("mafpc-on-seq", hubble1_a3_s0_mafpc_on_cmdtbl),
	[PANEL_MAFPC_OFF_SEQ] = SEQINFO_INIT("mafpc-off-seq", hubble1_a3_s0_mafpc_off_cmdtbl),
	[PANEL_MAFPC_CHECKSUM_SEQ] = SEQINFO_INIT("mafpc-check-seq", hubble1_a3_s0_mafpc_check_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_ISC_TUNE_TEST
	[PANEL_ISC_THRESHOLD_SEQ] = SEQINFO_INIT("isc-threshold-seq", hubble1_a3_s0_isc_threshold_cmdtbl),
	[PANEL_STM_TUNE_SEQ] = SEQINFO_INIT("stm-tune-seq", hubble1_a3_s0_stm_tune_cmdtbl),
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	[PANEL_DYNAMIC_FFC_SEQ] = SEQINFO_INIT("dynamic-ffc-seq", hubble1_a3_s0_osc_96_5m_dynamic_ffc_cmdtbl),
	[PANEL_COMP_LTPS_SEQ] = SEQINFO_INIT("df-ltps-comp-seq", hubble1_a3_s0_osc_94_5m_ltps_comp_cmdtbl),
#endif
	[PANEL_GAMMA_INTER_CONTROL_SEQ] = SEQINFO_INIT("gamma-control-seq", hubble1_a3_s0_gamma_inter_control_cmdtbl),
	[PANEL_CHECK_CONDITION_SEQ] = SEQINFO_INIT("check-condition-seq", hubble1_a3_s0_check_condition_cmdtbl),
	[PANEL_DUMP_SEQ] = SEQINFO_INIT("dump-seq", hubble1_a3_s0_dump_cmdtbl),
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
	[PANEL_CMDLOG_DUMP_SEQ] = SEQINFO_INIT("cmdlog-dump-seq", hubble1_a3_s0_cmdlog_dump_cmdtbl),
#endif
	[PANEL_DIA_ONOFF_SEQ] = SEQINFO_INIT("dia-onoff-seq", hubble1_a3_s0_dia_onoff_cmdtbl),
	[PANEL_DUMMY_SEQ] = SEQINFO_INIT("dummy-seq", hubble1_a3_s0_dummy_cmdtbl),
};

static struct seqinfo hubble1_a3_s0_seqtbl[MAX_PANEL_SEQ] = {
	[PANEL_INIT_SEQ] = SEQINFO_INIT("init-seq", hubble1_a3_s0_init_cmdtbl),
	[PANEL_RES_INIT_SEQ] = SEQINFO_INIT("resource-init-seq", hubble1_a3_s0_res_init_cmdtbl),
#ifdef CONFIG_SUPPORT_DIM_FLASH
	[PANEL_DIM_FLASH_RES_INIT_SEQ] = SEQINFO_INIT("dim-flash-resource-init-seq", hubble1_a3_s0_dim_flash_res_init_cmdtbl),
#endif
	[PANEL_SET_BL_SEQ] = SEQINFO_INIT("set-bl-seq", hubble1_a3_s0_set_bl_cmdtbl),
#ifdef CONFIG_SUPPORT_HMD
	[PANEL_HMD_ON_SEQ] = SEQINFO_INIT("hmd-on-seq", hubble1_a3_s0_hmd_on_cmdtbl),
	[PANEL_HMD_OFF_SEQ] = SEQINFO_INIT("hmd-off-seq", hubble1_a3_s0_hmd_off_cmdtbl),
	[PANEL_HMD_BL_SEQ] = SEQINFO_INIT("hmd-bl-seq", hubble1_a3_s0_hmd_bl_cmdtbl),
#endif /* CONFIG_SUPPORT_HMD */
	[PANEL_DISPLAY_ON_SEQ] = SEQINFO_INIT("display-on-seq", hubble1_a3_s0_display_on_cmdtbl),
	[PANEL_DISPLAY_OFF_SEQ] = SEQINFO_INIT("display-off-seq", hubble1_a3_s0_display_off_cmdtbl),
	[PANEL_EXIT_SEQ] = SEQINFO_INIT("exit-seq", hubble1_a3_s0_exit_cmdtbl),
	[PANEL_ALPM_ENTER_SEQ] = SEQINFO_INIT("alpm-enter-seq", hubble1_a3_s0_alpm_enter_cmdtbl),
	[PANEL_ALPM_DELAY_SEQ] = SEQINFO_INIT("alpm-enter-delay-seq", hubble1_a3_s0_alpm_enter_delay_cmdtbl),
	[PANEL_ALPM_EXIT_SEQ] = SEQINFO_INIT("alpm-exit-seq", hubble1_a3_s0_alpm_exit_cmdtbl),
#ifdef CONFIG_SUPPORT_DSU
	[PANEL_DSU_SEQ] = SEQINFO_INIT("dsu-mode-seq", hubble1_a3_s0_dsu_mode_cmdtbl),
#endif
	[PANEL_FPS_SEQ] = SEQINFO_INIT("set-fps-seq", hubble1_a3_s0_osc_86_4m_set_fps_cmdtbl),
#if defined(CONFIG_PANEL_DISPLAY_MODE)
	[PANEL_DISPLAY_MODE_SEQ] = SEQINFO_INIT("display-mode-seq", hubble1_a3_s0_osc_86_4m_display_mode_cmdtbl),
#endif
	[PANEL_MCD_ON_SEQ] = SEQINFO_INIT("mcd-on-seq", hubble1_a3_s0_mcd_on_cmdtbl),
	[PANEL_MCD_OFF_SEQ] = SEQINFO_INIT("mcd-off-seq", hubble1_a3_s0_mcd_off_cmdtbl),
	[PANEL_MCD_RS_ON_SEQ] = SEQINFO_INIT("mcd-rs-on-seq", hubble1_a3_s0_mcd_rs_on_cmdtbl),
	[PANEL_MCD_RS_OFF_SEQ] = SEQINFO_INIT("mcd-rs-off-seq", hubble1_a3_s0_mcd_rs_off_cmdtbl),
	[PANEL_MCD_RS_READ_SEQ] = SEQINFO_INIT("mcd-rs-read-seq", hubble1_a3_s0_mcd_rs_read_cmdtbl),
#ifdef CONFIG_SUPPORT_MST
	[PANEL_MST_ON_SEQ] = SEQINFO_INIT("mst-on-seq", hubble1_a3_s0_mst_on_cmdtbl),
	[PANEL_MST_OFF_SEQ] = SEQINFO_INIT("mst-off-seq", hubble1_a3_s0_mst_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
	[PANEL_GCT_ENTER_SEQ] = SEQINFO_INIT("gct-enter-seq", hubble1_a3_s0_gct_enter_cmdtbl),
	[PANEL_GCT_VDDM_SEQ] = SEQINFO_INIT("gct-vddm-seq", hubble1_a3_s0_gct_vddm_cmdtbl),
	[PANEL_GCT_IMG_0_UPDATE_SEQ] = SEQINFO_INIT("gct-img-0-update-seq", hubble1_a3_s0_gct_img_0_update_cmdtbl),
	[PANEL_GCT_IMG_1_UPDATE_SEQ] = SEQINFO_INIT("gct-img-1-update-seq", hubble1_a3_s0_gct_img_1_update_cmdtbl),
	[PANEL_GCT_EXIT_SEQ] = SEQINFO_INIT("gct-exit-seq", hubble1_a3_s0_gct_exit_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_CCD_TEST
	[PANEL_CCD_TEST_SEQ] = SEQINFO_INIT("ccd-test-seq", hubble1_a3_s0_ccd_test_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_DYNAMIC_HLPM
	[PANEL_DYNAMIC_HLPM_ON_SEQ] = SEQINFO_INIT("dynamic-hlpm-on-seq", hubble1_a3_s0_dynamic_hlpm_on_cmdtbl),
	[PANEL_DYNAMIC_HLPM_OFF_SEQ] = SEQINFO_INIT("dynamic-hlpm-off-seq", hubble1_a3_s0_dynamic_hlpm_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_GRAYSPOT_TEST
	[PANEL_GRAYSPOT_ON_SEQ] = SEQINFO_INIT("grayspot-on-seq", hubble1_a3_s0_grayspot_on_cmdtbl),
	[PANEL_GRAYSPOT_OFF_SEQ] = SEQINFO_INIT("grayspot-off-seq", hubble1_a3_s0_grayspot_off_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_ISC_DEFECT
	[PANEL_CHECK_ISC_DEFECT_SEQ] = SEQINFO_INIT("isc-defect-seq", hubble1_a3_s0_isc_defect_cmdtbl),
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	[PANEL_MAFPC_IMG_SEQ] = SEQINFO_INIT("mafpc-img-seq", hubble1_a3_s0_mafpc_image_cmdtbl),
	[PANEL_MAFPC_ON_SEQ] = SEQINFO_INIT("mafpc-on-seq", hubble1_a3_s0_mafpc_on_cmdtbl),
	[PANEL_MAFPC_OFF_SEQ] = SEQINFO_INIT("mafpc-off-seq", hubble1_a3_s0_mafpc_off_cmdtbl),
	[PANEL_MAFPC_CHECKSUM_SEQ] = SEQINFO_INIT("mafpc-check-seq", hubble1_a3_s0_mafpc_check_cmdtbl),
#endif

#ifdef CONFIG_SUPPORT_ISC_TUNE_TEST
	[PANEL_ISC_THRESHOLD_SEQ] = SEQINFO_INIT("isc-threshold-seq", hubble1_a3_s0_isc_threshold_cmdtbl),
	[PANEL_STM_TUNE_SEQ] = SEQINFO_INIT("stm-tune-seq", hubble1_a3_s0_stm_tune_cmdtbl),
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	[PANEL_DYNAMIC_FFC_SEQ] = SEQINFO_INIT("dynamic-ffc-seq", hubble1_a3_s0_dynamic_ffc_cmdtbl),
#endif
	[PANEL_GAMMA_INTER_CONTROL_SEQ] = SEQINFO_INIT("gamma-control-seq", hubble1_a3_s0_gamma_inter_control_cmdtbl),
	[PANEL_CHECK_CONDITION_SEQ] = SEQINFO_INIT("check-condition-seq", hubble1_a3_s0_check_condition_cmdtbl),
	[PANEL_DUMP_SEQ] = SEQINFO_INIT("dump-seq", hubble1_a3_s0_dump_cmdtbl),
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
	[PANEL_CMDLOG_DUMP_SEQ] = SEQINFO_INIT("cmdlog-dump-seq", hubble1_a3_s0_cmdlog_dump_cmdtbl),
#endif
	[PANEL_DIA_ONOFF_SEQ] = SEQINFO_INIT("dia-onoff-seq", hubble1_a3_s0_dia_onoff_cmdtbl),
	[PANEL_DUMMY_SEQ] = SEQINFO_INIT("dummy-seq", hubble1_a3_s0_dummy_cmdtbl),
};

#ifdef CONFIG_SUPPORT_POC_SPI
struct spi_data *s6e3hab_hubble1_a3_s0_spi_data_list[] = {
	&w25q80_spi_data,
	&mx25r4035_spi_data,
};
#endif

struct common_panel_info s6e3hab_hubble1_a3_s0_preliminary_osc_96_5m_panel_info = {
	.ldi_name = "s6e3hab",
	.name = "s6e3hab_hubble1_a3_s0_preliminary_osc_96_5m",
	.model = "AMB675TG01",
	.vendor = "SDC",
	.id = 0x810001,
	.rev = 0,
	.ddi_props = {
		.gpara = (DDI_SUPPORT_WRITE_GPARA | DDI_SUPPORT_POINT_GPARA),
		.err_fg_recovery = true,
		.support_vrr = true,
	},
#ifdef CONFIG_SUPPORT_DSU
	.mres = {
		.nr_resol = ARRAY_SIZE(s6e3hab_hubble_preliminary_resol),
		.resol = s6e3hab_hubble_preliminary_resol,
	},
#endif
#if defined(CONFIG_PANEL_DISPLAY_MODE)
	.common_panel_modes = &s6e3hab_hubble_preliminary_display_modes,
#endif
	.vrrtbl = s6e3hab_hubble_preliminary_vrrtbl,
	.nr_vrrtbl = ARRAY_SIZE(s6e3hab_hubble_preliminary_vrrtbl),
	.maptbl = hubble1_a3_s0_maptbl,
	.nr_maptbl = ARRAY_SIZE(hubble1_a3_s0_maptbl),
	.seqtbl = hubble1_a3_s0_preliminary_osc_96_5m_seqtbl,
	.nr_seqtbl = ARRAY_SIZE(hubble1_a3_s0_preliminary_osc_96_5m_seqtbl),
	.rditbl = s6e3hab_rditbl,
	.nr_rditbl = ARRAY_SIZE(s6e3hab_rditbl),
	.restbl = s6e3hab_restbl,
	.nr_restbl = ARRAY_SIZE(s6e3hab_restbl),
	.dumpinfo = s6e3hab_dmptbl,
	.nr_dumpinfo = ARRAY_SIZE(s6e3hab_dmptbl),
#ifdef CONFIG_EXYNOS_DECON_MDNIE_LITE
	.mdnie_tune = &s6e3hab_hubble1_a3_s0_mdnie_tune,
#endif
	.panel_dim_info = {
		[PANEL_BL_SUBDEV_TYPE_DISP] = &s6e3hab_hubble1_a3_s0_panel_dimming_info,
#ifdef CONFIG_SUPPORT_HMD
		[PANEL_BL_SUBDEV_TYPE_HMD] = &s6e3hab_hubble1_a3_s0_panel_hmd_dimming_info,
#endif
#ifdef CONFIG_SUPPORT_AOD_BL
		[PANEL_BL_SUBDEV_TYPE_AOD] = &s6e3hab_hubble1_a3_s0_panel_aod_dimming_info,
#endif
	},
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	.copr_data = &s6e3hab_hubble1_a3_s0_copr_data,
#endif
#ifdef CONFIG_EXTEND_LIVE_CLOCK
	.aod_tune = &s6e3hab_hubble1_aod,
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	.poc_data = &s6e3hab_hubble_preliminary_poc_data,
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
	.spi_data_tbl = s6e3hab_hubble1_a3_s0_spi_data_list,
	.nr_spi_data_tbl = ARRAY_SIZE(s6e3hab_hubble1_a3_s0_spi_data_list),
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	.df_freq_tbl = x1_dynamic_freq_set,
#endif
#ifdef CONFIG_SUPPORT_DISPLAY_PROFILER
	.profile_tune = &hab_profiler_tune,
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	.mafpc_info = &s6e3hab_hubble_mafpc,
#endif
};

struct common_panel_info s6e3hab_hubble1_a3_s0_preliminary_panel_info = {
	.ldi_name = "s6e3hab",
	.name = "s6e3hab_hubble1_a3_s0_preliminary",
	.model = "AMB675TG01",
	.vendor = "SDC",
	.id = 0x810041,
	.rev = 0,
	.ddi_props = {
		.gpara = (DDI_SUPPORT_WRITE_GPARA | DDI_SUPPORT_POINT_GPARA),
		.err_fg_recovery = true,
		.support_vrr = true,
	},
#ifdef CONFIG_SUPPORT_DSU
	.mres = {
		.nr_resol = ARRAY_SIZE(s6e3hab_hubble_preliminary_resol),
		.resol = s6e3hab_hubble_preliminary_resol,
	},
#endif
#if defined(CONFIG_PANEL_DISPLAY_MODE)
	.common_panel_modes = &s6e3hab_hubble_preliminary_display_modes,
#endif
	.vrrtbl = s6e3hab_hubble_preliminary_vrrtbl,
	.nr_vrrtbl = ARRAY_SIZE(s6e3hab_hubble_preliminary_vrrtbl),
	.maptbl = hubble1_a3_s0_maptbl,
	.nr_maptbl = ARRAY_SIZE(hubble1_a3_s0_maptbl),
	.seqtbl = hubble1_a3_s0_preliminary_seqtbl,
	.nr_seqtbl = ARRAY_SIZE(hubble1_a3_s0_preliminary_seqtbl),
	.rditbl = s6e3hab_rditbl,
	.nr_rditbl = ARRAY_SIZE(s6e3hab_rditbl),
	.restbl = s6e3hab_restbl,
	.nr_restbl = ARRAY_SIZE(s6e3hab_restbl),
	.dumpinfo = s6e3hab_dmptbl,
	.nr_dumpinfo = ARRAY_SIZE(s6e3hab_dmptbl),
#ifdef CONFIG_EXYNOS_DECON_MDNIE_LITE
	.mdnie_tune = &s6e3hab_hubble1_a3_s0_mdnie_tune,
#endif
	.panel_dim_info = {
		[PANEL_BL_SUBDEV_TYPE_DISP] = &s6e3hab_hubble1_a3_s0_panel_dimming_info,
#ifdef CONFIG_SUPPORT_HMD
		[PANEL_BL_SUBDEV_TYPE_HMD] = &s6e3hab_hubble1_a3_s0_panel_hmd_dimming_info,
#endif
#ifdef CONFIG_SUPPORT_AOD_BL
		[PANEL_BL_SUBDEV_TYPE_AOD] = &s6e3hab_hubble1_a3_s0_panel_aod_dimming_info,
#endif
	},
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	.copr_data = &s6e3hab_hubble1_a3_s0_copr_data,
#endif
#ifdef CONFIG_EXTEND_LIVE_CLOCK
	.aod_tune = &s6e3hab_hubble1_aod,
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	.poc_data = &s6e3hab_hubble_preliminary_poc_data,
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
	.spi_data_tbl = s6e3hab_hubble1_a3_s0_spi_data_list,
	.nr_spi_data_tbl = ARRAY_SIZE(s6e3hab_hubble1_a3_s0_spi_data_list),
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	.df_freq_tbl = x1_dynamic_freq_set,
#endif
#ifdef CONFIG_SUPPORT_DISPLAY_PROFILER
	.profile_tune = &hab_profiler_tune,
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	.mafpc_info = &s6e3hab_hubble_mafpc,
#endif
};

struct common_panel_info s6e3hab_hubble1_a3_s0_default_osc_96_5m_panel_info = {
	.ldi_name = "s6e3hab",
	.name = "s6e3hab_hubble1_a3_s0_default_osc_96_5m",
	.model = "AMB675TG01",
	.vendor = "SDC",
	.id = 0x810002,
	.rev = 0,
	.ddi_props = {
		.gpara = (DDI_SUPPORT_WRITE_GPARA | DDI_SUPPORT_POINT_GPARA),
		.err_fg_recovery = true,
		.support_vrr = true,
	},
#ifdef CONFIG_SUPPORT_DSU
	.mres = {
		.nr_resol = ARRAY_SIZE(s6e3hab_hubble_default_resol),
		.resol = s6e3hab_hubble_default_resol,
	},
#endif
#if defined(CONFIG_PANEL_DISPLAY_MODE)
	.common_panel_modes = &s6e3hab_hubble_display_modes,
#endif
	.vrrtbl = s6e3hab_hubble_default_vrrtbl,
	.nr_vrrtbl = ARRAY_SIZE(s6e3hab_hubble_default_vrrtbl),
	.maptbl = hubble1_a3_s0_maptbl,
	.nr_maptbl = ARRAY_SIZE(hubble1_a3_s0_maptbl),
	.seqtbl = hubble1_a3_s0_osc_96_5m_seqtbl,
	.nr_seqtbl = ARRAY_SIZE(hubble1_a3_s0_osc_96_5m_seqtbl),
	.rditbl = s6e3hab_rditbl,
	.nr_rditbl = ARRAY_SIZE(s6e3hab_rditbl),
	.restbl = s6e3hab_restbl,
	.nr_restbl = ARRAY_SIZE(s6e3hab_restbl),
	.dumpinfo = s6e3hab_dmptbl,
	.nr_dumpinfo = ARRAY_SIZE(s6e3hab_dmptbl),
#ifdef CONFIG_EXYNOS_DECON_MDNIE_LITE
	.mdnie_tune = &s6e3hab_hubble1_a3_s0_mdnie_tune,
#endif
	.panel_dim_info = {
		[PANEL_BL_SUBDEV_TYPE_DISP] = &s6e3hab_hubble1_a3_s0_panel_dimming_info,
#ifdef CONFIG_SUPPORT_HMD
		[PANEL_BL_SUBDEV_TYPE_HMD] = &s6e3hab_hubble1_a3_s0_panel_hmd_dimming_info,
#endif
#ifdef CONFIG_SUPPORT_AOD_BL
		[PANEL_BL_SUBDEV_TYPE_AOD] = &s6e3hab_hubble1_a3_s0_panel_aod_dimming_info,
#endif
	},
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	.copr_data = &s6e3hab_hubble1_a3_s0_copr_data,
#endif
#ifdef CONFIG_EXTEND_LIVE_CLOCK
	.aod_tune = &s6e3hab_hubble1_aod,
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	.poc_data = &s6e3hab_hubble_poc_data,
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
	.spi_data_tbl = s6e3hab_hubble1_a3_s0_spi_data_list,
	.nr_spi_data_tbl = ARRAY_SIZE(s6e3hab_hubble1_a3_s0_spi_data_list),
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	.df_freq_tbl = x1_dynamic_freq_set,
#endif
#ifdef CONFIG_SUPPORT_DISPLAY_PROFILER
	.profile_tune = &hab_profiler_tune,
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	.mafpc_info = &s6e3hab_hubble_mafpc,
#endif
};

struct common_panel_info s6e3hab_hubble1_a3_s0_default_panel_info = {
	.ldi_name = "s6e3hab",
	.name = "s6e3hab_hubble1_a3_s0_default",
	.model = "AMB675TG01",
	.vendor = "SDC",
	.id = 0x810042,
	.rev = 0,
	.ddi_props = {
		.gpara = (DDI_SUPPORT_WRITE_GPARA | DDI_SUPPORT_POINT_GPARA),
		.err_fg_recovery = false,
		.support_vrr = true,
	},
#ifdef CONFIG_SUPPORT_DSU
	.mres = {
		.nr_resol = ARRAY_SIZE(s6e3hab_hubble_default_resol),
		.resol = s6e3hab_hubble_default_resol,
	},
#endif
#if defined(CONFIG_PANEL_DISPLAY_MODE)
	.common_panel_modes = &s6e3hab_hubble_display_modes,
#endif
	.vrrtbl = s6e3hab_hubble_default_vrrtbl,
	.nr_vrrtbl = ARRAY_SIZE(s6e3hab_hubble_default_vrrtbl),
	.maptbl = hubble1_a3_s0_maptbl,
	.nr_maptbl = ARRAY_SIZE(hubble1_a3_s0_maptbl),
	.seqtbl = hubble1_a3_s0_seqtbl,
	.nr_seqtbl = ARRAY_SIZE(hubble1_a3_s0_seqtbl),
	.rditbl = s6e3hab_rditbl,
	.nr_rditbl = ARRAY_SIZE(s6e3hab_rditbl),
	.restbl = s6e3hab_restbl,
	.nr_restbl = ARRAY_SIZE(s6e3hab_restbl),
	.dumpinfo = s6e3hab_dmptbl,
	.nr_dumpinfo = ARRAY_SIZE(s6e3hab_dmptbl),
#ifdef CONFIG_EXYNOS_DECON_MDNIE_LITE
	.mdnie_tune = &s6e3hab_hubble1_a3_s0_mdnie_tune,
#endif
	.panel_dim_info = {
		[PANEL_BL_SUBDEV_TYPE_DISP] = &s6e3hab_hubble1_a3_s0_panel_dimming_info,
#ifdef CONFIG_SUPPORT_HMD
		[PANEL_BL_SUBDEV_TYPE_HMD] = &s6e3hab_hubble1_a3_s0_panel_hmd_dimming_info,
#endif
#ifdef CONFIG_SUPPORT_AOD_BL
		[PANEL_BL_SUBDEV_TYPE_AOD] = &s6e3hab_hubble1_a3_s0_panel_aod_dimming_info,
#endif
	},
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	.copr_data = &s6e3hab_hubble1_a3_s0_copr_data,
#endif
#ifdef CONFIG_EXTEND_LIVE_CLOCK
	.aod_tune = &s6e3hab_hubble1_aod,
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	.poc_data = &s6e3hab_hubble_poc_data,
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
	.spi_data_tbl = s6e3hab_hubble1_a3_s0_spi_data_list,
	.nr_spi_data_tbl = ARRAY_SIZE(s6e3hab_hubble1_a3_s0_spi_data_list),
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	.df_freq_tbl = x1_dynamic_freq_set,
#endif
#ifdef CONFIG_SUPPORT_DISPLAY_PROFILER
	.profile_tune = &hab_profiler_tune,
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	.mafpc_info = &s6e3hab_hubble_mafpc,
#endif
};

struct common_panel_info s6e3hab_hubble1_a3_s0_default_osc_96_5m_rev03_panel_info = {
	.ldi_name = "s6e3hab",
	.name = "s6e3hab_hubble1_a3_s0_default_osc_96_5m_rev03",
	.model = "AMB675TG01",
	.vendor = "SDC",
	.id = 0x810003,
	.rev = 0,
	.ddi_props = {
		.gpara = (DDI_SUPPORT_WRITE_GPARA | DDI_SUPPORT_POINT_GPARA),
		.err_fg_recovery = true,
		.support_vrr = true,
	},
#ifdef CONFIG_SUPPORT_DSU
	.mres = {
		.nr_resol = ARRAY_SIZE(s6e3hab_hubble_rev03_resol),
		.resol = s6e3hab_hubble_rev03_resol,
	},
#endif
#if defined(CONFIG_PANEL_DISPLAY_MODE)
	.common_panel_modes = &s6e3hab_hubble_rev03_display_modes,
#endif
	.vrrtbl = s6e3hab_hubble_rev03_vrrtbl,
	.nr_vrrtbl = ARRAY_SIZE(s6e3hab_hubble_rev03_vrrtbl),
	.maptbl = hubble1_a3_s0_maptbl,
	.nr_maptbl = ARRAY_SIZE(hubble1_a3_s0_maptbl),
	.seqtbl = hubble1_a3_s0_osc_96_5m_seqtbl,
	.nr_seqtbl = ARRAY_SIZE(hubble1_a3_s0_osc_96_5m_seqtbl),
	.rditbl = s6e3hab_rditbl,
	.nr_rditbl = ARRAY_SIZE(s6e3hab_rditbl),
	.restbl = s6e3hab_restbl,
	.nr_restbl = ARRAY_SIZE(s6e3hab_restbl),
	.dumpinfo = s6e3hab_dmptbl,
	.nr_dumpinfo = ARRAY_SIZE(s6e3hab_dmptbl),
#ifdef CONFIG_EXYNOS_DECON_MDNIE_LITE
	.mdnie_tune = &s6e3hab_hubble1_a3_s0_mdnie_tune,
#endif
	.panel_dim_info = {
		[PANEL_BL_SUBDEV_TYPE_DISP] = &s6e3hab_hubble1_a3_s0_panel_dimming_info,
#ifdef CONFIG_SUPPORT_HMD
		[PANEL_BL_SUBDEV_TYPE_HMD] = &s6e3hab_hubble1_a3_s0_panel_hmd_dimming_info,
#endif
#ifdef CONFIG_SUPPORT_AOD_BL
		[PANEL_BL_SUBDEV_TYPE_AOD] = &s6e3hab_hubble1_a3_s0_panel_aod_dimming_info,
#endif
	},
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	.copr_data = &s6e3hab_hubble1_a3_s0_copr_data,
#endif
#ifdef CONFIG_EXTEND_LIVE_CLOCK
	.aod_tune = &s6e3hab_hubble1_aod,
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	.poc_data = &s6e3hab_hubble_poc_data,
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
	.spi_data_tbl = s6e3hab_hubble1_a3_s0_spi_data_list,
	.nr_spi_data_tbl = ARRAY_SIZE(s6e3hab_hubble1_a3_s0_spi_data_list),
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	.df_freq_tbl = x1_dynamic_freq_set,
#endif
#ifdef CONFIG_SUPPORT_DISPLAY_PROFILER
	.profile_tune = &hab_profiler_tune,
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	.mafpc_info = &s6e3hab_hubble_mafpc,
#endif
};

struct common_panel_info s6e3hab_hubble1_a3_s0_default_rev03_panel_info = {
	.ldi_name = "s6e3hab",
	.name = "s6e3hab_hubble1_a3_s0_default_rev03",
	.model = "AMB675TG01",
	.vendor = "SDC",
	.id = 0x810043,
	.rev = 0,
	.ddi_props = {
		.gpara = (DDI_SUPPORT_WRITE_GPARA | DDI_SUPPORT_POINT_GPARA),
		.err_fg_recovery = false,
		.support_vrr = true,
	},
#ifdef CONFIG_SUPPORT_DSU
	.mres = {
		.nr_resol = ARRAY_SIZE(s6e3hab_hubble_rev03_resol),
		.resol = s6e3hab_hubble_rev03_resol,
	},
#endif
#if defined(CONFIG_PANEL_DISPLAY_MODE)
	.common_panel_modes = &s6e3hab_hubble_rev03_display_modes,
#endif
	.vrrtbl = s6e3hab_hubble_rev03_vrrtbl,
	.nr_vrrtbl = ARRAY_SIZE(s6e3hab_hubble_rev03_vrrtbl),
	.maptbl = hubble1_a3_s0_maptbl,
	.nr_maptbl = ARRAY_SIZE(hubble1_a3_s0_maptbl),
	.seqtbl = hubble1_a3_s0_seqtbl,
	.nr_seqtbl = ARRAY_SIZE(hubble1_a3_s0_seqtbl),
	.rditbl = s6e3hab_rditbl,
	.nr_rditbl = ARRAY_SIZE(s6e3hab_rditbl),
	.restbl = s6e3hab_restbl,
	.nr_restbl = ARRAY_SIZE(s6e3hab_restbl),
	.dumpinfo = s6e3hab_dmptbl,
	.nr_dumpinfo = ARRAY_SIZE(s6e3hab_dmptbl),
#ifdef CONFIG_EXYNOS_DECON_MDNIE_LITE
	.mdnie_tune = &s6e3hab_hubble1_a3_s0_mdnie_tune,
#endif
	.panel_dim_info = {
		[PANEL_BL_SUBDEV_TYPE_DISP] = &s6e3hab_hubble1_a3_s0_panel_dimming_info,
#ifdef CONFIG_SUPPORT_HMD
		[PANEL_BL_SUBDEV_TYPE_HMD] = &s6e3hab_hubble1_a3_s0_panel_hmd_dimming_info,
#endif
#ifdef CONFIG_SUPPORT_AOD_BL
		[PANEL_BL_SUBDEV_TYPE_AOD] = &s6e3hab_hubble1_a3_s0_panel_aod_dimming_info,
#endif
	},
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	.copr_data = &s6e3hab_hubble1_a3_s0_copr_data,
#endif
#ifdef CONFIG_EXTEND_LIVE_CLOCK
	.aod_tune = &s6e3hab_hubble1_aod,
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	.poc_data = &s6e3hab_hubble_poc_data,
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
	.spi_data_tbl = s6e3hab_hubble1_a3_s0_spi_data_list,
	.nr_spi_data_tbl = ARRAY_SIZE(s6e3hab_hubble1_a3_s0_spi_data_list),
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	.df_freq_tbl = x1_dynamic_freq_set,
#endif
#ifdef CONFIG_SUPPORT_DISPLAY_PROFILER
	.profile_tune = &hab_profiler_tune,
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	.mafpc_info = &s6e3hab_hubble_mafpc,
#endif
};
#endif /* __S6E3HAB_HUBBLE1_A3_S0_PANEL_H__ */
